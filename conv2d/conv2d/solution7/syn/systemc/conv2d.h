// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_HH_
#define _conv2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv2d_mux_255_8_bkb.h"
#include "conv2d_mux_94_8_1_1.h"
#include "conv2d_mac_muladdcud.h"

namespace ap_rtl {

struct conv2d : public sc_module {
    // Port declarations 45
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > a_0_0;
    sc_in< sc_lv<8> > a_0_1;
    sc_in< sc_lv<8> > a_0_2;
    sc_in< sc_lv<8> > a_0_3;
    sc_in< sc_lv<8> > a_0_4;
    sc_in< sc_lv<8> > a_1_0;
    sc_in< sc_lv<8> > a_1_1;
    sc_in< sc_lv<8> > a_1_2;
    sc_in< sc_lv<8> > a_1_3;
    sc_in< sc_lv<8> > a_1_4;
    sc_in< sc_lv<8> > a_2_0;
    sc_in< sc_lv<8> > a_2_1;
    sc_in< sc_lv<8> > a_2_2;
    sc_in< sc_lv<8> > a_2_3;
    sc_in< sc_lv<8> > a_2_4;
    sc_in< sc_lv<8> > a_3_0;
    sc_in< sc_lv<8> > a_3_1;
    sc_in< sc_lv<8> > a_3_2;
    sc_in< sc_lv<8> > a_3_3;
    sc_in< sc_lv<8> > a_3_4;
    sc_in< sc_lv<8> > a_4_0;
    sc_in< sc_lv<8> > a_4_1;
    sc_in< sc_lv<8> > a_4_2;
    sc_in< sc_lv<8> > a_4_3;
    sc_in< sc_lv<8> > a_4_4;
    sc_in< sc_lv<8> > b_0_0;
    sc_in< sc_lv<8> > b_0_1;
    sc_in< sc_lv<8> > b_0_2;
    sc_in< sc_lv<8> > b_1_0;
    sc_in< sc_lv<8> > b_1_1;
    sc_in< sc_lv<8> > b_1_2;
    sc_in< sc_lv<8> > b_2_0;
    sc_in< sc_lv<8> > b_2_1;
    sc_in< sc_lv<8> > b_2_2;
    sc_out< sc_lv<4> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<16> > res_d0;
    sc_in< sc_lv<16> > res_q0;


    // Module declarations
    conv2d(sc_module_name name);
    SC_HAS_PROCESS(conv2d);

    ~conv2d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2d_mux_255_8_bkb<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8>* conv2d_mux_255_8_bkb_U1;
    conv2d_mux_94_8_1_1<1,1,8,8,8,8,8,8,8,8,8,4,8>* conv2d_mux_94_8_1_1_U2;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U3;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > i_1_fu_381_p2;
    sc_signal< sc_lv<2> > i_1_reg_640;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > tmp_11_fu_403_p2;
    sc_signal< sc_lv<5> > tmp_11_reg_645;
    sc_signal< sc_lv<1> > exitcond3_fu_375_p2;
    sc_signal< sc_lv<3> > tmp_1_fu_409_p1;
    sc_signal< sc_lv<3> > tmp_1_reg_650;
    sc_signal< sc_lv<2> > j_1_fu_419_p2;
    sc_signal< sc_lv<2> > j_1_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > res_addr_reg_663;
    sc_signal< sc_lv<1> > exitcond2_fu_413_p2;
    sc_signal< sc_lv<3> > tmp_4_fu_439_p1;
    sc_signal< sc_lv<3> > tmp_4_reg_668;
    sc_signal< sc_lv<2> > ki_1_fu_449_p2;
    sc_signal< sc_lv<2> > ki_1_reg_676;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > tmp_11_cast_fu_464_p1;
    sc_signal< sc_lv<4> > tmp_11_cast_reg_681;
    sc_signal< sc_lv<1> > exitcond1_fu_443_p2;
    sc_signal< sc_lv<5> > p_shl5_fu_468_p3;
    sc_signal< sc_lv<5> > p_shl5_reg_686;
    sc_signal< sc_lv<4> > tmp_16_fu_488_p2;
    sc_signal< sc_lv<4> > tmp_16_reg_691;
    sc_signal< sc_lv<2> > kj_1_fu_500_p2;
    sc_signal< sc_lv<2> > kj_1_reg_699;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_18_fu_533_p27;
    sc_signal< sc_lv<8> > tmp_18_reg_704;
    sc_signal< sc_lv<1> > exitcond_fu_494_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_598_p11;
    sc_signal< sc_lv<8> > tmp_21_reg_709;
    sc_signal< sc_lv<2> > i_reg_331;
    sc_signal< sc_lv<2> > j_reg_342;
    sc_signal< sc_lv<2> > ki_reg_353;
    sc_signal< sc_lv<2> > kj_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_23_cast_fu_434_p1;
    sc_signal< sc_lv<16> > grp_fu_628_p3;
    sc_signal< sc_lv<4> > tmp_3_fu_391_p3;
    sc_signal< sc_lv<5> > p_shl1_cast_fu_399_p1;
    sc_signal< sc_lv<5> > tmp_cast_fu_387_p1;
    sc_signal< sc_lv<5> > tmp_3_cast_fu_425_p1;
    sc_signal< sc_lv<5> > tmp_22_fu_429_p2;
    sc_signal< sc_lv<3> > tmp_6_fu_455_p1;
    sc_signal< sc_lv<3> > tmp_7_fu_459_p2;
    sc_signal< sc_lv<4> > p_shl_fu_480_p3;
    sc_signal< sc_lv<4> > tmp_15_fu_476_p1;
    sc_signal< sc_lv<3> > tmp_s_fu_506_p1;
    sc_signal< sc_lv<3> > tmp_2_fu_510_p2;
    sc_signal< sc_lv<4> > tmp_16_cast_fu_515_p1;
    sc_signal< sc_lv<4> > tmp1_fu_519_p2;
    sc_signal< sc_lv<5> > tmp1_cast_fu_524_p1;
    sc_signal< sc_lv<5> > tmp_18_fu_533_p26;
    sc_signal< sc_lv<4> > tmp_19_fu_589_p1;
    sc_signal< sc_lv<4> > tmp_21_fu_598_p10;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_443_p2();
    void thread_exitcond2_fu_413_p2();
    void thread_exitcond3_fu_375_p2();
    void thread_exitcond_fu_494_p2();
    void thread_i_1_fu_381_p2();
    void thread_j_1_fu_419_p2();
    void thread_ki_1_fu_449_p2();
    void thread_kj_1_fu_500_p2();
    void thread_p_shl1_cast_fu_399_p1();
    void thread_p_shl5_fu_468_p3();
    void thread_p_shl_fu_480_p3();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_tmp1_cast_fu_524_p1();
    void thread_tmp1_fu_519_p2();
    void thread_tmp_11_cast_fu_464_p1();
    void thread_tmp_11_fu_403_p2();
    void thread_tmp_15_fu_476_p1();
    void thread_tmp_16_cast_fu_515_p1();
    void thread_tmp_16_fu_488_p2();
    void thread_tmp_18_fu_533_p26();
    void thread_tmp_19_fu_589_p1();
    void thread_tmp_1_fu_409_p1();
    void thread_tmp_21_fu_598_p10();
    void thread_tmp_22_fu_429_p2();
    void thread_tmp_23_cast_fu_434_p1();
    void thread_tmp_2_fu_510_p2();
    void thread_tmp_3_cast_fu_425_p1();
    void thread_tmp_3_fu_391_p3();
    void thread_tmp_4_fu_439_p1();
    void thread_tmp_6_fu_455_p1();
    void thread_tmp_7_fu_459_p2();
    void thread_tmp_cast_fu_387_p1();
    void thread_tmp_s_fu_506_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
