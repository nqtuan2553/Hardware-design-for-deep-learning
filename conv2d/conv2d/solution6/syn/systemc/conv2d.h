// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_HH_
#define _conv2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv2d_mac_muladdbkb.h"

namespace ap_rtl {

struct conv2d : public sc_module {
    // Port declarations 58
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > a_0_address0;
    sc_out< sc_logic > a_0_ce0;
    sc_in< sc_lv<8> > a_0_q0;
    sc_out< sc_lv<3> > a_0_address1;
    sc_out< sc_logic > a_0_ce1;
    sc_in< sc_lv<8> > a_0_q1;
    sc_out< sc_lv<3> > a_1_address0;
    sc_out< sc_logic > a_1_ce0;
    sc_in< sc_lv<8> > a_1_q0;
    sc_out< sc_lv<3> > a_1_address1;
    sc_out< sc_logic > a_1_ce1;
    sc_in< sc_lv<8> > a_1_q1;
    sc_out< sc_lv<3> > a_2_address0;
    sc_out< sc_logic > a_2_ce0;
    sc_in< sc_lv<8> > a_2_q0;
    sc_out< sc_lv<3> > a_2_address1;
    sc_out< sc_logic > a_2_ce1;
    sc_in< sc_lv<8> > a_2_q1;
    sc_out< sc_lv<3> > a_3_address0;
    sc_out< sc_logic > a_3_ce0;
    sc_in< sc_lv<8> > a_3_q0;
    sc_out< sc_lv<3> > a_3_address1;
    sc_out< sc_logic > a_3_ce1;
    sc_in< sc_lv<8> > a_3_q1;
    sc_out< sc_lv<3> > a_4_address0;
    sc_out< sc_logic > a_4_ce0;
    sc_in< sc_lv<8> > a_4_q0;
    sc_out< sc_lv<3> > a_4_address1;
    sc_out< sc_logic > a_4_ce1;
    sc_in< sc_lv<8> > a_4_q1;
    sc_out< sc_lv<2> > b_0_address0;
    sc_out< sc_logic > b_0_ce0;
    sc_in< sc_lv<8> > b_0_q0;
    sc_out< sc_lv<2> > b_0_address1;
    sc_out< sc_logic > b_0_ce1;
    sc_in< sc_lv<8> > b_0_q1;
    sc_out< sc_lv<2> > b_1_address0;
    sc_out< sc_logic > b_1_ce0;
    sc_in< sc_lv<8> > b_1_q0;
    sc_out< sc_lv<2> > b_1_address1;
    sc_out< sc_logic > b_1_ce1;
    sc_in< sc_lv<8> > b_1_q1;
    sc_out< sc_lv<2> > b_2_address0;
    sc_out< sc_logic > b_2_ce0;
    sc_in< sc_lv<8> > b_2_q0;
    sc_out< sc_lv<2> > b_2_address1;
    sc_out< sc_logic > b_2_ce1;
    sc_in< sc_lv<8> > b_2_q1;
    sc_out< sc_lv<4> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<16> > res_d0;


    // Module declarations
    conv2d(sc_module_name name);
    SC_HAS_PROCESS(conv2d);

    ~conv2d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U1;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > indvar_flatten_reg_426;
    sc_signal< sc_lv<2> > i_reg_437;
    sc_signal< sc_lv<2> > j_reg_448;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_933;
    sc_signal< sc_lv<2> > j_mid2_reg_942;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_597_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_933_pp0_iter1_reg;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_603_p2;
    sc_signal< sc_lv<4> > indvar_flatten_next_reg_937;
    sc_signal< sc_lv<2> > j_mid2_fu_615_p3;
    sc_signal< sc_lv<2> > j_mid2_reg_942_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_mid2_fu_623_p3;
    sc_signal< sc_lv<2> > tmp_mid2_reg_948;
    sc_signal< sc_lv<2> > tmp_mid2_reg_948_pp0_iter1_reg;
    sc_signal< sc_lv<64> > tmp_8_1_mid2_cast_fu_658_p1;
    sc_signal< sc_lv<64> > tmp_8_1_mid2_cast_reg_955;
    sc_signal< sc_lv<64> > tmp_8_2_mid2_fu_675_p1;
    sc_signal< sc_lv<64> > tmp_8_2_mid2_reg_965;
    sc_signal< sc_lv<3> > a_2_addr_1_gep_fu_182_p3;
    sc_signal< sc_lv<3> > a_1_addr_1_gep_fu_190_p3;
    sc_signal< sc_lv<3> > a_3_addr_1_gep_fu_214_p3;
    sc_signal< sc_lv<3> > a_2_addr_2_gep_fu_222_p3;
    sc_signal< sc_lv<3> > a_3_addr_5_gep_fu_312_p3;
    sc_signal< sc_lv<3> > a_2_addr_8_gep_fu_320_p3;
    sc_signal< sc_lv<3> > a_3_addr_3_gep_fu_366_p3;
    sc_signal< sc_lv<3> > a_2_addr_5_gep_fu_374_p3;
    sc_signal< sc_lv<8> > b_1_load_2_reg_1112;
    sc_signal< sc_lv<8> > b_2_load_2_reg_1122;
    sc_signal< sc_lv<16> > tmp2_fu_741_p2;
    sc_signal< sc_lv<16> > tmp2_reg_1127;
    sc_signal< sc_lv<16> > tmp3_fu_747_p2;
    sc_signal< sc_lv<16> > tmp3_reg_1132;
    sc_signal< sc_lv<2> > j_1_fu_753_p2;
    sc_signal< sc_lv<2> > j_1_reg_1137;
    sc_signal< sc_lv<16> > tmp_13_1_1_fu_766_p2;
    sc_signal< sc_lv<16> > tmp_13_1_1_reg_1142;
    sc_signal< sc_lv<16> > tmp_13_1_2_fu_780_p2;
    sc_signal< sc_lv<16> > tmp_13_1_2_reg_1147;
    sc_signal< sc_lv<16> > tmp6_fu_820_p2;
    sc_signal< sc_lv<16> > tmp6_reg_1152;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_430_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_i_phi_fu_441_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_j_phi_fu_452_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568;
    sc_signal< sc_lv<64> > tmp_mid2_cast_fu_631_p1;
    sc_signal< sc_lv<64> > tmp_7_cast_fu_854_p1;
    sc_signal< sc_lv<1> > exitcond_fu_609_p2;
    sc_signal< sc_lv<2> > i_1_fu_591_p2;
    sc_signal< sc_lv<2> > tmp_7_1_mid1_fu_644_p2;
    sc_signal< sc_lv<2> > tmp_8_1_mid2_fu_650_p3;
    sc_signal< sc_lv<3> > tmp_8_2_mid2_v_v_fu_665_p1;
    sc_signal< sc_lv<3> > tmp_8_2_mid2_v_fu_669_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_693_p0;
    sc_signal< sc_lv<8> > tmp_4_fu_693_p1;
    sc_signal< sc_lv<8> > tmp_13_0_1_fu_707_p0;
    sc_signal< sc_lv<8> > tmp_13_0_1_fu_707_p1;
    sc_signal< sc_lv<8> > tmp_13_0_2_fu_721_p0;
    sc_signal< sc_lv<8> > tmp_13_0_2_fu_721_p1;
    sc_signal< sc_lv<8> > tmp_13_1_fu_735_p0;
    sc_signal< sc_lv<8> > tmp_13_1_fu_735_p1;
    sc_signal< sc_lv<16> > tmp_4_fu_693_p2;
    sc_signal< sc_lv<16> > tmp_13_0_1_fu_707_p2;
    sc_signal< sc_lv<16> > tmp_13_0_2_fu_721_p2;
    sc_signal< sc_lv<16> > tmp_13_1_fu_735_p2;
    sc_signal< sc_lv<8> > tmp_13_1_1_fu_766_p0;
    sc_signal< sc_lv<8> > tmp_13_1_1_fu_766_p1;
    sc_signal< sc_lv<8> > tmp_13_1_2_fu_780_p0;
    sc_signal< sc_lv<8> > tmp_13_1_2_fu_780_p1;
    sc_signal< sc_lv<8> > tmp_13_2_fu_794_p0;
    sc_signal< sc_lv<8> > tmp_13_2_fu_794_p1;
    sc_signal< sc_lv<8> > tmp_13_2_1_fu_807_p0;
    sc_signal< sc_lv<8> > tmp_13_2_1_fu_807_p1;
    sc_signal< sc_lv<16> > grp_fu_879_p3;
    sc_signal< sc_lv<16> > tmp_13_2_fu_794_p2;
    sc_signal< sc_lv<4> > tmp_fu_828_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_835_p1;
    sc_signal< sc_lv<5> > tmp_mid2_cast5_fu_825_p1;
    sc_signal< sc_lv<5> > tmp_3_cast_fu_845_p1;
    sc_signal< sc_lv<5> > tmp_6_fu_839_p2;
    sc_signal< sc_lv<5> > tmp_7_fu_848_p2;
    sc_signal< sc_lv<16> > tmp5_fu_863_p2;
    sc_signal< sc_lv<16> > tmp4_fu_867_p2;
    sc_signal< sc_lv<16> > tmp1_fu_859_p2;
    sc_signal< sc_lv<16> > grp_fu_879_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_624;
    sc_signal< bool > ap_condition_628;
    sc_signal< bool > ap_condition_633;
    sc_signal< bool > ap_condition_637;
    sc_signal< bool > ap_condition_641;
    sc_signal< bool > ap_condition_646;
    sc_signal< bool > ap_condition_651;
    sc_signal< bool > ap_condition_656;
    sc_signal< bool > ap_condition_329;
    sc_signal< bool > ap_condition_160;
    sc_signal< bool > ap_condition_142;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_0_address0();
    void thread_a_0_address1();
    void thread_a_0_ce0();
    void thread_a_0_ce1();
    void thread_a_1_addr_1_gep_fu_190_p3();
    void thread_a_1_address0();
    void thread_a_1_address1();
    void thread_a_1_ce0();
    void thread_a_1_ce1();
    void thread_a_2_addr_1_gep_fu_182_p3();
    void thread_a_2_addr_2_gep_fu_222_p3();
    void thread_a_2_addr_5_gep_fu_374_p3();
    void thread_a_2_addr_8_gep_fu_320_p3();
    void thread_a_2_address0();
    void thread_a_2_address1();
    void thread_a_2_ce0();
    void thread_a_2_ce1();
    void thread_a_3_addr_1_gep_fu_214_p3();
    void thread_a_3_addr_3_gep_fu_366_p3();
    void thread_a_3_addr_5_gep_fu_312_p3();
    void thread_a_3_address0();
    void thread_a_3_address1();
    void thread_a_3_ce0();
    void thread_a_3_ce1();
    void thread_a_4_address0();
    void thread_a_4_address1();
    void thread_a_4_ce0();
    void thread_a_4_ce1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_condition_142();
    void thread_ap_condition_160();
    void thread_ap_condition_329();
    void thread_ap_condition_624();
    void thread_ap_condition_628();
    void thread_ap_condition_633();
    void thread_ap_condition_637();
    void thread_ap_condition_641();
    void thread_ap_condition_646();
    void thread_ap_condition_651();
    void thread_ap_condition_656();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6();
    void thread_ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6();
    void thread_ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6();
    void thread_ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6();
    void thread_ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6();
    void thread_ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6();
    void thread_ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6();
    void thread_ap_phi_mux_i_phi_fu_441_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_430_p4();
    void thread_ap_phi_mux_j_phi_fu_452_p4();
    void thread_ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459();
    void thread_ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473();
    void thread_ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487();
    void thread_ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501();
    void thread_ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557();
    void thread_ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568();
    void thread_ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515();
    void thread_ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529();
    void thread_ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543();
    void thread_ap_ready();
    void thread_b_0_address0();
    void thread_b_0_address1();
    void thread_b_0_ce0();
    void thread_b_0_ce1();
    void thread_b_1_address0();
    void thread_b_1_address1();
    void thread_b_1_ce0();
    void thread_b_1_ce1();
    void thread_b_2_address0();
    void thread_b_2_address1();
    void thread_b_2_ce0();
    void thread_b_2_ce1();
    void thread_exitcond_flatten_fu_597_p2();
    void thread_exitcond_fu_609_p2();
    void thread_grp_fu_879_p2();
    void thread_i_1_fu_591_p2();
    void thread_indvar_flatten_next_fu_603_p2();
    void thread_j_1_fu_753_p2();
    void thread_j_mid2_fu_615_p3();
    void thread_p_shl_cast_fu_835_p1();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_tmp1_fu_859_p2();
    void thread_tmp2_fu_741_p2();
    void thread_tmp3_fu_747_p2();
    void thread_tmp4_fu_867_p2();
    void thread_tmp5_fu_863_p2();
    void thread_tmp6_fu_820_p2();
    void thread_tmp_13_0_1_fu_707_p0();
    void thread_tmp_13_0_1_fu_707_p1();
    void thread_tmp_13_0_1_fu_707_p2();
    void thread_tmp_13_0_2_fu_721_p0();
    void thread_tmp_13_0_2_fu_721_p1();
    void thread_tmp_13_0_2_fu_721_p2();
    void thread_tmp_13_1_1_fu_766_p0();
    void thread_tmp_13_1_1_fu_766_p1();
    void thread_tmp_13_1_1_fu_766_p2();
    void thread_tmp_13_1_2_fu_780_p0();
    void thread_tmp_13_1_2_fu_780_p1();
    void thread_tmp_13_1_2_fu_780_p2();
    void thread_tmp_13_1_fu_735_p0();
    void thread_tmp_13_1_fu_735_p1();
    void thread_tmp_13_1_fu_735_p2();
    void thread_tmp_13_2_1_fu_807_p0();
    void thread_tmp_13_2_1_fu_807_p1();
    void thread_tmp_13_2_fu_794_p0();
    void thread_tmp_13_2_fu_794_p1();
    void thread_tmp_13_2_fu_794_p2();
    void thread_tmp_3_cast_fu_845_p1();
    void thread_tmp_4_fu_693_p0();
    void thread_tmp_4_fu_693_p1();
    void thread_tmp_4_fu_693_p2();
    void thread_tmp_6_fu_839_p2();
    void thread_tmp_7_1_mid1_fu_644_p2();
    void thread_tmp_7_cast_fu_854_p1();
    void thread_tmp_7_fu_848_p2();
    void thread_tmp_8_1_mid2_cast_fu_658_p1();
    void thread_tmp_8_1_mid2_fu_650_p3();
    void thread_tmp_8_2_mid2_fu_675_p1();
    void thread_tmp_8_2_mid2_v_fu_669_p2();
    void thread_tmp_8_2_mid2_v_v_fu_665_p1();
    void thread_tmp_fu_828_p3();
    void thread_tmp_mid2_cast5_fu_825_p1();
    void thread_tmp_mid2_cast_fu_631_p1();
    void thread_tmp_mid2_fu_623_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
