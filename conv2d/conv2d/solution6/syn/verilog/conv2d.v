// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.489250,HLS_SYN_LAT=21,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=147,HLS_SYN_LUT=1093}" *)

module conv2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        a_0_address1,
        a_0_ce1,
        a_0_q1,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        a_1_address1,
        a_1_ce1,
        a_1_q1,
        a_2_address0,
        a_2_ce0,
        a_2_q0,
        a_2_address1,
        a_2_ce1,
        a_2_q1,
        a_3_address0,
        a_3_ce0,
        a_3_q0,
        a_3_address1,
        a_3_ce1,
        a_3_q1,
        a_4_address0,
        a_4_ce0,
        a_4_q0,
        a_4_address1,
        a_4_ce1,
        a_4_q1,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_2_address1,
        b_2_ce1,
        b_2_q1,
        res_address0,
        res_ce0,
        res_we0,
        res_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] a_0_address0;
output   a_0_ce0;
input  [7:0] a_0_q0;
output  [2:0] a_0_address1;
output   a_0_ce1;
input  [7:0] a_0_q1;
output  [2:0] a_1_address0;
output   a_1_ce0;
input  [7:0] a_1_q0;
output  [2:0] a_1_address1;
output   a_1_ce1;
input  [7:0] a_1_q1;
output  [2:0] a_2_address0;
output   a_2_ce0;
input  [7:0] a_2_q0;
output  [2:0] a_2_address1;
output   a_2_ce1;
input  [7:0] a_2_q1;
output  [2:0] a_3_address0;
output   a_3_ce0;
input  [7:0] a_3_q0;
output  [2:0] a_3_address1;
output   a_3_ce1;
input  [7:0] a_3_q1;
output  [2:0] a_4_address0;
output   a_4_ce0;
input  [7:0] a_4_q0;
output  [2:0] a_4_address1;
output   a_4_ce1;
input  [7:0] a_4_q1;
output  [1:0] b_0_address0;
output   b_0_ce0;
input  [7:0] b_0_q0;
output  [1:0] b_0_address1;
output   b_0_ce1;
input  [7:0] b_0_q1;
output  [1:0] b_1_address0;
output   b_1_ce0;
input  [7:0] b_1_q0;
output  [1:0] b_1_address1;
output   b_1_ce1;
input  [7:0] b_1_q1;
output  [1:0] b_2_address0;
output   b_2_ce0;
input  [7:0] b_2_q0;
output  [1:0] b_2_address1;
output   b_2_ce1;
input  [7:0] b_2_q1;
output  [3:0] res_address0;
output   res_ce0;
output   res_we0;
output  [15:0] res_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] a_0_address0;
reg a_0_ce0;
reg a_0_ce1;
reg[2:0] a_1_address0;
reg a_1_ce0;
reg[2:0] a_1_address1;
reg a_1_ce1;
reg[2:0] a_2_address0;
reg a_2_ce0;
reg[2:0] a_2_address1;
reg a_2_ce1;
reg[2:0] a_3_address0;
reg a_3_ce0;
reg[2:0] a_3_address1;
reg a_3_ce1;
reg[2:0] a_4_address0;
reg a_4_ce0;
reg a_4_ce1;
reg[1:0] b_0_address0;
reg b_0_ce0;
reg b_0_ce1;
reg[1:0] b_1_address0;
reg b_1_ce0;
reg b_1_ce1;
reg[1:0] b_2_address0;
reg b_2_ce0;
reg b_2_ce1;
reg res_ce0;
reg res_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] indvar_flatten_reg_426;
reg   [1:0] i_reg_437;
reg   [1:0] j_reg_448;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond_flatten_reg_933;
reg   [1:0] j_mid2_reg_942;
wire   [0:0] exitcond_flatten_fu_597_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_933_pp0_iter1_reg;
wire   [3:0] indvar_flatten_next_fu_603_p2;
reg   [3:0] indvar_flatten_next_reg_937;
wire   [1:0] j_mid2_fu_615_p3;
reg   [1:0] j_mid2_reg_942_pp0_iter1_reg;
wire   [1:0] tmp_mid2_fu_623_p3;
reg   [1:0] tmp_mid2_reg_948;
reg   [1:0] tmp_mid2_reg_948_pp0_iter1_reg;
wire   [63:0] tmp_8_1_mid2_cast_fu_658_p1;
reg   [63:0] tmp_8_1_mid2_cast_reg_955;
wire   [63:0] tmp_8_2_mid2_fu_675_p1;
reg   [63:0] tmp_8_2_mid2_reg_965;
wire   [2:0] a_2_addr_1_gep_fu_182_p3;
wire   [2:0] a_1_addr_1_gep_fu_190_p3;
wire   [2:0] a_3_addr_1_gep_fu_214_p3;
wire   [2:0] a_2_addr_2_gep_fu_222_p3;
wire   [2:0] a_3_addr_5_gep_fu_312_p3;
wire   [2:0] a_2_addr_8_gep_fu_320_p3;
wire   [2:0] a_3_addr_3_gep_fu_366_p3;
wire   [2:0] a_2_addr_5_gep_fu_374_p3;
reg   [7:0] b_1_load_2_reg_1112;
reg  signed [7:0] b_2_load_2_reg_1122;
wire   [15:0] tmp2_fu_741_p2;
reg   [15:0] tmp2_reg_1127;
wire   [15:0] tmp3_fu_747_p2;
reg   [15:0] tmp3_reg_1132;
wire   [1:0] j_1_fu_753_p2;
reg   [1:0] j_1_reg_1137;
wire   [15:0] tmp_13_1_1_fu_766_p2;
reg   [15:0] tmp_13_1_1_reg_1142;
wire   [15:0] tmp_13_1_2_fu_780_p2;
reg   [15:0] tmp_13_1_2_reg_1147;
(* use_dsp48 = "no" *) wire   [15:0] tmp6_fu_820_p2;
reg   [15:0] tmp6_reg_1152;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_430_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_i_phi_fu_441_p4;
reg   [1:0] ap_phi_mux_j_phi_fu_452_p4;
reg   [7:0] ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459;
wire    ap_block_pp0_stage1;
reg   [7:0] ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473;
reg   [7:0] ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487;
reg   [7:0] ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501;
reg   [7:0] ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6;
wire   [7:0] ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515;
reg   [7:0] ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6;
wire   [7:0] ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529;
reg   [7:0] ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6;
wire   [7:0] ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543;
wire   [7:0] ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557;
reg   [7:0] ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557;
wire   [7:0] ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568;
reg  signed [7:0] ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568;
wire   [63:0] tmp_mid2_cast_fu_631_p1;
wire   [63:0] tmp_7_cast_fu_854_p1;
wire   [0:0] exitcond_fu_609_p2;
wire   [1:0] i_1_fu_591_p2;
wire   [1:0] tmp_7_1_mid1_fu_644_p2;
wire   [1:0] tmp_8_1_mid2_fu_650_p3;
wire   [2:0] tmp_8_2_mid2_v_v_fu_665_p1;
wire   [2:0] tmp_8_2_mid2_v_fu_669_p2;
wire  signed [7:0] tmp_4_fu_693_p0;
wire  signed [7:0] tmp_4_fu_693_p1;
wire  signed [7:0] tmp_13_0_1_fu_707_p0;
wire  signed [7:0] tmp_13_0_1_fu_707_p1;
wire  signed [7:0] tmp_13_0_2_fu_721_p0;
wire  signed [7:0] tmp_13_0_2_fu_721_p1;
wire  signed [7:0] tmp_13_1_fu_735_p0;
wire  signed [7:0] tmp_13_1_fu_735_p1;
wire   [15:0] tmp_4_fu_693_p2;
wire   [15:0] tmp_13_0_1_fu_707_p2;
wire   [15:0] tmp_13_0_2_fu_721_p2;
wire   [15:0] tmp_13_1_fu_735_p2;
wire  signed [7:0] tmp_13_1_1_fu_766_p0;
wire  signed [7:0] tmp_13_1_1_fu_766_p1;
wire  signed [7:0] tmp_13_1_2_fu_780_p0;
wire  signed [7:0] tmp_13_1_2_fu_780_p1;
wire  signed [7:0] tmp_13_2_fu_794_p0;
wire  signed [7:0] tmp_13_2_fu_794_p1;
wire  signed [7:0] tmp_13_2_1_fu_807_p0;
wire  signed [7:0] tmp_13_2_1_fu_807_p1;
wire  signed [15:0] grp_fu_879_p3;
wire   [15:0] tmp_13_2_fu_794_p2;
wire   [3:0] tmp_fu_828_p3;
wire   [4:0] p_shl_cast_fu_835_p1;
wire   [4:0] tmp_mid2_cast5_fu_825_p1;
wire   [4:0] tmp_3_cast_fu_845_p1;
wire   [4:0] tmp_6_fu_839_p2;
wire   [4:0] tmp_7_fu_848_p2;
wire   [15:0] tmp5_fu_863_p2;
wire   [15:0] tmp4_fu_867_p2;
wire   [15:0] tmp1_fu_859_p2;
wire   [15:0] grp_fu_879_p2;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_624;
reg    ap_condition_628;
reg    ap_condition_633;
reg    ap_condition_637;
reg    ap_condition_641;
reg    ap_condition_646;
reg    ap_condition_651;
reg    ap_condition_656;
reg    ap_condition_329;
reg    ap_condition_160;
reg    ap_condition_142;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U1(
    .din0(ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568),
    .din1(b_2_load_2_reg_1122),
    .din2(grp_fu_879_p2),
    .dout(grp_fu_879_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_142)) begin
        if ((1'b1 == ap_condition_160)) begin
            ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= a_3_q1;
        end else if (((j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= a_2_q1;
        end else if (((j_mid2_reg_942 == 2'd0) & (exitcond_flatten_reg_933 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= a_1_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_142)) begin
        if ((1'b1 == ap_condition_160)) begin
            ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= a_4_q1;
        end else if (((j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= a_3_q1;
        end else if (((j_mid2_reg_942 == 2'd0) & (exitcond_flatten_reg_933 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= a_2_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_933 == 1'd0))) begin
        i_reg_437 <= tmp_mid2_reg_948;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_437 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_933 == 1'd0))) begin
        indvar_flatten_reg_426 <= indvar_flatten_next_reg_937;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_426 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_933 == 1'd0))) begin
        j_reg_448 <= j_1_reg_1137;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_448 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        b_1_load_2_reg_1112 <= b_1_q1;
        b_2_load_2_reg_1122 <= b_2_q1;
        j_1_reg_1137 <= j_1_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_933 <= exitcond_flatten_fu_597_p2;
        exitcond_flatten_reg_933_pp0_iter1_reg <= exitcond_flatten_reg_933;
        j_mid2_reg_942_pp0_iter1_reg <= j_mid2_reg_942;
        tmp_13_1_1_reg_1142 <= tmp_13_1_1_fu_766_p2;
        tmp_13_1_2_reg_1147 <= tmp_13_1_2_fu_780_p2;
        tmp_mid2_reg_948_pp0_iter1_reg <= tmp_mid2_reg_948;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next_reg_937 <= indvar_flatten_next_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_597_p2 == 1'd0))) begin
        j_mid2_reg_942 <= j_mid2_fu_615_p3;
        tmp_8_1_mid2_cast_reg_955[1 : 0] <= tmp_8_1_mid2_cast_fu_658_p1[1 : 0];
        tmp_8_2_mid2_reg_965[2 : 0] <= tmp_8_2_mid2_fu_675_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp2_reg_1127 <= tmp2_fu_741_p2;
        tmp3_reg_1132 <= tmp3_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_933 == 1'd0))) begin
        tmp6_reg_1152 <= tmp6_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_597_p2 == 1'd0))) begin
        tmp_mid2_reg_948 <= tmp_mid2_fu_623_p3;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_0_address0 = tmp_8_2_mid2_reg_965;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_0_address0 = tmp_mid2_cast_fu_631_p1;
        end else begin
            a_0_address0 = 'bx;
        end
    end else begin
        a_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_0_ce0 = 1'b1;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_0_ce1 = 1'b1;
    end else begin
        a_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_637)) begin
            a_1_address0 = tmp_8_2_mid2_reg_965;
        end else if ((1'b1 == ap_condition_633)) begin
            a_1_address0 = tmp_8_1_mid2_cast_reg_955;
        end else if ((1'b1 == ap_condition_628)) begin
            a_1_address0 = a_1_addr_1_gep_fu_190_p3;
        end else if ((1'b1 == ap_condition_624)) begin
            a_1_address0 = tmp_mid2_cast_fu_631_p1;
        end else begin
            a_1_address0 = 'bx;
        end
    end else begin
        a_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_641)) begin
        if ((j_mid2_fu_615_p3 == 2'd0)) begin
            a_1_address1 = tmp_8_2_mid2_fu_675_p1;
        end else if ((j_mid2_fu_615_p3 == 2'd1)) begin
            a_1_address1 = tmp_8_1_mid2_cast_fu_658_p1;
        end else begin
            a_1_address1 = 'bx;
        end
    end else begin
        a_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd0) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd0) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_1_ce0 = 1'b1;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd0) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0)))) begin
        a_1_ce1 = 1'b1;
    end else begin
        a_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_651)) begin
            a_2_address0 = tmp_8_2_mid2_reg_965;
        end else if ((1'b1 == ap_condition_633)) begin
            a_2_address0 = a_2_addr_5_gep_fu_374_p3;
        end else if ((1'b1 == ap_condition_637)) begin
            a_2_address0 = tmp_8_1_mid2_cast_reg_955;
        end else if ((1'b1 == ap_condition_628)) begin
            a_2_address0 = a_2_addr_2_gep_fu_222_p3;
        end else if ((1'b1 == ap_condition_624)) begin
            a_2_address0 = a_2_addr_1_gep_fu_182_p3;
        end else if ((1'b1 == ap_condition_646)) begin
            a_2_address0 = tmp_mid2_cast_fu_631_p1;
        end else begin
            a_2_address0 = 'bx;
        end
    end else begin
        a_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_641)) begin
        if ((j_mid2_fu_615_p3 == 2'd0)) begin
            a_2_address1 = a_2_addr_8_gep_fu_320_p3;
        end else if ((j_mid2_fu_615_p3 == 2'd1)) begin
            a_2_address1 = tmp_8_2_mid2_fu_675_p1;
        end else if ((~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1))) begin
            a_2_address1 = tmp_8_1_mid2_cast_fu_658_p1;
        end else begin
            a_2_address1 = 'bx;
        end
    end else begin
        a_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd0) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0)) | (~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd0) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_2_ce0 = 1'b1;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd0) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0)))) begin
        a_2_ce1 = 1'b1;
    end else begin
        a_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_637)) begin
            a_3_address0 = a_3_addr_3_gep_fu_366_p3;
        end else if ((1'b1 == ap_condition_651)) begin
            a_3_address0 = tmp_8_1_mid2_cast_reg_955;
        end else if ((1'b1 == ap_condition_624)) begin
            a_3_address0 = a_3_addr_1_gep_fu_214_p3;
        end else if ((1'b1 == ap_condition_646)) begin
            a_3_address0 = tmp_mid2_cast_fu_631_p1;
        end else begin
            a_3_address0 = 'bx;
        end
    end else begin
        a_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_641)) begin
        if ((j_mid2_fu_615_p3 == 2'd1)) begin
            a_3_address1 = a_3_addr_5_gep_fu_312_p3;
        end else if ((~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1))) begin
            a_3_address1 = tmp_8_2_mid2_fu_675_p1;
        end else begin
            a_3_address1 = 'bx;
        end
    end else begin
        a_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0)) | (~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_3_ce0 = 1'b1;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_597_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0)))) begin
        a_3_ce1 = 1'b1;
    end else begin
        a_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_4_address0 = tmp_8_1_mid2_cast_reg_955;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_4_address0 = tmp_mid2_cast_fu_631_p1;
        end else begin
            a_4_address0 = 'bx;
        end
    end else begin
        a_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_4_ce0 = 1'b1;
    end else begin
        a_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_4_ce1 = 1'b1;
    end else begin
        a_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_597_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_656)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 = a_2_q0;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 = a_1_q0;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 = ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459;
        end
    end else begin
        ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 = ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_656)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 = a_3_q0;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 = a_2_q0;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 = a_1_q0;
        end else begin
            ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 = ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473;
        end
    end else begin
        ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 = ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_656)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 = a_4_q0;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 = a_3_q0;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 = a_2_q0;
        end else begin
            ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 = ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487;
        end
    end else begin
        ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 = ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_656)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 = a_2_q1;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 = a_1_q1;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 = a_0_q1;
        end else begin
            ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 = ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501;
        end
    end else begin
        ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 = ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_329)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 = a_3_q0;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 = a_2_q0;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 = a_1_q0;
        end else begin
            ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 = ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515;
        end
    end else begin
        ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 = ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_329)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 = a_4_q0;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 = a_3_q0;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 = a_2_q0;
        end else begin
            ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 = ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529;
        end
    end else begin
        ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 = ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_329)) begin
        if ((~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1))) begin
            ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 = a_2_q0;
        end else if ((j_mid2_reg_942 == 2'd1)) begin
            ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 = a_1_q0;
        end else if ((j_mid2_reg_942 == 2'd0)) begin
            ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 = ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543;
        end
    end else begin
        ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 = ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_933 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_441_p4 = tmp_mid2_reg_948;
    end else begin
        ap_phi_mux_i_phi_fu_441_p4 = i_reg_437;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_933 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_430_p4 = indvar_flatten_next_reg_937;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_430_p4 = indvar_flatten_reg_426;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_933 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_452_p4 = j_1_reg_1137;
    end else begin
        ap_phi_mux_j_phi_fu_452_p4 = j_reg_448;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_0_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_0_address0 = 64'd0;
        end else begin
            b_0_address0 = 'bx;
        end
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_1_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_1_address0 = 64'd0;
        end else begin
            b_1_address0 = 'bx;
        end
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_2_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_2_address0 = 64'd0;
        end else begin
            b_2_address0 = 'bx;
        end
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_2_ce1 = 1'b1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_597_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_597_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_address1 = tmp_8_1_mid2_cast_fu_658_p1;

assign a_1_addr_1_gep_fu_190_p3 = tmp_mid2_cast_fu_631_p1;

assign a_2_addr_1_gep_fu_182_p3 = tmp_mid2_cast_fu_631_p1;

assign a_2_addr_2_gep_fu_222_p3 = tmp_mid2_cast_fu_631_p1;

assign a_2_addr_5_gep_fu_374_p3 = tmp_8_1_mid2_cast_reg_955;

assign a_2_addr_8_gep_fu_320_p3 = tmp_8_2_mid2_fu_675_p1;

assign a_3_addr_1_gep_fu_214_p3 = tmp_mid2_cast_fu_631_p1;

assign a_3_addr_3_gep_fu_366_p3 = tmp_8_1_mid2_cast_reg_955;

assign a_3_addr_5_gep_fu_312_p3 = tmp_8_2_mid2_fu_675_p1;

assign a_4_address1 = tmp_8_2_mid2_fu_675_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_142 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_160 = (~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0));
end

always @ (*) begin
    ap_condition_329 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_933 == 1'd0));
end

always @ (*) begin
    ap_condition_624 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (j_mid2_fu_615_p3 == 2'd1) & (exitcond_flatten_fu_597_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_628 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (j_mid2_fu_615_p3 == 2'd0) & (exitcond_flatten_fu_597_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_633 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd0) & (exitcond_flatten_reg_933 == 1'd0));
end

always @ (*) begin
    ap_condition_637 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (j_mid2_reg_942 == 2'd1) & (exitcond_flatten_reg_933 == 1'd0));
end

always @ (*) begin
    ap_condition_641 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_597_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_646 = (~(j_mid2_fu_615_p3 == 2'd0) & ~(j_mid2_fu_615_p3 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_597_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_651 = (~(j_mid2_reg_942 == 2'd0) & ~(j_mid2_reg_942 == 2'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933 == 1'd0));
end

always @ (*) begin
    ap_condition_656 = ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_933 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459 = 'bx;

assign ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473 = 'bx;

assign ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487 = 'bx;

assign ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501 = 'bx;

assign ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557 = 'bx;

assign ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568 = 'bx;

assign ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515 = 'bx;

assign ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529 = 'bx;

assign ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543 = 'bx;

assign b_0_address1 = 64'd1;

assign b_1_address1 = 64'd2;

assign b_2_address1 = 64'd2;

assign exitcond_flatten_fu_597_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_430_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_fu_609_p2 = ((ap_phi_mux_j_phi_fu_452_p4 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_879_p2 = ($signed(tmp_13_2_1_fu_807_p0) * $signed(tmp_13_2_1_fu_807_p1));

assign i_1_fu_591_p2 = (ap_phi_mux_i_phi_fu_441_p4 + 2'd1);

assign indvar_flatten_next_fu_603_p2 = (ap_phi_mux_indvar_flatten_phi_fu_430_p4 + 4'd1);

assign j_1_fu_753_p2 = (j_mid2_reg_942 + 2'd1);

assign j_mid2_fu_615_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_j_phi_fu_452_p4);

assign p_shl_cast_fu_835_p1 = tmp_fu_828_p3;

assign res_address0 = tmp_7_cast_fu_854_p1;

assign res_d0 = (tmp4_fu_867_p2 + tmp1_fu_859_p2);

assign tmp1_fu_859_p2 = (tmp3_reg_1132 + tmp2_reg_1127);

assign tmp2_fu_741_p2 = (tmp_4_fu_693_p2 + tmp_13_0_1_fu_707_p2);

assign tmp3_fu_747_p2 = (tmp_13_0_2_fu_721_p2 + tmp_13_1_fu_735_p2);

assign tmp4_fu_867_p2 = (tmp6_reg_1152 + tmp5_fu_863_p2);

assign tmp5_fu_863_p2 = (tmp_13_1_1_reg_1142 + tmp_13_1_2_reg_1147);

assign tmp6_fu_820_p2 = ($signed(grp_fu_879_p3) + $signed(tmp_13_2_fu_794_p2));

assign tmp_13_0_1_fu_707_p0 = b_1_q0;

assign tmp_13_0_1_fu_707_p1 = ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6;

assign tmp_13_0_1_fu_707_p2 = ($signed(tmp_13_0_1_fu_707_p0) * $signed(tmp_13_0_1_fu_707_p1));

assign tmp_13_0_2_fu_721_p0 = ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6;

assign tmp_13_0_2_fu_721_p1 = b_2_q0;

assign tmp_13_0_2_fu_721_p2 = ($signed(tmp_13_0_2_fu_721_p0) * $signed(tmp_13_0_2_fu_721_p1));

assign tmp_13_1_1_fu_766_p0 = ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6;

assign tmp_13_1_1_fu_766_p1 = b_1_q0;

assign tmp_13_1_1_fu_766_p2 = ($signed(tmp_13_1_1_fu_766_p0) * $signed(tmp_13_1_1_fu_766_p1));

assign tmp_13_1_2_fu_780_p0 = ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6;

assign tmp_13_1_2_fu_780_p1 = b_2_q0;

assign tmp_13_1_2_fu_780_p2 = ($signed(tmp_13_1_2_fu_780_p0) * $signed(tmp_13_1_2_fu_780_p1));

assign tmp_13_1_fu_735_p0 = ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6;

assign tmp_13_1_fu_735_p1 = b_0_q1;

assign tmp_13_1_fu_735_p2 = ($signed(tmp_13_1_fu_735_p0) * $signed(tmp_13_1_fu_735_p1));

assign tmp_13_2_1_fu_807_p0 = ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557;

assign tmp_13_2_1_fu_807_p1 = b_1_load_2_reg_1112;

assign tmp_13_2_fu_794_p0 = ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6;

assign tmp_13_2_fu_794_p1 = b_0_q0;

assign tmp_13_2_fu_794_p2 = ($signed(tmp_13_2_fu_794_p0) * $signed(tmp_13_2_fu_794_p1));

assign tmp_3_cast_fu_845_p1 = j_mid2_reg_942_pp0_iter1_reg;

assign tmp_4_fu_693_p0 = b_0_q0;

assign tmp_4_fu_693_p1 = ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6;

assign tmp_4_fu_693_p2 = ($signed(tmp_4_fu_693_p0) * $signed(tmp_4_fu_693_p1));

assign tmp_6_fu_839_p2 = (p_shl_cast_fu_835_p1 - tmp_mid2_cast5_fu_825_p1);

assign tmp_7_1_mid1_fu_644_p2 = (ap_phi_mux_i_phi_fu_441_p4 ^ 2'd2);

assign tmp_7_cast_fu_854_p1 = tmp_7_fu_848_p2;

assign tmp_7_fu_848_p2 = (tmp_3_cast_fu_845_p1 + tmp_6_fu_839_p2);

assign tmp_8_1_mid2_cast_fu_658_p1 = tmp_8_1_mid2_fu_650_p3;

assign tmp_8_1_mid2_fu_650_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? tmp_7_1_mid1_fu_644_p2 : i_1_fu_591_p2);

assign tmp_8_2_mid2_fu_675_p1 = tmp_8_2_mid2_v_fu_669_p2;

assign tmp_8_2_mid2_v_fu_669_p2 = (tmp_8_2_mid2_v_v_fu_665_p1 + 3'd2);

assign tmp_8_2_mid2_v_v_fu_665_p1 = tmp_mid2_fu_623_p3;

assign tmp_fu_828_p3 = {{tmp_mid2_reg_948_pp0_iter1_reg}, {2'd0}};

assign tmp_mid2_cast5_fu_825_p1 = tmp_mid2_reg_948_pp0_iter1_reg;

assign tmp_mid2_cast_fu_631_p1 = tmp_mid2_fu_623_p3;

assign tmp_mid2_fu_623_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? i_1_fu_591_p2 : ap_phi_mux_i_phi_fu_441_p4);

always @ (posedge ap_clk) begin
    tmp_8_1_mid2_cast_reg_955[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_8_2_mid2_reg_965[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //conv2d
