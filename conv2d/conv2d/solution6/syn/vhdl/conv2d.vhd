-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_0_ce0 : OUT STD_LOGIC;
    a_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_0_ce1 : OUT STD_LOGIC;
    a_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_1_ce0 : OUT STD_LOGIC;
    a_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_1_ce1 : OUT STD_LOGIC;
    a_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_2_ce0 : OUT STD_LOGIC;
    a_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_2_ce1 : OUT STD_LOGIC;
    a_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_3_ce0 : OUT STD_LOGIC;
    a_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_3_ce1 : OUT STD_LOGIC;
    a_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_4_ce0 : OUT STD_LOGIC;
    a_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_4_ce1 : OUT STD_LOGIC;
    a_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_0_ce0 : OUT STD_LOGIC;
    b_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_0_ce1 : OUT STD_LOGIC;
    b_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_1_ce0 : OUT STD_LOGIC;
    b_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_1_ce1 : OUT STD_LOGIC;
    b_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_2_ce0 : OUT STD_LOGIC;
    b_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_2_ce1 : OUT STD_LOGIC;
    b_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    res_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_ce0 : OUT STD_LOGIC;
    res_we0 : OUT STD_LOGIC;
    res_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of conv2d is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.489250,HLS_SYN_LAT=21,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=147,HLS_SYN_LUT=1093}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_426 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_437 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_448 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond_flatten_reg_933 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_reg_942 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_flatten_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_933_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_603_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_next_reg_937 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_mid2_fu_615_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_mid2_reg_942_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_fu_623_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_reg_948 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_reg_948_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_1_mid2_cast_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_1_mid2_cast_reg_955 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_2_mid2_fu_675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_2_mid2_reg_965 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_2_addr_1_gep_fu_182_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_1_gep_fu_190_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_3_addr_1_gep_fu_214_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_2_addr_2_gep_fu_222_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_3_addr_5_gep_fu_312_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_2_addr_8_gep_fu_320_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_3_addr_3_gep_fu_366_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_2_addr_5_gep_fu_374_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_1_load_2_reg_1112 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_load_2_reg_1122 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_741_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_1127 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_747_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_1132 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_fu_753_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_1137 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_1_1_fu_766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_1_reg_1142 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_2_fu_780_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_2_reg_1147 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_820_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp6_fu_820_p2 : signal is "no";
    signal tmp6_reg_1152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_430_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_441_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_j_phi_fu_452_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_mid2_cast_fu_631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_cast_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_591_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_1_mid1_fu_644_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_1_mid2_fu_650_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_2_mid2_v_v_fu_665_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_2_mid2_v_fu_669_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_693_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_693_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_1_fu_707_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_1_fu_707_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_2_fu_721_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_2_fu_721_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_fu_735_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_fu_735_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_693_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_0_1_fu_707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_0_2_fu_721_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_1_fu_766_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_1_fu_766_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_2_fu_780_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_2_fu_780_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_fu_794_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_fu_794_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_1_fu_807_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_1_fu_807_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_879_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_2_fu_794_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_828_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_835_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_cast5_fu_825_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_cast_fu_845_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_839_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_848_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp5_fu_863_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_867_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_859_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_879_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_624 : BOOLEAN;
    signal ap_condition_628 : BOOLEAN;
    signal ap_condition_633 : BOOLEAN;
    signal ap_condition_637 : BOOLEAN;
    signal ap_condition_641 : BOOLEAN;
    signal ap_condition_646 : BOOLEAN;
    signal ap_condition_651 : BOOLEAN;
    signal ap_condition_656 : BOOLEAN;
    signal ap_condition_329 : BOOLEAN;
    signal ap_condition_160 : BOOLEAN;
    signal ap_condition_142 : BOOLEAN;

    component conv2d_mac_muladdbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv2d_mac_muladdbkb_U1 : component conv2d_mac_muladdbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568,
        din1 => b_2_load_2_reg_1122,
        din2 => grp_fu_879_p2,
        dout => grp_fu_879_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_142)) then
                if ((ap_const_boolean_1 = ap_condition_160)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= a_3_q1;
                elsif (((j_mid2_reg_942 = ap_const_lv2_1) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= a_2_q1;
                elsif (((j_mid2_reg_942 = ap_const_lv2_0) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= a_1_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557 <= ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_142)) then
                if ((ap_const_boolean_1 = ap_condition_160)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= a_4_q1;
                elsif (((j_mid2_reg_942 = ap_const_lv2_1) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= a_3_q1;
                elsif (((j_mid2_reg_942 = ap_const_lv2_0) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= a_2_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_568 <= ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568;
                end if;
            end if; 
        end if;
    end process;

    i_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                i_reg_437 <= tmp_mid2_reg_948;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_437 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                indvar_flatten_reg_426 <= indvar_flatten_next_reg_937;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_426 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
                j_reg_448 <= j_1_reg_1137;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_448 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                b_1_load_2_reg_1112 <= b_1_q1;
                b_2_load_2_reg_1122 <= b_2_q1;
                j_1_reg_1137 <= j_1_fu_753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_933 <= exitcond_flatten_fu_597_p2;
                exitcond_flatten_reg_933_pp0_iter1_reg <= exitcond_flatten_reg_933;
                j_mid2_reg_942_pp0_iter1_reg <= j_mid2_reg_942;
                tmp_13_1_1_reg_1142 <= tmp_13_1_1_fu_766_p2;
                tmp_13_1_2_reg_1147 <= tmp_13_1_2_fu_780_p2;
                tmp_mid2_reg_948_pp0_iter1_reg <= tmp_mid2_reg_948;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                indvar_flatten_next_reg_937 <= indvar_flatten_next_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0))) then
                j_mid2_reg_942 <= j_mid2_fu_615_p3;
                    tmp_8_1_mid2_cast_reg_955(1 downto 0) <= tmp_8_1_mid2_cast_fu_658_p1(1 downto 0);
                    tmp_8_2_mid2_reg_965(2 downto 0) <= tmp_8_2_mid2_fu_675_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp2_reg_1127 <= tmp2_fu_741_p2;
                tmp3_reg_1132 <= tmp3_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then
                tmp6_reg_1152 <= tmp6_fu_820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0))) then
                tmp_mid2_reg_948 <= tmp_mid2_fu_623_p3;
            end if;
        end if;
    end process;
    tmp_8_1_mid2_cast_reg_955(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    tmp_8_2_mid2_reg_965(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_597_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    a_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_8_2_mid2_reg_965, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_mid2_cast_fu_631_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                a_0_address0 <= tmp_8_2_mid2_reg_965(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                a_0_address0 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
            else 
                a_0_address0 <= "XXX";
            end if;
        else 
            a_0_address0 <= "XXX";
        end if; 
    end process;

    a_0_address1 <= tmp_8_1_mid2_cast_fu_658_p1(3 - 1 downto 0);

    a_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            a_0_ce0 <= ap_const_logic_1;
        else 
            a_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            a_0_ce1 <= ap_const_logic_1;
        else 
            a_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_1_addr_1_gep_fu_190_p3 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);

    a_1_address0_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_8_1_mid2_cast_reg_955, tmp_8_2_mid2_reg_965, a_1_addr_1_gep_fu_190_p3, tmp_mid2_cast_fu_631_p1, ap_condition_624, ap_condition_628, ap_condition_633, ap_condition_637)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_637)) then 
                a_1_address0 <= tmp_8_2_mid2_reg_965(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_633)) then 
                a_1_address0 <= tmp_8_1_mid2_cast_reg_955(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_628)) then 
                a_1_address0 <= a_1_addr_1_gep_fu_190_p3;
            elsif ((ap_const_boolean_1 = ap_condition_624)) then 
                a_1_address0 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
            else 
                a_1_address0 <= "XXX";
            end if;
        else 
            a_1_address0 <= "XXX";
        end if; 
    end process;


    a_1_address1_assign_proc : process(j_mid2_fu_615_p3, tmp_8_1_mid2_cast_fu_658_p1, tmp_8_2_mid2_fu_675_p1, ap_condition_641)
    begin
        if ((ap_const_boolean_1 = ap_condition_641)) then
            if ((j_mid2_fu_615_p3 = ap_const_lv2_0)) then 
                a_1_address1 <= tmp_8_2_mid2_fu_675_p1(3 - 1 downto 0);
            elsif ((j_mid2_fu_615_p3 = ap_const_lv2_1)) then 
                a_1_address1 <= tmp_8_1_mid2_cast_fu_658_p1(3 - 1 downto 0);
            else 
                a_1_address1 <= "XXX";
            end if;
        else 
            a_1_address1 <= "XXX";
        end if; 
    end process;


    a_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, exitcond_flatten_reg_933, j_mid2_reg_942, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, j_mid2_fu_615_p3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_0) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            a_1_ce0 <= ap_const_logic_1;
        else 
            a_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, j_mid2_fu_615_p3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)))) then 
            a_1_ce1 <= ap_const_logic_1;
        else 
            a_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_2_addr_1_gep_fu_182_p3 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
    a_2_addr_2_gep_fu_222_p3 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
    a_2_addr_5_gep_fu_374_p3 <= tmp_8_1_mid2_cast_reg_955(3 - 1 downto 0);
    a_2_addr_8_gep_fu_320_p3 <= tmp_8_2_mid2_fu_675_p1(3 - 1 downto 0);

    a_2_address0_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_8_1_mid2_cast_reg_955, tmp_8_2_mid2_reg_965, a_2_addr_1_gep_fu_182_p3, a_2_addr_2_gep_fu_222_p3, a_2_addr_5_gep_fu_374_p3, tmp_mid2_cast_fu_631_p1, ap_condition_624, ap_condition_628, ap_condition_633, ap_condition_637, ap_condition_646, ap_condition_651)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_651)) then 
                a_2_address0 <= tmp_8_2_mid2_reg_965(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_633)) then 
                a_2_address0 <= a_2_addr_5_gep_fu_374_p3;
            elsif ((ap_const_boolean_1 = ap_condition_637)) then 
                a_2_address0 <= tmp_8_1_mid2_cast_reg_955(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_628)) then 
                a_2_address0 <= a_2_addr_2_gep_fu_222_p3;
            elsif ((ap_const_boolean_1 = ap_condition_624)) then 
                a_2_address0 <= a_2_addr_1_gep_fu_182_p3;
            elsif ((ap_const_boolean_1 = ap_condition_646)) then 
                a_2_address0 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
            else 
                a_2_address0 <= "XXX";
            end if;
        else 
            a_2_address0 <= "XXX";
        end if; 
    end process;


    a_2_address1_assign_proc : process(j_mid2_fu_615_p3, tmp_8_1_mid2_cast_fu_658_p1, tmp_8_2_mid2_fu_675_p1, a_2_addr_8_gep_fu_320_p3, ap_condition_641)
    begin
        if ((ap_const_boolean_1 = ap_condition_641)) then
            if ((j_mid2_fu_615_p3 = ap_const_lv2_0)) then 
                a_2_address1 <= a_2_addr_8_gep_fu_320_p3;
            elsif ((j_mid2_fu_615_p3 = ap_const_lv2_1)) then 
                a_2_address1 <= tmp_8_2_mid2_fu_675_p1(3 - 1 downto 0);
            elsif ((not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)))) then 
                a_2_address1 <= tmp_8_1_mid2_cast_fu_658_p1(3 - 1 downto 0);
            else 
                a_2_address1 <= "XXX";
            end if;
        else 
            a_2_address1 <= "XXX";
        end if; 
    end process;


    a_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, exitcond_flatten_reg_933, j_mid2_reg_942, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, j_mid2_fu_615_p3)
    begin
        if (((not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or (not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_0) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            a_2_ce0 <= ap_const_logic_1;
        else 
            a_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, j_mid2_fu_615_p3)
    begin
        if (((not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)))) then 
            a_2_ce1 <= ap_const_logic_1;
        else 
            a_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_3_addr_1_gep_fu_214_p3 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
    a_3_addr_3_gep_fu_366_p3 <= tmp_8_1_mid2_cast_reg_955(3 - 1 downto 0);
    a_3_addr_5_gep_fu_312_p3 <= tmp_8_2_mid2_fu_675_p1(3 - 1 downto 0);

    a_3_address0_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_8_1_mid2_cast_reg_955, a_3_addr_1_gep_fu_214_p3, a_3_addr_3_gep_fu_366_p3, tmp_mid2_cast_fu_631_p1, ap_condition_624, ap_condition_637, ap_condition_646, ap_condition_651)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_637)) then 
                a_3_address0 <= a_3_addr_3_gep_fu_366_p3;
            elsif ((ap_const_boolean_1 = ap_condition_651)) then 
                a_3_address0 <= tmp_8_1_mid2_cast_reg_955(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_624)) then 
                a_3_address0 <= a_3_addr_1_gep_fu_214_p3;
            elsif ((ap_const_boolean_1 = ap_condition_646)) then 
                a_3_address0 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
            else 
                a_3_address0 <= "XXX";
            end if;
        else 
            a_3_address0 <= "XXX";
        end if; 
    end process;


    a_3_address1_assign_proc : process(j_mid2_fu_615_p3, tmp_8_2_mid2_fu_675_p1, a_3_addr_5_gep_fu_312_p3, ap_condition_641)
    begin
        if ((ap_const_boolean_1 = ap_condition_641)) then
            if ((j_mid2_fu_615_p3 = ap_const_lv2_1)) then 
                a_3_address1 <= a_3_addr_5_gep_fu_312_p3;
            elsif ((not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)))) then 
                a_3_address1 <= tmp_8_2_mid2_fu_675_p1(3 - 1 downto 0);
            else 
                a_3_address1 <= "XXX";
            end if;
        else 
            a_3_address1 <= "XXX";
        end if; 
    end process;


    a_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, exitcond_flatten_reg_933, j_mid2_reg_942, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, j_mid2_fu_615_p3)
    begin
        if (((not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or (not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_1) and (exitcond_flatten_reg_933 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            a_3_ce0 <= ap_const_logic_1;
        else 
            a_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, j_mid2_fu_615_p3)
    begin
        if (((not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0)))) then 
            a_3_ce1 <= ap_const_logic_1;
        else 
            a_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    a_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_8_1_mid2_cast_reg_955, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_mid2_cast_fu_631_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                a_4_address0 <= tmp_8_1_mid2_cast_reg_955(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                a_4_address0 <= tmp_mid2_cast_fu_631_p1(3 - 1 downto 0);
            else 
                a_4_address0 <= "XXX";
            end if;
        else 
            a_4_address0 <= "XXX";
        end if; 
    end process;

    a_4_address1 <= tmp_8_2_mid2_fu_675_p1(3 - 1 downto 0);

    a_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            a_4_ce0 <= ap_const_logic_1;
        else 
            a_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            a_4_ce1 <= ap_const_logic_1;
        else 
            a_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_142_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
                ap_condition_142 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_160_assign_proc : process(exitcond_flatten_reg_933, j_mid2_reg_942)
    begin
                ap_condition_160 <= (not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)) and (exitcond_flatten_reg_933 = ap_const_lv1_0));
    end process;


    ap_condition_329_assign_proc : process(exitcond_flatten_reg_933, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_329 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_933 = ap_const_lv1_0));
    end process;


    ap_condition_624_assign_proc : process(exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, j_mid2_fu_615_p3, ap_block_pp0_stage0)
    begin
                ap_condition_624 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (j_mid2_fu_615_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0));
    end process;


    ap_condition_628_assign_proc : process(exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, j_mid2_fu_615_p3, ap_block_pp0_stage0)
    begin
                ap_condition_628 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (j_mid2_fu_615_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0));
    end process;


    ap_condition_633_assign_proc : process(ap_CS_fsm_pp0_stage1, exitcond_flatten_reg_933, j_mid2_reg_942, ap_block_pp0_stage1)
    begin
                ap_condition_633 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_0) and (exitcond_flatten_reg_933 = ap_const_lv1_0));
    end process;


    ap_condition_637_assign_proc : process(ap_CS_fsm_pp0_stage1, exitcond_flatten_reg_933, j_mid2_reg_942, ap_block_pp0_stage1)
    begin
                ap_condition_637 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (j_mid2_reg_942 = ap_const_lv2_1) and (exitcond_flatten_reg_933 = ap_const_lv1_0));
    end process;


    ap_condition_641_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_641 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0));
    end process;


    ap_condition_646_assign_proc : process(exitcond_flatten_fu_597_p2, ap_CS_fsm_pp0_stage0, j_mid2_fu_615_p3, ap_block_pp0_stage0)
    begin
                ap_condition_646 <= (not((j_mid2_fu_615_p3 = ap_const_lv2_0)) and not((j_mid2_fu_615_p3 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_597_p2 = ap_const_lv1_0));
    end process;


    ap_condition_651_assign_proc : process(ap_CS_fsm_pp0_stage1, exitcond_flatten_reg_933, j_mid2_reg_942, ap_block_pp0_stage1)
    begin
                ap_condition_651 <= (not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933 = ap_const_lv1_0));
    end process;


    ap_condition_656_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_933, ap_block_pp0_stage1)
    begin
                ap_condition_656 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_597_p2)
    begin
        if ((exitcond_flatten_fu_597_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, j_mid2_reg_942, ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459, ap_condition_656)
    begin
        if ((ap_const_boolean_1 = ap_condition_656)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 <= a_2_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 <= a_1_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 <= ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459;
            end if;
        else 
            ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6 <= ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459;
        end if; 
    end process;


    ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6_assign_proc : process(a_1_q0, a_2_q0, a_3_q0, j_mid2_reg_942, ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473, ap_condition_656)
    begin
        if ((ap_const_boolean_1 = ap_condition_656)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 <= a_3_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 <= a_2_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 <= a_1_q0;
            else 
                ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 <= ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473;
            end if;
        else 
            ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6 <= ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473;
        end if; 
    end process;


    ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6_assign_proc : process(a_2_q0, a_3_q0, a_4_q0, j_mid2_reg_942, ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487, ap_condition_656)
    begin
        if ((ap_const_boolean_1 = ap_condition_656)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 <= a_4_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 <= a_3_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 <= a_2_q0;
            else 
                ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 <= ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487;
            end if;
        else 
            ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6 <= ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487;
        end if; 
    end process;


    ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6_assign_proc : process(a_0_q1, a_1_q1, a_2_q1, j_mid2_reg_942, ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501, ap_condition_656)
    begin
        if ((ap_const_boolean_1 = ap_condition_656)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 <= a_2_q1;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 <= a_1_q1;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 <= a_0_q1;
            else 
                ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 <= ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501;
            end if;
        else 
            ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6 <= ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501;
        end if; 
    end process;


    ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6_assign_proc : process(a_1_q0, a_2_q0, a_3_q0, j_mid2_reg_942, ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515, ap_condition_329)
    begin
        if ((ap_const_boolean_1 = ap_condition_329)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 <= a_3_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 <= a_2_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 <= a_1_q0;
            else 
                ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 <= ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515;
            end if;
        else 
            ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6 <= ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515;
        end if; 
    end process;


    ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6_assign_proc : process(a_2_q0, a_3_q0, a_4_q0, j_mid2_reg_942, ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529, ap_condition_329)
    begin
        if ((ap_const_boolean_1 = ap_condition_329)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 <= a_4_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 <= a_3_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 <= a_2_q0;
            else 
                ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 <= ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529;
            end if;
        else 
            ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6 <= ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529;
        end if; 
    end process;


    ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, j_mid2_reg_942, ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543, ap_condition_329)
    begin
        if ((ap_const_boolean_1 = ap_condition_329)) then
            if ((not((j_mid2_reg_942 = ap_const_lv2_0)) and not((j_mid2_reg_942 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 <= a_2_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 <= a_1_q0;
            elsif ((j_mid2_reg_942 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 <= ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543;
            end if;
        else 
            ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6 <= ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_441_p4_assign_proc : process(i_reg_437, exitcond_flatten_reg_933, ap_CS_fsm_pp0_stage0, tmp_mid2_reg_948, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
            ap_phi_mux_i_phi_fu_441_p4 <= tmp_mid2_reg_948;
        else 
            ap_phi_mux_i_phi_fu_441_p4 <= i_reg_437;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_430_p4_assign_proc : process(indvar_flatten_reg_426, exitcond_flatten_reg_933, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_937, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_430_p4 <= indvar_flatten_next_reg_937;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_430_p4 <= indvar_flatten_reg_426;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_452_p4_assign_proc : process(j_reg_448, exitcond_flatten_reg_933, ap_CS_fsm_pp0_stage0, j_1_reg_1137, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_933 = ap_const_lv1_0))) then 
            ap_phi_mux_j_phi_fu_452_p4 <= j_1_reg_1137;
        else 
            ap_phi_mux_j_phi_fu_452_p4 <= j_reg_448;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_459 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_473 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_487 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_501 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_557 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_568 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_515 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_529 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_543 <= "XXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                b_0_address0 <= ap_const_lv64_2(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                b_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
            else 
                b_0_address0 <= "XX";
            end if;
        else 
            b_0_address0 <= "XX";
        end if; 
    end process;

    b_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    b_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            b_0_ce0 <= ap_const_logic_1;
        else 
            b_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_0_ce1 <= ap_const_logic_1;
        else 
            b_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                b_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                b_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
            else 
                b_1_address0 <= "XX";
            end if;
        else 
            b_1_address0 <= "XX";
        end if; 
    end process;

    b_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);

    b_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            b_1_ce0 <= ap_const_logic_1;
        else 
            b_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_1_ce1 <= ap_const_logic_1;
        else 
            b_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                b_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                b_2_address0 <= ap_const_lv64_0(2 - 1 downto 0);
            else 
                b_2_address0 <= "XX";
            end if;
        else 
            b_2_address0 <= "XX";
        end if; 
    end process;

    b_2_address1 <= ap_const_lv64_2(2 - 1 downto 0);

    b_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            b_2_ce0 <= ap_const_logic_1;
        else 
            b_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_2_ce1 <= ap_const_logic_1;
        else 
            b_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_597_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_430_p4 = ap_const_lv4_9) else "0";
    exitcond_fu_609_p2 <= "1" when (ap_phi_mux_j_phi_fu_452_p4 = ap_const_lv2_3) else "0";
    grp_fu_879_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_2_1_fu_807_p0) * signed(tmp_13_2_1_fu_807_p1))), 16));
    i_1_fu_591_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_441_p4) + unsigned(ap_const_lv2_1));
    indvar_flatten_next_fu_603_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_430_p4) + unsigned(ap_const_lv4_1));
    j_1_fu_753_p2 <= std_logic_vector(unsigned(j_mid2_reg_942) + unsigned(ap_const_lv2_1));
    j_mid2_fu_615_p3 <= 
        ap_const_lv2_0 when (exitcond_fu_609_p2(0) = '1') else 
        ap_phi_mux_j_phi_fu_452_p4;
    p_shl_cast_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_828_p3),5));
    res_address0 <= tmp_7_cast_fu_854_p1(4 - 1 downto 0);

    res_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            res_ce0 <= ap_const_logic_1;
        else 
            res_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    res_d0 <= std_logic_vector(unsigned(tmp4_fu_867_p2) + unsigned(tmp1_fu_859_p2));

    res_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond_flatten_reg_933_pp0_iter1_reg, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_933_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            res_we0 <= ap_const_logic_1;
        else 
            res_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_859_p2 <= std_logic_vector(unsigned(tmp3_reg_1132) + unsigned(tmp2_reg_1127));
    tmp2_fu_741_p2 <= std_logic_vector(unsigned(tmp_4_fu_693_p2) + unsigned(tmp_13_0_1_fu_707_p2));
    tmp3_fu_747_p2 <= std_logic_vector(unsigned(tmp_13_0_2_fu_721_p2) + unsigned(tmp_13_1_fu_735_p2));
    tmp4_fu_867_p2 <= std_logic_vector(unsigned(tmp6_reg_1152) + unsigned(tmp5_fu_863_p2));
    tmp5_fu_863_p2 <= std_logic_vector(unsigned(tmp_13_1_1_reg_1142) + unsigned(tmp_13_1_2_reg_1147));
    tmp6_fu_820_p2 <= std_logic_vector(signed(grp_fu_879_p3) + signed(tmp_13_2_fu_794_p2));
    tmp_13_0_1_fu_707_p0 <= b_1_q0;
    tmp_13_0_1_fu_707_p1 <= ap_phi_mux_a_load_0_1_phi_phi_fu_476_p6;
    tmp_13_0_1_fu_707_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_0_1_fu_707_p0) * signed(tmp_13_0_1_fu_707_p1))), 16));
    tmp_13_0_2_fu_721_p0 <= ap_phi_mux_a_load_0_2_phi_phi_fu_490_p6;
    tmp_13_0_2_fu_721_p1 <= b_2_q0;
    tmp_13_0_2_fu_721_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_0_2_fu_721_p0) * signed(tmp_13_0_2_fu_721_p1))), 16));
    tmp_13_1_1_fu_766_p0 <= ap_phi_mux_a_load_1_1_phi_phi_fu_518_p6;
    tmp_13_1_1_fu_766_p1 <= b_1_q0;
    tmp_13_1_1_fu_766_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_1_1_fu_766_p0) * signed(tmp_13_1_1_fu_766_p1))), 16));
    tmp_13_1_2_fu_780_p0 <= ap_phi_mux_a_load_1_2_phi_phi_fu_532_p6;
    tmp_13_1_2_fu_780_p1 <= b_2_q0;
    tmp_13_1_2_fu_780_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_1_2_fu_780_p0) * signed(tmp_13_1_2_fu_780_p1))), 16));
    tmp_13_1_fu_735_p0 <= ap_phi_mux_a_load_1_0_phi_phi_fu_504_p6;
    tmp_13_1_fu_735_p1 <= b_0_q1;
    tmp_13_1_fu_735_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_1_fu_735_p0) * signed(tmp_13_1_fu_735_p1))), 16));
    tmp_13_2_1_fu_807_p0 <= ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_557;
    tmp_13_2_1_fu_807_p1 <= b_1_load_2_reg_1112;
    tmp_13_2_fu_794_p0 <= ap_phi_mux_a_load_2_0_phi_phi_fu_546_p6;
    tmp_13_2_fu_794_p1 <= b_0_q0;
    tmp_13_2_fu_794_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_2_fu_794_p0) * signed(tmp_13_2_fu_794_p1))), 16));
    tmp_3_cast_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_942_pp0_iter1_reg),5));
    tmp_4_fu_693_p0 <= b_0_q0;
    tmp_4_fu_693_p1 <= ap_phi_mux_a_load_0_0_phi_phi_fu_462_p6;
    tmp_4_fu_693_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_4_fu_693_p0) * signed(tmp_4_fu_693_p1))), 16));
    tmp_6_fu_839_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_835_p1) - unsigned(tmp_mid2_cast5_fu_825_p1));
    tmp_7_1_mid1_fu_644_p2 <= (ap_phi_mux_i_phi_fu_441_p4 xor ap_const_lv2_2);
    tmp_7_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_848_p2),64));
    tmp_7_fu_848_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_845_p1) + unsigned(tmp_6_fu_839_p2));
    tmp_8_1_mid2_cast_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_1_mid2_fu_650_p3),64));
    tmp_8_1_mid2_fu_650_p3 <= 
        tmp_7_1_mid1_fu_644_p2 when (exitcond_fu_609_p2(0) = '1') else 
        i_1_fu_591_p2;
    tmp_8_2_mid2_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_2_mid2_v_fu_669_p2),64));
    tmp_8_2_mid2_v_fu_669_p2 <= std_logic_vector(unsigned(tmp_8_2_mid2_v_v_fu_665_p1) + unsigned(ap_const_lv3_2));
    tmp_8_2_mid2_v_v_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_fu_623_p3),3));
    tmp_fu_828_p3 <= (tmp_mid2_reg_948_pp0_iter1_reg & ap_const_lv2_0);
    tmp_mid2_cast5_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_reg_948_pp0_iter1_reg),5));
    tmp_mid2_cast_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_fu_623_p3),64));
    tmp_mid2_fu_623_p3 <= 
        i_1_fu_591_p2 when (exitcond_fu_609_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_441_p4;
end behav;
