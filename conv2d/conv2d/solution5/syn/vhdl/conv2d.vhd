-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_0_ce0 : OUT STD_LOGIC;
    a_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_0_ce1 : OUT STD_LOGIC;
    a_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_1_ce0 : OUT STD_LOGIC;
    a_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_1_ce1 : OUT STD_LOGIC;
    a_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_2_ce0 : OUT STD_LOGIC;
    a_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_2_ce1 : OUT STD_LOGIC;
    a_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_3_ce0 : OUT STD_LOGIC;
    a_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_3_ce1 : OUT STD_LOGIC;
    a_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_4_ce0 : OUT STD_LOGIC;
    a_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    a_4_ce1 : OUT STD_LOGIC;
    a_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_0_ce0 : OUT STD_LOGIC;
    b_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_0_ce1 : OUT STD_LOGIC;
    b_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_1_ce0 : OUT STD_LOGIC;
    b_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_1_ce1 : OUT STD_LOGIC;
    b_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_2_ce0 : OUT STD_LOGIC;
    b_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b_2_ce1 : OUT STD_LOGIC;
    b_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    res_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    res_0_ce0 : OUT STD_LOGIC;
    res_0_we0 : OUT STD_LOGIC;
    res_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    res_0_ce1 : OUT STD_LOGIC;
    res_0_we1 : OUT STD_LOGIC;
    res_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    res_1_ce0 : OUT STD_LOGIC;
    res_1_we0 : OUT STD_LOGIC;
    res_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    res_1_ce1 : OUT STD_LOGIC;
    res_1_we1 : OUT STD_LOGIC;
    res_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    res_2_ce0 : OUT STD_LOGIC;
    res_2_we0 : OUT STD_LOGIC;
    res_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    res_2_ce1 : OUT STD_LOGIC;
    res_2_we1 : OUT STD_LOGIC;
    res_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of conv2d is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.010000,HLS_SYN_LAT=47,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=24,HLS_SYN_FF=750,HLS_SYN_LUT=1484}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal exitcond3_reg_1533 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_493 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal exitcond3_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_1_fu_954_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_1537 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_960_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_1542 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_0_load_1_reg_1548 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_load_reg_1553 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_load_1_reg_1558 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_load_reg_1568 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_load_1_reg_1573 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_2_fu_968_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_2_reg_1588 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_981_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_1598 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_0_1_fu_989_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_0_1_reg_1603 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_0_2_fu_992_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_0_2_reg_1609 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_1_load_2_reg_1620 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_load_2_reg_1630 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1132_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_2_0_2_reg_1635 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1140_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_0_1_reg_1653 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_1_fu_1008_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_1_reg_1661 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_1_1_fu_1011_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_1_1_reg_1667 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_1_fu_1018_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_1_reg_1673 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1146_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_2_1_reg_1688 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1153_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_2_1_1_reg_1695 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1161_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_0_2_reg_1718 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1167_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_0_1_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1173_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_1_reg_1754 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_1179_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_1_1_reg_1761 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1186_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_1_2_reg_1768 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1193_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_2_1_2_reg_1776 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1202_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_1_reg_1781 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1208_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_1_1_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_1_2_fu_1070_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_1_2_reg_1795 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1215_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_1_2_reg_1801 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1223_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_0_2_reg_1809 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_2_2_fu_1081_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_2_2_reg_1827 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_1229_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_2_2_reg_1832 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1236_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_2_1_reg_1839 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1242_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_2_2_reg_1846 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1250_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_2_2_1_reg_1853 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1259_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_2_reg_1858 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_3_0_2_1_fu_1107_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_0_2_1_reg_1865 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1266_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_0_2_1_reg_1871 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1274_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_1_2_reg_1879 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1281_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_2_2_reg_1887 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_i_phi_fu_497_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_0_1_0_phi_reg_533 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_0_2_0_phi_reg_545 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_1_1_0_phi_reg_557 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_1_2_0_phi_reg_569 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_2_0_1_phi_reg_581 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_0_1_1_phi_reg_620 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_0_2_1_phi_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_2_1_0_phi_reg_658 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_2_2_0_phi_reg_683 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_1_1_1_phi_reg_723 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_1_2_1_phi_reg_735 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_2_2_1_phi_reg_747 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_2_1_2_phi_reg_759 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_2_2_2_phi_reg_770 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_0_1_2_phi_reg_782 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_0_2_2_phi_reg_793 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_1_1_2_phi_reg_819 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_load_1_2_2_phi_reg_831 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1122_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_1291_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_7_2_fu_968_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_2_fu_968_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_981_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_981_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_1_fu_1018_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_1_fu_1018_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1140_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1167_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1173_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1179_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1186_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1193_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1202_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1208_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1223_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1229_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1236_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1250_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1259_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_0_2_fu_1100_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1274_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1281_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1291_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);

    component conv2d_mac_muladdbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component conv2d_mac_muladdcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv2d_mac_muladdbkb_U1 : component conv2d_mac_muladdbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_2_0_1_phi_reg_581,
        din1 => b_0_load_1_reg_1548,
        din2 => tmp_7_2_reg_1588,
        dout => grp_fu_1122_p3);

    conv2d_mac_muladdcud_U2 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6,
        din1 => b_0_q0,
        din2 => grp_fu_1122_p3,
        dout => grp_fu_1132_p3);

    conv2d_mac_muladdbkb_U3 : component conv2d_mac_muladdbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6,
        din1 => grp_fu_1140_p1,
        din2 => tmp_7_reg_1598,
        dout => grp_fu_1140_p3);

    conv2d_mac_muladdcud_U4 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_2_1_0_phi_reg_658,
        din1 => b_1_load_reg_1553,
        din2 => tmp_10_2_0_2_reg_1635,
        dout => grp_fu_1146_p3);

    conv2d_mac_muladdcud_U5 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6,
        din1 => b_1_load_1_reg_1558,
        din2 => grp_fu_1146_p3,
        dout => grp_fu_1153_p3);

    conv2d_mac_muladdcud_U6 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6,
        din1 => grp_fu_1161_p1,
        din2 => tmp_10_0_0_1_reg_1653,
        dout => grp_fu_1161_p3);

    conv2d_mac_muladdbkb_U7 : component conv2d_mac_muladdbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6,
        din1 => grp_fu_1167_p1,
        din2 => tmp_7_1_reg_1673,
        dout => grp_fu_1167_p3);

    conv2d_mac_muladdcud_U8 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_1_1_0_phi_reg_557,
        din1 => grp_fu_1173_p1,
        din2 => tmp_10_1_0_2_reg_1809,
        dout => grp_fu_1173_p3);

    conv2d_mac_muladdcud_U9 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_1_1_1_phi_reg_723,
        din1 => grp_fu_1179_p1,
        din2 => grp_fu_1173_p3,
        dout => grp_fu_1179_p3);

    conv2d_mac_muladdcud_U10 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_1_1_2_phi_reg_819,
        din1 => grp_fu_1186_p1,
        din2 => grp_fu_1179_p3,
        dout => grp_fu_1186_p3);

    conv2d_mac_muladdcud_U11 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_2_1_2_phi_reg_759,
        din1 => grp_fu_1193_p1,
        din2 => tmp_10_2_1_1_reg_1695,
        dout => grp_fu_1193_p3);

    conv2d_mac_muladdcud_U12 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_0_1_0_phi_reg_533,
        din1 => grp_fu_1202_p1,
        din2 => tmp_10_0_0_2_reg_1718,
        dout => grp_fu_1202_p3);

    conv2d_mac_muladdcud_U13 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_0_1_1_phi_reg_620,
        din1 => grp_fu_1208_p1,
        din2 => grp_fu_1202_p3,
        dout => grp_fu_1208_p3);

    conv2d_mac_muladdcud_U14 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_0_1_2_phi_reg_782,
        din1 => b_1_load_2_reg_1620,
        din2 => grp_fu_1208_p3,
        dout => grp_fu_1215_p3);

    conv2d_mac_muladdcud_U15 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6,
        din1 => grp_fu_1223_p1,
        din2 => tmp_10_1_0_1_reg_1736,
        dout => grp_fu_1223_p3);

    conv2d_mac_muladdcud_U16 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_0_2_2_phi_reg_793,
        din1 => grp_fu_1229_p1,
        din2 => tmp_10_0_2_1_reg_1871,
        dout => grp_fu_1229_p3);

    conv2d_mac_muladdcud_U17 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_1_2_1_phi_reg_735,
        din1 => grp_fu_1236_p1,
        din2 => tmp_10_1_2_reg_1879,
        dout => grp_fu_1236_p3);

    conv2d_mac_muladdcud_U18 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_1_2_2_phi_reg_831,
        din1 => grp_fu_1242_p1,
        din2 => grp_fu_1236_p3,
        dout => grp_fu_1242_p3);

    conv2d_mac_muladdcud_U19 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_2_2_1_phi_reg_747,
        din1 => grp_fu_1250_p1,
        din2 => tmp_10_2_2_reg_1887,
        dout => grp_fu_1250_p3);

    conv2d_mac_muladdcud_U20 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_0_2_0_phi_reg_545,
        din1 => grp_fu_1259_p1,
        din2 => tmp_10_0_1_2_reg_1801,
        dout => grp_fu_1259_p3);

    conv2d_mac_muladdcud_U21 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_0_2_1_phi_reg_632,
        din1 => b_2_load_1_reg_1573,
        din2 => grp_fu_1259_p3,
        dout => grp_fu_1266_p3);

    conv2d_mac_muladdcud_U22 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_1_2_0_phi_reg_569,
        din1 => grp_fu_1274_p1,
        din2 => tmp_10_1_1_2_reg_1768,
        dout => grp_fu_1274_p3);

    conv2d_mac_muladdcud_U23 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_2_2_0_phi_reg_683,
        din1 => grp_fu_1281_p1,
        din2 => tmp_10_2_1_2_reg_1776,
        dout => grp_fu_1281_p3);

    conv2d_mac_muladdcud_U24 : component conv2d_mac_muladdcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => a_load_2_2_2_phi_reg_770,
        din1 => grp_fu_1291_p1,
        din2 => tmp_10_2_2_1_reg_1853,
        dout => grp_fu_1291_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    a_load_0_1_0_phi_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_0_1_0_phi_reg_533 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_0_1_0_phi_reg_533 <= a_2_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_0_1_0_phi_reg_533 <= a_1_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_0_1_1_phi_reg_620_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_0_1_1_phi_reg_620 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_0_1_1_phi_reg_620 <= a_2_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_0_1_1_phi_reg_620 <= a_1_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_0_1_2_phi_reg_782_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_0_1_2_phi_reg_782 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_0_1_2_phi_reg_782 <= a_2_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_0_1_2_phi_reg_782 <= a_1_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_0_2_0_phi_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_0_2_0_phi_reg_545 <= a_4_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_0_2_0_phi_reg_545 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_0_2_0_phi_reg_545 <= a_2_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_0_2_1_phi_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_0_2_1_phi_reg_632 <= a_4_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_0_2_1_phi_reg_632 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_0_2_1_phi_reg_632 <= a_2_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_0_2_2_phi_reg_793_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_0_2_2_phi_reg_793 <= a_4_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_0_2_2_phi_reg_793 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_0_2_2_phi_reg_793 <= a_2_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_1_1_0_phi_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_1_1_0_phi_reg_557 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_1_1_0_phi_reg_557 <= a_2_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_1_1_0_phi_reg_557 <= a_1_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_1_1_1_phi_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_1_1_1_phi_reg_723 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_1_1_1_phi_reg_723 <= a_2_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_1_1_1_phi_reg_723 <= a_1_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_1_1_2_phi_reg_819_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_1_1_2_phi_reg_819 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_1_1_2_phi_reg_819 <= a_2_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_1_1_2_phi_reg_819 <= a_1_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_1_2_0_phi_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_1_2_0_phi_reg_569 <= a_4_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_1_2_0_phi_reg_569 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_1_2_0_phi_reg_569 <= a_2_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_1_2_1_phi_reg_735_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_1_2_1_phi_reg_735 <= a_4_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_1_2_1_phi_reg_735 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_1_2_1_phi_reg_735 <= a_2_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_1_2_2_phi_reg_831_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_1_2_2_phi_reg_831 <= a_4_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_1_2_2_phi_reg_831 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_1_2_2_phi_reg_831 <= a_2_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_2_0_1_phi_reg_581_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_2_0_1_phi_reg_581 <= a_2_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_2_0_1_phi_reg_581 <= a_1_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_2_0_1_phi_reg_581 <= a_0_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_2_1_0_phi_reg_658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_2_1_0_phi_reg_658 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_2_1_0_phi_reg_658 <= a_2_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_2_1_0_phi_reg_658 <= a_1_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_2_1_2_phi_reg_759_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_2_1_2_phi_reg_759 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_2_1_2_phi_reg_759 <= a_2_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_2_1_2_phi_reg_759 <= a_1_q0;
                end if;
            end if; 
        end if;
    end process;

    a_load_2_2_0_phi_reg_683_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_2_2_0_phi_reg_683 <= a_4_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_2_2_0_phi_reg_683 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_2_2_0_phi_reg_683 <= a_2_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_2_2_1_phi_reg_747_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_2_2_1_phi_reg_747 <= a_4_q1;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_2_2_1_phi_reg_747 <= a_3_q1;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_2_2_1_phi_reg_747 <= a_2_q1;
                end if;
            end if; 
        end if;
    end process;

    a_load_2_2_2_phi_reg_770_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                    a_load_2_2_2_phi_reg_770 <= a_4_q0;
                elsif ((i_reg_493 = ap_const_lv2_1)) then 
                    a_load_2_2_2_phi_reg_770 <= a_3_q0;
                elsif ((i_reg_493 = ap_const_lv2_0)) then 
                    a_load_2_2_2_phi_reg_770 <= a_2_q0;
                end if;
            end if; 
        end if;
    end process;

    i_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond3_reg_1533 = ap_const_lv1_0))) then 
                i_reg_493 <= i_1_reg_1537;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_493 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                b_0_load_1_reg_1548 <= b_0_q1;
                b_1_load_1_reg_1558 <= b_1_q1;
                b_1_load_reg_1553 <= b_1_q0;
                b_2_load_1_reg_1573 <= b_2_q1;
                b_2_load_reg_1568 <= b_2_q0;
                tmp_3_reg_1542 <= tmp_3_fu_960_p1;
                tmp_7_2_reg_1588 <= tmp_7_2_fu_968_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                b_1_load_2_reg_1620 <= b_1_q0;
                b_2_load_2_reg_1630 <= b_2_q0;
                tmp_10_2_0_2_reg_1635 <= grp_fu_1132_p3;
                tmp_3_0_0_1_reg_1603 <= tmp_3_0_0_1_fu_989_p1;
                tmp_3_0_0_2_reg_1609 <= tmp_3_0_0_2_fu_992_p1;
                tmp_7_reg_1598 <= tmp_7_fu_981_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                exitcond3_reg_1533 <= exitcond3_fu_948_p2;
                i_1_reg_1537 <= i_1_fu_954_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                tmp_10_0_0_1_reg_1653 <= grp_fu_1140_p3;
                tmp_10_2_1_1_reg_1695 <= grp_fu_1153_p3;
                tmp_10_2_1_reg_1688 <= grp_fu_1146_p3;
                tmp_3_0_1_1_reg_1667 <= tmp_3_0_1_1_fu_1011_p1;
                tmp_3_0_1_reg_1661 <= tmp_3_0_1_fu_1008_p1;
                tmp_7_1_reg_1673 <= tmp_7_1_fu_1018_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                tmp_10_0_0_2_reg_1718 <= grp_fu_1161_p3;
                tmp_10_1_0_1_reg_1736 <= grp_fu_1167_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                tmp_10_0_1_1_reg_1788 <= grp_fu_1208_p3;
                tmp_10_0_1_2_reg_1801 <= grp_fu_1215_p3;
                tmp_10_0_1_reg_1781 <= grp_fu_1202_p3;
                tmp_10_1_0_2_reg_1809 <= grp_fu_1223_p3;
                tmp_3_0_1_2_reg_1795 <= tmp_3_0_1_2_fu_1070_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                tmp_10_0_2_1_reg_1871 <= grp_fu_1266_p3;
                tmp_10_0_2_reg_1858 <= grp_fu_1259_p3;
                tmp_10_1_2_reg_1879 <= grp_fu_1274_p3;
                tmp_10_2_2_reg_1887 <= grp_fu_1281_p3;
                tmp_3_0_2_1_reg_1865 <= tmp_3_0_2_1_fu_1107_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                tmp_10_0_2_2_reg_1832 <= grp_fu_1229_p3;
                tmp_10_1_2_1_reg_1839 <= grp_fu_1236_p3;
                tmp_10_1_2_2_reg_1846 <= grp_fu_1242_p3;
                tmp_10_2_2_1_reg_1853 <= grp_fu_1250_p3;
                tmp_3_0_2_2_reg_1827 <= tmp_3_0_2_2_fu_1081_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
                tmp_10_1_1_1_reg_1761 <= grp_fu_1179_p3;
                tmp_10_1_1_2_reg_1768 <= grp_fu_1186_p3;
                tmp_10_1_1_reg_1754 <= grp_fu_1173_p3;
                tmp_10_2_1_2_reg_1776 <= grp_fu_1193_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond3_fu_948_p2, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            a_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_0_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            a_0_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        else 
            a_0_address0 <= "XXX";
        end if; 
    end process;


    a_0_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            a_0_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_0_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_0_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        else 
            a_0_address1 <= "XXX";
        end if; 
    end process;


    a_0_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            a_0_ce0 <= ap_const_logic_1;
        else 
            a_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_0_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            a_0_ce1 <= ap_const_logic_1;
        else 
            a_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    a_1_address0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0))) then 
            a_1_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0))) then 
            a_1_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            a_1_address0 <= "XXX";
        end if; 
    end process;


    a_1_address1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0))) then 
            a_1_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            a_1_address1 <= "XXX";
        end if; 
    end process;


    a_1_ce0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_ce0 <= ap_const_logic_1;
        else 
            a_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_1_ce1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_1_ce1 <= ap_const_logic_1;
        else 
            a_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    a_2_address0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then 
            a_2_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            a_2_address0 <= "XXX";
        end if; 
    end process;


    a_2_address1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then 
            a_2_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            a_2_address1 <= "XXX";
        end if; 
    end process;


    a_2_ce0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_ce0 <= ap_const_logic_1;
        else 
            a_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_2_ce1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_2_ce1 <= ap_const_logic_1;
        else 
            a_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    a_3_address0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)))) then 
            a_3_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            a_3_address0 <= "XXX";
        end if; 
    end process;


    a_3_address1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif (((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)))) then 
            a_3_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            a_3_address1 <= "XXX";
        end if; 
    end process;


    a_3_ce0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_ce0 <= ap_const_logic_1;
        else 
            a_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_3_ce1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_phi_mux_i_phi_fu_497_p4)
    begin
        if (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            a_3_ce1 <= ap_const_logic_1;
        else 
            a_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    a_4_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            a_4_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            a_4_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_4_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_4_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            a_4_address0 <= "XXX";
        end if; 
    end process;


    a_4_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            a_4_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_4_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_4_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            a_4_address1 <= "XXX";
        end if; 
    end process;


    a_4_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            a_4_ce0 <= ap_const_logic_1;
        else 
            a_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_4_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            a_4_ce1 <= ap_const_logic_1;
        else 
            a_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 <= a_2_q0;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 <= a_1_q0;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 <= a_2_q0;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 <= a_1_q0;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 <= a_2_q0;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 <= a_1_q0;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6_assign_proc : process(a_0_q1, a_1_q1, a_2_q1, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 <= a_2_q1;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 <= a_1_q1;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 <= a_0_q1;
            else 
                ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6_assign_proc : process(a_0_q1, a_1_q1, a_2_q1, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 <= a_2_q1;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 <= a_1_q1;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 <= a_0_q1;
            else 
                ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 <= a_2_q0;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 <= a_1_q0;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6_assign_proc : process(a_0_q0, a_1_q0, a_2_q0, ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 <= a_2_q0;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 <= a_1_q0;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 <= a_0_q0;
            else 
                ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6_assign_proc : process(a_0_q1, a_1_q1, a_2_q1, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 <= a_2_q1;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 <= a_1_q1;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 <= a_0_q1;
            else 
                ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6_assign_proc : process(a_1_q1, a_2_q1, a_3_q1, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0))) then
            if ((not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)))) then 
                ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 <= a_3_q1;
            elsif ((i_reg_493 = ap_const_lv2_1)) then 
                ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 <= a_2_q1;
            elsif ((i_reg_493 = ap_const_lv2_0)) then 
                ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 <= a_1_q1;
            else 
                ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 <= "XXXXXXXX";
            end if;
        else 
            ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 <= "XXXXXXXX";
        end if; 
    end process;

    ap_phi_mux_i_phi_fu_497_p4 <= i_reg_493;

    ap_ready_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            b_0_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            b_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            b_0_address0 <= "XX";
        end if; 
    end process;

    b_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    b_0_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            b_0_ce0 <= ap_const_logic_1;
        else 
            b_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_0_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            b_0_ce1 <= ap_const_logic_1;
        else 
            b_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            b_1_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            b_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            b_1_address0 <= "XX";
        end if; 
    end process;

    b_1_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    b_1_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            b_1_ce0 <= ap_const_logic_1;
        else 
            b_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            b_1_ce1 <= ap_const_logic_1;
        else 
            b_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            b_2_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            b_2_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            b_2_address0 <= "XX";
        end if; 
    end process;

    b_2_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    b_2_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            b_2_ce0 <= ap_const_logic_1;
        else 
            b_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            b_2_ce1 <= ap_const_logic_1;
        else 
            b_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_948_p2 <= "1" when (i_reg_493 = ap_const_lv2_3) else "0";
    grp_fu_1140_p1 <= tmp_3_0_0_1_reg_1603(8 - 1 downto 0);
    grp_fu_1161_p1 <= tmp_3_0_0_2_reg_1609(8 - 1 downto 0);
    grp_fu_1167_p1 <= tmp_3_0_0_1_reg_1603(8 - 1 downto 0);
    grp_fu_1173_p1 <= tmp_3_0_1_reg_1661(8 - 1 downto 0);
    grp_fu_1179_p1 <= tmp_3_0_1_1_reg_1667(8 - 1 downto 0);
    grp_fu_1186_p1 <= tmp_3_0_1_2_reg_1795(8 - 1 downto 0);
    grp_fu_1193_p1 <= tmp_3_0_1_2_reg_1795(8 - 1 downto 0);
    grp_fu_1202_p1 <= tmp_3_0_1_reg_1661(8 - 1 downto 0);
    grp_fu_1208_p1 <= tmp_3_0_1_1_reg_1667(8 - 1 downto 0);
    grp_fu_1223_p1 <= tmp_3_0_0_2_reg_1609(8 - 1 downto 0);
    grp_fu_1229_p1 <= tmp_3_0_2_2_fu_1081_p1(8 - 1 downto 0);
    grp_fu_1236_p1 <= tmp_3_0_2_1_reg_1865(8 - 1 downto 0);
    grp_fu_1242_p1 <= tmp_3_0_2_2_fu_1081_p1(8 - 1 downto 0);
    grp_fu_1250_p1 <= tmp_3_0_2_1_reg_1865(8 - 1 downto 0);
    grp_fu_1259_p1 <= tmp_3_0_2_fu_1100_p1(8 - 1 downto 0);
    grp_fu_1274_p1 <= tmp_3_0_2_fu_1100_p1(8 - 1 downto 0);
    grp_fu_1281_p1 <= tmp_3_0_2_fu_1100_p1(8 - 1 downto 0);
    grp_fu_1291_p1 <= tmp_3_0_2_2_reg_1827(8 - 1 downto 0);
    i_1_fu_954_p2 <= std_logic_vector(unsigned(i_reg_493) + unsigned(ap_const_lv2_1));

    res_0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            res_0_address0 <= "XX";
        end if; 
    end process;


    res_0_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            res_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_0_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            res_0_address1 <= "XX";
        end if; 
    end process;


    res_0_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_0_ce0 <= ap_const_logic_1;
        else 
            res_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_0_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_0_ce1 <= ap_const_logic_1;
        else 
            res_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    res_0_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, tmp_7_fu_981_p2, tmp_10_0_0_1_reg_1653, tmp_7_1_fu_1018_p2, tmp_10_0_0_2_reg_1718, tmp_10_1_0_1_reg_1736, tmp_10_1_1_reg_1754, ap_CS_fsm_state7, tmp_10_0_1_reg_1781, tmp_10_0_1_1_reg_1788, tmp_10_0_1_2_reg_1801, tmp_10_1_0_2_reg_1809, ap_CS_fsm_state9, tmp_10_0_2_2_reg_1832, tmp_10_0_2_reg_1858, ap_CS_fsm_state12, tmp_10_0_2_1_reg_1871, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            res_0_d0 <= tmp_10_0_2_2_reg_1832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            res_0_d0 <= tmp_10_1_1_reg_1754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            res_0_d0 <= tmp_10_0_2_1_reg_1871;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            res_0_d0 <= tmp_10_0_2_reg_1858;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            res_0_d0 <= tmp_10_1_0_2_reg_1809;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            res_0_d0 <= tmp_10_0_1_2_reg_1801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            res_0_d0 <= tmp_10_0_1_1_reg_1788;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            res_0_d0 <= tmp_10_0_1_reg_1781;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_0_d0 <= tmp_10_1_0_1_reg_1736;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_0_d0 <= tmp_10_0_0_2_reg_1718;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            res_0_d0 <= tmp_10_0_0_1_reg_1653;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_0_d0 <= tmp_7_1_fu_1018_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            res_0_d0 <= tmp_7_fu_981_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_0_d0 <= ap_const_lv16_0;
        else 
            res_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_0_d1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, tmp_7_2_fu_968_p2, tmp_10_2_0_2_reg_1635, tmp_10_2_1_reg_1688, tmp_10_2_1_1_reg_1695, ap_CS_fsm_state7, tmp_10_1_1_1_reg_1761, tmp_10_1_1_2_reg_1768, grp_fu_1193_p3, ap_CS_fsm_state9, tmp_10_1_2_1_reg_1839, tmp_10_1_2_2_reg_1846, grp_fu_1250_p3, ap_CS_fsm_state12, tmp_10_1_2_reg_1879, grp_fu_1281_p3, ap_CS_fsm_state15, grp_fu_1122_p3, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_fu_1291_p3, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            res_0_d1 <= tmp_10_1_2_2_reg_1846;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            res_0_d1 <= grp_fu_1291_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            res_0_d1 <= tmp_10_1_2_1_reg_1839;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            res_0_d1 <= tmp_10_1_2_reg_1879;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            res_0_d1 <= grp_fu_1281_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            res_0_d1 <= tmp_10_1_1_2_reg_1768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            res_0_d1 <= tmp_10_1_1_1_reg_1761;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            res_0_d1 <= grp_fu_1250_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_0_d1 <= tmp_10_2_1_1_reg_1695;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_0_d1 <= grp_fu_1193_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            res_0_d1 <= tmp_10_2_1_reg_1688;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_0_d1 <= tmp_10_2_0_2_reg_1635;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            res_0_d1 <= grp_fu_1122_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            res_0_d1 <= tmp_7_2_fu_968_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            res_0_d1 <= ap_const_lv16_0;
        else 
            res_0_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_0_we0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_phi_mux_i_phi_fu_497_p4, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            res_0_we0 <= ap_const_logic_1;
        else 
            res_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    res_0_we1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_phi_mux_i_phi_fu_497_p4, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_0) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            res_0_we1 <= ap_const_logic_1;
        else 
            res_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    res_1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            res_1_address0 <= "XX";
        end if; 
    end process;


    res_1_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            res_1_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            res_1_address1 <= "XX";
        end if; 
    end process;


    res_1_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_1_ce0 <= ap_const_logic_1;
        else 
            res_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_1_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_1_ce1 <= ap_const_logic_1;
        else 
            res_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    res_1_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, tmp_7_fu_981_p2, tmp_10_0_0_1_reg_1653, tmp_7_1_fu_1018_p2, tmp_10_0_0_2_reg_1718, tmp_10_1_0_1_reg_1736, tmp_10_1_1_reg_1754, ap_CS_fsm_state7, tmp_10_0_1_reg_1781, tmp_10_0_1_1_reg_1788, tmp_10_0_1_2_reg_1801, tmp_10_1_0_2_reg_1809, ap_CS_fsm_state9, tmp_10_0_2_2_reg_1832, tmp_10_0_2_reg_1858, ap_CS_fsm_state12, tmp_10_0_2_1_reg_1871, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            res_1_d0 <= tmp_10_0_2_2_reg_1832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            res_1_d0 <= tmp_10_1_1_reg_1754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            res_1_d0 <= tmp_10_0_2_1_reg_1871;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            res_1_d0 <= tmp_10_0_2_reg_1858;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            res_1_d0 <= tmp_10_1_0_2_reg_1809;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            res_1_d0 <= tmp_10_0_1_2_reg_1801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            res_1_d0 <= tmp_10_0_1_1_reg_1788;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            res_1_d0 <= tmp_10_0_1_reg_1781;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_1_d0 <= tmp_10_1_0_1_reg_1736;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_1_d0 <= tmp_10_0_0_2_reg_1718;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            res_1_d0 <= tmp_10_0_0_1_reg_1653;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_1_d0 <= tmp_7_1_fu_1018_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            res_1_d0 <= tmp_7_fu_981_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_1_d0 <= ap_const_lv16_0;
        else 
            res_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_1_d1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, tmp_7_2_fu_968_p2, tmp_10_2_0_2_reg_1635, tmp_10_2_1_reg_1688, tmp_10_2_1_1_reg_1695, ap_CS_fsm_state7, tmp_10_1_1_1_reg_1761, tmp_10_1_1_2_reg_1768, grp_fu_1193_p3, ap_CS_fsm_state9, tmp_10_1_2_1_reg_1839, tmp_10_1_2_2_reg_1846, grp_fu_1250_p3, ap_CS_fsm_state12, tmp_10_1_2_reg_1879, grp_fu_1281_p3, ap_CS_fsm_state15, grp_fu_1122_p3, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_fu_1291_p3, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            res_1_d1 <= tmp_10_1_2_2_reg_1846;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            res_1_d1 <= grp_fu_1291_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            res_1_d1 <= tmp_10_1_2_1_reg_1839;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            res_1_d1 <= tmp_10_1_2_reg_1879;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            res_1_d1 <= grp_fu_1281_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            res_1_d1 <= tmp_10_1_1_2_reg_1768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            res_1_d1 <= tmp_10_1_1_1_reg_1761;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            res_1_d1 <= grp_fu_1250_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_1_d1 <= tmp_10_2_1_1_reg_1695;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_1_d1 <= grp_fu_1193_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            res_1_d1 <= tmp_10_2_1_reg_1688;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_1_d1 <= tmp_10_2_0_2_reg_1635;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            res_1_d1 <= grp_fu_1122_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            res_1_d1 <= tmp_7_2_fu_968_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            res_1_d1 <= ap_const_lv16_0;
        else 
            res_1_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_1_we0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_phi_mux_i_phi_fu_497_p4, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            res_1_we0 <= ap_const_logic_1;
        else 
            res_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    res_1_we1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_phi_mux_i_phi_fu_497_p4, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_reg_493 = ap_const_lv2_1) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            res_1_we1 <= ap_const_logic_1;
        else 
            res_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    res_2_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_2_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            res_2_address0 <= "XX";
        end if; 
    end process;


    res_2_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            res_2_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_2_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        else 
            res_2_address1 <= "XX";
        end if; 
    end process;


    res_2_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_2_ce0 <= ap_const_logic_1;
        else 
            res_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_2_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_2_ce1 <= ap_const_logic_1;
        else 
            res_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    res_2_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, tmp_7_fu_981_p2, tmp_10_0_0_1_reg_1653, tmp_7_1_fu_1018_p2, tmp_10_0_0_2_reg_1718, tmp_10_1_0_1_reg_1736, tmp_10_1_1_reg_1754, ap_CS_fsm_state7, tmp_10_0_1_reg_1781, tmp_10_0_1_1_reg_1788, tmp_10_0_1_2_reg_1801, tmp_10_1_0_2_reg_1809, ap_CS_fsm_state9, tmp_10_0_2_2_reg_1832, tmp_10_0_2_reg_1858, ap_CS_fsm_state12, tmp_10_0_2_1_reg_1871, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            res_2_d0 <= tmp_10_0_2_2_reg_1832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            res_2_d0 <= tmp_10_1_1_reg_1754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            res_2_d0 <= tmp_10_0_2_1_reg_1871;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            res_2_d0 <= tmp_10_0_2_reg_1858;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            res_2_d0 <= tmp_10_1_0_2_reg_1809;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            res_2_d0 <= tmp_10_0_1_2_reg_1801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            res_2_d0 <= tmp_10_0_1_1_reg_1788;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            res_2_d0 <= tmp_10_0_1_reg_1781;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_2_d0 <= tmp_10_1_0_1_reg_1736;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_2_d0 <= tmp_10_0_0_2_reg_1718;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            res_2_d0 <= tmp_10_0_0_1_reg_1653;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_2_d0 <= tmp_7_1_fu_1018_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            res_2_d0 <= tmp_7_fu_981_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            res_2_d0 <= ap_const_lv16_0;
        else 
            res_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_2_d1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state2, tmp_7_2_fu_968_p2, tmp_10_2_0_2_reg_1635, tmp_10_2_1_reg_1688, tmp_10_2_1_1_reg_1695, ap_CS_fsm_state7, tmp_10_1_1_1_reg_1761, tmp_10_1_1_2_reg_1768, grp_fu_1193_p3, ap_CS_fsm_state9, tmp_10_1_2_1_reg_1839, tmp_10_1_2_2_reg_1846, grp_fu_1250_p3, ap_CS_fsm_state12, tmp_10_1_2_reg_1879, grp_fu_1281_p3, ap_CS_fsm_state15, grp_fu_1122_p3, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_fu_1291_p3, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            res_2_d1 <= tmp_10_1_2_2_reg_1846;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            res_2_d1 <= grp_fu_1291_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            res_2_d1 <= tmp_10_1_2_1_reg_1839;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            res_2_d1 <= tmp_10_1_2_reg_1879;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            res_2_d1 <= grp_fu_1281_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            res_2_d1 <= tmp_10_1_1_2_reg_1768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            res_2_d1 <= tmp_10_1_1_1_reg_1761;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            res_2_d1 <= grp_fu_1250_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_2_d1 <= tmp_10_2_1_1_reg_1695;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_2_d1 <= grp_fu_1193_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            res_2_d1 <= tmp_10_2_1_reg_1688;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_2_d1 <= tmp_10_2_0_2_reg_1635;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            res_2_d1 <= grp_fu_1122_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            res_2_d1 <= tmp_7_2_fu_968_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            res_2_d1 <= ap_const_lv16_0;
        else 
            res_2_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_2_we0_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_phi_mux_i_phi_fu_497_p4, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            res_2_we0 <= ap_const_logic_1;
        else 
            res_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    res_2_we1_assign_proc : process(ap_CS_fsm_state3, exitcond3_reg_1533, i_reg_493, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, exitcond3_fu_948_p2, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_phi_mux_i_phi_fu_497_p4, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_0)) and not((ap_phi_mux_i_phi_fu_497_p4 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_948_p2 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_reg_1533 = ap_const_lv1_0)) or (not((i_reg_493 = ap_const_lv2_0)) and not((i_reg_493 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_reg_1533 = ap_const_lv1_0)))) then 
            res_2_we1 <= ap_const_logic_1;
        else 
            res_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_3_0_0_1_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_0_load_1_reg_1548),16));

        tmp_3_0_0_2_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_0_q0),16));

        tmp_3_0_1_1_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_1_load_1_reg_1558),16));

        tmp_3_0_1_2_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_1_load_2_reg_1620),16));

        tmp_3_0_1_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_1_load_reg_1553),16));

        tmp_3_0_2_1_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_2_load_1_reg_1573),16));

        tmp_3_0_2_2_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_2_load_2_reg_1630),16));

        tmp_3_0_2_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_2_load_reg_1568),16));

        tmp_3_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_0_q0),16));

    tmp_7_1_fu_1018_p0 <= ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6;
    tmp_7_1_fu_1018_p1 <= tmp_3_reg_1542(8 - 1 downto 0);
    tmp_7_1_fu_1018_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_7_1_fu_1018_p0) * signed(tmp_7_1_fu_1018_p1))), 16));
    tmp_7_2_fu_968_p0 <= ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6;
    tmp_7_2_fu_968_p1 <= b_0_q0;
    tmp_7_2_fu_968_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_7_2_fu_968_p0) * signed(tmp_7_2_fu_968_p1))), 16));
    tmp_7_fu_981_p0 <= ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6;
    tmp_7_fu_981_p1 <= tmp_3_reg_1542(8 - 1 downto 0);
    tmp_7_fu_981_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_7_fu_981_p0) * signed(tmp_7_fu_981_p1))), 16));
end behav;
