// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_HH_
#define _conv2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv2d_mac_muladdbkb.h"
#include "conv2d_mac_muladdcud.h"

namespace ap_rtl {

struct conv2d : public sc_module {
    // Port declarations 78
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > a_0_address0;
    sc_out< sc_logic > a_0_ce0;
    sc_in< sc_lv<8> > a_0_q0;
    sc_out< sc_lv<3> > a_0_address1;
    sc_out< sc_logic > a_0_ce1;
    sc_in< sc_lv<8> > a_0_q1;
    sc_out< sc_lv<3> > a_1_address0;
    sc_out< sc_logic > a_1_ce0;
    sc_in< sc_lv<8> > a_1_q0;
    sc_out< sc_lv<3> > a_1_address1;
    sc_out< sc_logic > a_1_ce1;
    sc_in< sc_lv<8> > a_1_q1;
    sc_out< sc_lv<3> > a_2_address0;
    sc_out< sc_logic > a_2_ce0;
    sc_in< sc_lv<8> > a_2_q0;
    sc_out< sc_lv<3> > a_2_address1;
    sc_out< sc_logic > a_2_ce1;
    sc_in< sc_lv<8> > a_2_q1;
    sc_out< sc_lv<3> > a_3_address0;
    sc_out< sc_logic > a_3_ce0;
    sc_in< sc_lv<8> > a_3_q0;
    sc_out< sc_lv<3> > a_3_address1;
    sc_out< sc_logic > a_3_ce1;
    sc_in< sc_lv<8> > a_3_q1;
    sc_out< sc_lv<3> > a_4_address0;
    sc_out< sc_logic > a_4_ce0;
    sc_in< sc_lv<8> > a_4_q0;
    sc_out< sc_lv<3> > a_4_address1;
    sc_out< sc_logic > a_4_ce1;
    sc_in< sc_lv<8> > a_4_q1;
    sc_out< sc_lv<2> > b_0_address0;
    sc_out< sc_logic > b_0_ce0;
    sc_in< sc_lv<8> > b_0_q0;
    sc_out< sc_lv<2> > b_0_address1;
    sc_out< sc_logic > b_0_ce1;
    sc_in< sc_lv<8> > b_0_q1;
    sc_out< sc_lv<2> > b_1_address0;
    sc_out< sc_logic > b_1_ce0;
    sc_in< sc_lv<8> > b_1_q0;
    sc_out< sc_lv<2> > b_1_address1;
    sc_out< sc_logic > b_1_ce1;
    sc_in< sc_lv<8> > b_1_q1;
    sc_out< sc_lv<2> > b_2_address0;
    sc_out< sc_logic > b_2_ce0;
    sc_in< sc_lv<8> > b_2_q0;
    sc_out< sc_lv<2> > b_2_address1;
    sc_out< sc_logic > b_2_ce1;
    sc_in< sc_lv<8> > b_2_q1;
    sc_out< sc_lv<2> > res_0_address0;
    sc_out< sc_logic > res_0_ce0;
    sc_out< sc_logic > res_0_we0;
    sc_out< sc_lv<16> > res_0_d0;
    sc_out< sc_lv<2> > res_0_address1;
    sc_out< sc_logic > res_0_ce1;
    sc_out< sc_logic > res_0_we1;
    sc_out< sc_lv<16> > res_0_d1;
    sc_out< sc_lv<2> > res_1_address0;
    sc_out< sc_logic > res_1_ce0;
    sc_out< sc_logic > res_1_we0;
    sc_out< sc_lv<16> > res_1_d0;
    sc_out< sc_lv<2> > res_1_address1;
    sc_out< sc_logic > res_1_ce1;
    sc_out< sc_logic > res_1_we1;
    sc_out< sc_lv<16> > res_1_d1;
    sc_out< sc_lv<2> > res_2_address0;
    sc_out< sc_logic > res_2_ce0;
    sc_out< sc_logic > res_2_we0;
    sc_out< sc_lv<16> > res_2_d0;
    sc_out< sc_lv<2> > res_2_address1;
    sc_out< sc_logic > res_2_ce1;
    sc_out< sc_logic > res_2_we1;
    sc_out< sc_lv<16> > res_2_d1;


    // Module declarations
    conv2d(sc_module_name name);
    SC_HAS_PROCESS(conv2d);

    ~conv2d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U1;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U2;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U3;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U4;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U5;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U6;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U7;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U8;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U9;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U10;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U11;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U12;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U13;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U14;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U15;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U16;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U17;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U18;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U19;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U20;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U21;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U22;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U23;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U24;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_reg_1533;
    sc_signal< sc_lv<2> > i_reg_493;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond3_fu_948_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > i_1_fu_954_p2;
    sc_signal< sc_lv<2> > i_1_reg_1537;
    sc_signal< sc_lv<16> > tmp_3_fu_960_p1;
    sc_signal< sc_lv<16> > tmp_3_reg_1542;
    sc_signal< sc_lv<8> > b_0_load_1_reg_1548;
    sc_signal< sc_lv<8> > b_1_load_reg_1553;
    sc_signal< sc_lv<8> > b_1_load_1_reg_1558;
    sc_signal< sc_lv<8> > b_2_load_reg_1568;
    sc_signal< sc_lv<8> > b_2_load_1_reg_1573;
    sc_signal< sc_lv<16> > tmp_7_2_fu_968_p2;
    sc_signal< sc_lv<16> > tmp_7_2_reg_1588;
    sc_signal< sc_lv<16> > tmp_7_fu_981_p2;
    sc_signal< sc_lv<16> > tmp_7_reg_1598;
    sc_signal< sc_lv<16> > tmp_3_0_0_1_fu_989_p1;
    sc_signal< sc_lv<16> > tmp_3_0_0_1_reg_1603;
    sc_signal< sc_lv<16> > tmp_3_0_0_2_fu_992_p1;
    sc_signal< sc_lv<16> > tmp_3_0_0_2_reg_1609;
    sc_signal< sc_lv<8> > b_1_load_2_reg_1620;
    sc_signal< sc_lv<8> > b_2_load_2_reg_1630;
    sc_signal< sc_lv<16> > grp_fu_1132_p3;
    sc_signal< sc_lv<16> > tmp_10_2_0_2_reg_1635;
    sc_signal< sc_lv<16> > grp_fu_1140_p3;
    sc_signal< sc_lv<16> > tmp_10_0_0_1_reg_1653;
    sc_signal< sc_lv<16> > tmp_3_0_1_fu_1008_p1;
    sc_signal< sc_lv<16> > tmp_3_0_1_reg_1661;
    sc_signal< sc_lv<16> > tmp_3_0_1_1_fu_1011_p1;
    sc_signal< sc_lv<16> > tmp_3_0_1_1_reg_1667;
    sc_signal< sc_lv<16> > tmp_7_1_fu_1018_p2;
    sc_signal< sc_lv<16> > tmp_7_1_reg_1673;
    sc_signal< sc_lv<16> > grp_fu_1146_p3;
    sc_signal< sc_lv<16> > tmp_10_2_1_reg_1688;
    sc_signal< sc_lv<16> > grp_fu_1153_p3;
    sc_signal< sc_lv<16> > tmp_10_2_1_1_reg_1695;
    sc_signal< sc_lv<16> > grp_fu_1161_p3;
    sc_signal< sc_lv<16> > tmp_10_0_0_2_reg_1718;
    sc_signal< sc_lv<16> > grp_fu_1167_p3;
    sc_signal< sc_lv<16> > tmp_10_1_0_1_reg_1736;
    sc_signal< sc_lv<16> > grp_fu_1173_p3;
    sc_signal< sc_lv<16> > tmp_10_1_1_reg_1754;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > grp_fu_1179_p3;
    sc_signal< sc_lv<16> > tmp_10_1_1_1_reg_1761;
    sc_signal< sc_lv<16> > grp_fu_1186_p3;
    sc_signal< sc_lv<16> > tmp_10_1_1_2_reg_1768;
    sc_signal< sc_lv<16> > grp_fu_1193_p3;
    sc_signal< sc_lv<16> > tmp_10_2_1_2_reg_1776;
    sc_signal< sc_lv<16> > grp_fu_1202_p3;
    sc_signal< sc_lv<16> > tmp_10_0_1_reg_1781;
    sc_signal< sc_lv<16> > grp_fu_1208_p3;
    sc_signal< sc_lv<16> > tmp_10_0_1_1_reg_1788;
    sc_signal< sc_lv<16> > tmp_3_0_1_2_fu_1070_p1;
    sc_signal< sc_lv<16> > tmp_3_0_1_2_reg_1795;
    sc_signal< sc_lv<16> > grp_fu_1215_p3;
    sc_signal< sc_lv<16> > tmp_10_0_1_2_reg_1801;
    sc_signal< sc_lv<16> > grp_fu_1223_p3;
    sc_signal< sc_lv<16> > tmp_10_1_0_2_reg_1809;
    sc_signal< sc_lv<16> > tmp_3_0_2_2_fu_1081_p1;
    sc_signal< sc_lv<16> > tmp_3_0_2_2_reg_1827;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > grp_fu_1229_p3;
    sc_signal< sc_lv<16> > tmp_10_0_2_2_reg_1832;
    sc_signal< sc_lv<16> > grp_fu_1236_p3;
    sc_signal< sc_lv<16> > tmp_10_1_2_1_reg_1839;
    sc_signal< sc_lv<16> > grp_fu_1242_p3;
    sc_signal< sc_lv<16> > tmp_10_1_2_2_reg_1846;
    sc_signal< sc_lv<16> > grp_fu_1250_p3;
    sc_signal< sc_lv<16> > tmp_10_2_2_1_reg_1853;
    sc_signal< sc_lv<16> > grp_fu_1259_p3;
    sc_signal< sc_lv<16> > tmp_10_0_2_reg_1858;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<16> > tmp_3_0_2_1_fu_1107_p1;
    sc_signal< sc_lv<16> > tmp_3_0_2_1_reg_1865;
    sc_signal< sc_lv<16> > grp_fu_1266_p3;
    sc_signal< sc_lv<16> > tmp_10_0_2_1_reg_1871;
    sc_signal< sc_lv<16> > grp_fu_1274_p3;
    sc_signal< sc_lv<16> > tmp_10_1_2_reg_1879;
    sc_signal< sc_lv<16> > grp_fu_1281_p3;
    sc_signal< sc_lv<16> > tmp_10_2_2_reg_1887;
    sc_signal< sc_lv<2> > ap_phi_mux_i_phi_fu_497_p4;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6;
    sc_signal< sc_lv<8> > a_load_0_1_0_phi_reg_533;
    sc_signal< sc_lv<8> > a_load_0_2_0_phi_reg_545;
    sc_signal< sc_lv<8> > a_load_1_1_0_phi_reg_557;
    sc_signal< sc_lv<8> > a_load_1_2_0_phi_reg_569;
    sc_signal< sc_lv<8> > a_load_2_0_1_phi_reg_581;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6;
    sc_signal< sc_lv<8> > a_load_0_1_1_phi_reg_620;
    sc_signal< sc_lv<8> > a_load_0_2_1_phi_reg_632;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6;
    sc_signal< sc_lv<8> > a_load_2_1_0_phi_reg_658;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6;
    sc_signal< sc_lv<8> > a_load_2_2_0_phi_reg_683;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6;
    sc_signal< sc_lv<8> > a_load_1_1_1_phi_reg_723;
    sc_signal< sc_lv<8> > a_load_1_2_1_phi_reg_735;
    sc_signal< sc_lv<8> > a_load_2_2_1_phi_reg_747;
    sc_signal< sc_lv<8> > a_load_2_1_2_phi_reg_759;
    sc_signal< sc_lv<8> > a_load_2_2_2_phi_reg_770;
    sc_signal< sc_lv<8> > a_load_0_1_2_phi_reg_782;
    sc_signal< sc_lv<8> > a_load_0_2_2_phi_reg_793;
    sc_signal< sc_lv<8> > ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6;
    sc_signal< sc_lv<8> > a_load_1_1_2_phi_reg_819;
    sc_signal< sc_lv<8> > a_load_1_2_2_phi_reg_831;
    sc_signal< sc_lv<16> > grp_fu_1122_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<16> > grp_fu_1291_p3;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > tmp_7_2_fu_968_p0;
    sc_signal< sc_lv<8> > tmp_7_2_fu_968_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_981_p0;
    sc_signal< sc_lv<8> > tmp_7_fu_981_p1;
    sc_signal< sc_lv<8> > tmp_7_1_fu_1018_p0;
    sc_signal< sc_lv<8> > tmp_7_1_fu_1018_p1;
    sc_signal< sc_lv<8> > grp_fu_1140_p1;
    sc_signal< sc_lv<8> > grp_fu_1161_p1;
    sc_signal< sc_lv<8> > grp_fu_1167_p1;
    sc_signal< sc_lv<8> > grp_fu_1173_p1;
    sc_signal< sc_lv<8> > grp_fu_1179_p1;
    sc_signal< sc_lv<8> > grp_fu_1186_p1;
    sc_signal< sc_lv<8> > grp_fu_1193_p1;
    sc_signal< sc_lv<8> > grp_fu_1202_p1;
    sc_signal< sc_lv<8> > grp_fu_1208_p1;
    sc_signal< sc_lv<8> > grp_fu_1223_p1;
    sc_signal< sc_lv<8> > grp_fu_1229_p1;
    sc_signal< sc_lv<8> > grp_fu_1236_p1;
    sc_signal< sc_lv<8> > grp_fu_1242_p1;
    sc_signal< sc_lv<8> > grp_fu_1250_p1;
    sc_signal< sc_lv<8> > grp_fu_1259_p1;
    sc_signal< sc_lv<16> > tmp_3_0_2_fu_1100_p1;
    sc_signal< sc_lv<8> > grp_fu_1274_p1;
    sc_signal< sc_lv<8> > grp_fu_1281_p1;
    sc_signal< sc_lv<8> > grp_fu_1291_p1;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_10;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_0_address0();
    void thread_a_0_address1();
    void thread_a_0_ce0();
    void thread_a_0_ce1();
    void thread_a_1_address0();
    void thread_a_1_address1();
    void thread_a_1_ce0();
    void thread_a_1_ce1();
    void thread_a_2_address0();
    void thread_a_2_address1();
    void thread_a_2_ce0();
    void thread_a_2_ce1();
    void thread_a_3_address0();
    void thread_a_3_address1();
    void thread_a_3_ce0();
    void thread_a_3_ce1();
    void thread_a_4_address0();
    void thread_a_4_address1();
    void thread_a_4_ce0();
    void thread_a_4_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6();
    void thread_ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6();
    void thread_ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6();
    void thread_ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6();
    void thread_ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6();
    void thread_ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6();
    void thread_ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6();
    void thread_ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6();
    void thread_ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6();
    void thread_ap_phi_mux_i_phi_fu_497_p4();
    void thread_ap_ready();
    void thread_b_0_address0();
    void thread_b_0_address1();
    void thread_b_0_ce0();
    void thread_b_0_ce1();
    void thread_b_1_address0();
    void thread_b_1_address1();
    void thread_b_1_ce0();
    void thread_b_1_ce1();
    void thread_b_2_address0();
    void thread_b_2_address1();
    void thread_b_2_ce0();
    void thread_b_2_ce1();
    void thread_exitcond3_fu_948_p2();
    void thread_grp_fu_1140_p1();
    void thread_grp_fu_1161_p1();
    void thread_grp_fu_1167_p1();
    void thread_grp_fu_1173_p1();
    void thread_grp_fu_1179_p1();
    void thread_grp_fu_1186_p1();
    void thread_grp_fu_1193_p1();
    void thread_grp_fu_1202_p1();
    void thread_grp_fu_1208_p1();
    void thread_grp_fu_1223_p1();
    void thread_grp_fu_1229_p1();
    void thread_grp_fu_1236_p1();
    void thread_grp_fu_1242_p1();
    void thread_grp_fu_1250_p1();
    void thread_grp_fu_1259_p1();
    void thread_grp_fu_1274_p1();
    void thread_grp_fu_1281_p1();
    void thread_grp_fu_1291_p1();
    void thread_i_1_fu_954_p2();
    void thread_res_0_address0();
    void thread_res_0_address1();
    void thread_res_0_ce0();
    void thread_res_0_ce1();
    void thread_res_0_d0();
    void thread_res_0_d1();
    void thread_res_0_we0();
    void thread_res_0_we1();
    void thread_res_1_address0();
    void thread_res_1_address1();
    void thread_res_1_ce0();
    void thread_res_1_ce1();
    void thread_res_1_d0();
    void thread_res_1_d1();
    void thread_res_1_we0();
    void thread_res_1_we1();
    void thread_res_2_address0();
    void thread_res_2_address1();
    void thread_res_2_ce0();
    void thread_res_2_ce1();
    void thread_res_2_d0();
    void thread_res_2_d1();
    void thread_res_2_we0();
    void thread_res_2_we1();
    void thread_tmp_3_0_0_1_fu_989_p1();
    void thread_tmp_3_0_0_2_fu_992_p1();
    void thread_tmp_3_0_1_1_fu_1011_p1();
    void thread_tmp_3_0_1_2_fu_1070_p1();
    void thread_tmp_3_0_1_fu_1008_p1();
    void thread_tmp_3_0_2_1_fu_1107_p1();
    void thread_tmp_3_0_2_2_fu_1081_p1();
    void thread_tmp_3_0_2_fu_1100_p1();
    void thread_tmp_3_fu_960_p1();
    void thread_tmp_7_1_fu_1018_p0();
    void thread_tmp_7_1_fu_1018_p1();
    void thread_tmp_7_1_fu_1018_p2();
    void thread_tmp_7_2_fu_968_p0();
    void thread_tmp_7_2_fu_968_p1();
    void thread_tmp_7_2_fu_968_p2();
    void thread_tmp_7_fu_981_p0();
    void thread_tmp_7_fu_981_p1();
    void thread_tmp_7_fu_981_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
