// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.010000,HLS_SYN_LAT=47,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=24,HLS_SYN_FF=750,HLS_SYN_LUT=1484}" *)

module conv2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        a_0_address1,
        a_0_ce1,
        a_0_q1,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        a_1_address1,
        a_1_ce1,
        a_1_q1,
        a_2_address0,
        a_2_ce0,
        a_2_q0,
        a_2_address1,
        a_2_ce1,
        a_2_q1,
        a_3_address0,
        a_3_ce0,
        a_3_q0,
        a_3_address1,
        a_3_ce1,
        a_3_q1,
        a_4_address0,
        a_4_ce0,
        a_4_q0,
        a_4_address1,
        a_4_ce1,
        a_4_q1,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_2_address1,
        b_2_ce1,
        b_2_q1,
        res_0_address0,
        res_0_ce0,
        res_0_we0,
        res_0_d0,
        res_0_address1,
        res_0_ce1,
        res_0_we1,
        res_0_d1,
        res_1_address0,
        res_1_ce0,
        res_1_we0,
        res_1_d0,
        res_1_address1,
        res_1_ce1,
        res_1_we1,
        res_1_d1,
        res_2_address0,
        res_2_ce0,
        res_2_we0,
        res_2_d0,
        res_2_address1,
        res_2_ce1,
        res_2_we1,
        res_2_d1
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] a_0_address0;
output   a_0_ce0;
input  [7:0] a_0_q0;
output  [2:0] a_0_address1;
output   a_0_ce1;
input  [7:0] a_0_q1;
output  [2:0] a_1_address0;
output   a_1_ce0;
input  [7:0] a_1_q0;
output  [2:0] a_1_address1;
output   a_1_ce1;
input  [7:0] a_1_q1;
output  [2:0] a_2_address0;
output   a_2_ce0;
input  [7:0] a_2_q0;
output  [2:0] a_2_address1;
output   a_2_ce1;
input  [7:0] a_2_q1;
output  [2:0] a_3_address0;
output   a_3_ce0;
input  [7:0] a_3_q0;
output  [2:0] a_3_address1;
output   a_3_ce1;
input  [7:0] a_3_q1;
output  [2:0] a_4_address0;
output   a_4_ce0;
input  [7:0] a_4_q0;
output  [2:0] a_4_address1;
output   a_4_ce1;
input  [7:0] a_4_q1;
output  [1:0] b_0_address0;
output   b_0_ce0;
input  [7:0] b_0_q0;
output  [1:0] b_0_address1;
output   b_0_ce1;
input  [7:0] b_0_q1;
output  [1:0] b_1_address0;
output   b_1_ce0;
input  [7:0] b_1_q0;
output  [1:0] b_1_address1;
output   b_1_ce1;
input  [7:0] b_1_q1;
output  [1:0] b_2_address0;
output   b_2_ce0;
input  [7:0] b_2_q0;
output  [1:0] b_2_address1;
output   b_2_ce1;
input  [7:0] b_2_q1;
output  [1:0] res_0_address0;
output   res_0_ce0;
output   res_0_we0;
output  [15:0] res_0_d0;
output  [1:0] res_0_address1;
output   res_0_ce1;
output   res_0_we1;
output  [15:0] res_0_d1;
output  [1:0] res_1_address0;
output   res_1_ce0;
output   res_1_we0;
output  [15:0] res_1_d0;
output  [1:0] res_1_address1;
output   res_1_ce1;
output   res_1_we1;
output  [15:0] res_1_d1;
output  [1:0] res_2_address0;
output   res_2_ce0;
output   res_2_we0;
output  [15:0] res_2_d0;
output  [1:0] res_2_address1;
output   res_2_ce1;
output   res_2_we1;
output  [15:0] res_2_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] a_0_address0;
reg a_0_ce0;
reg[2:0] a_0_address1;
reg a_0_ce1;
reg[2:0] a_1_address0;
reg a_1_ce0;
reg[2:0] a_1_address1;
reg a_1_ce1;
reg[2:0] a_2_address0;
reg a_2_ce0;
reg[2:0] a_2_address1;
reg a_2_ce1;
reg[2:0] a_3_address0;
reg a_3_ce0;
reg[2:0] a_3_address1;
reg a_3_ce1;
reg[2:0] a_4_address0;
reg a_4_ce0;
reg[2:0] a_4_address1;
reg a_4_ce1;
reg[1:0] b_0_address0;
reg b_0_ce0;
reg b_0_ce1;
reg[1:0] b_1_address0;
reg b_1_ce0;
reg b_1_ce1;
reg[1:0] b_2_address0;
reg b_2_ce0;
reg b_2_ce1;
reg[1:0] res_0_address0;
reg res_0_ce0;
reg res_0_we0;
reg[15:0] res_0_d0;
reg[1:0] res_0_address1;
reg res_0_ce1;
reg res_0_we1;
reg[15:0] res_0_d1;
reg[1:0] res_1_address0;
reg res_1_ce0;
reg res_1_we0;
reg[15:0] res_1_d0;
reg[1:0] res_1_address1;
reg res_1_ce1;
reg res_1_we1;
reg[15:0] res_1_d1;
reg[1:0] res_2_address0;
reg res_2_ce0;
reg res_2_we0;
reg[15:0] res_2_d0;
reg[1:0] res_2_address1;
reg res_2_ce1;
reg res_2_we1;
reg[15:0] res_2_d1;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
reg   [0:0] exitcond3_reg_1533;
reg   [1:0] i_reg_493;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond3_fu_948_p2;
wire    ap_CS_fsm_state2;
wire   [1:0] i_1_fu_954_p2;
reg   [1:0] i_1_reg_1537;
wire  signed [15:0] tmp_3_fu_960_p1;
reg  signed [15:0] tmp_3_reg_1542;
reg  signed [7:0] b_0_load_1_reg_1548;
reg  signed [7:0] b_1_load_reg_1553;
reg  signed [7:0] b_1_load_1_reg_1558;
reg   [7:0] b_2_load_reg_1568;
reg  signed [7:0] b_2_load_1_reg_1573;
wire   [15:0] tmp_7_2_fu_968_p2;
reg   [15:0] tmp_7_2_reg_1588;
wire   [15:0] tmp_7_fu_981_p2;
reg   [15:0] tmp_7_reg_1598;
wire  signed [15:0] tmp_3_0_0_1_fu_989_p1;
reg  signed [15:0] tmp_3_0_0_1_reg_1603;
wire  signed [15:0] tmp_3_0_0_2_fu_992_p1;
reg  signed [15:0] tmp_3_0_0_2_reg_1609;
reg  signed [7:0] b_1_load_2_reg_1620;
reg   [7:0] b_2_load_2_reg_1630;
wire  signed [15:0] grp_fu_1132_p3;
reg  signed [15:0] tmp_10_2_0_2_reg_1635;
wire  signed [15:0] grp_fu_1140_p3;
reg  signed [15:0] tmp_10_0_0_1_reg_1653;
wire  signed [15:0] tmp_3_0_1_fu_1008_p1;
reg  signed [15:0] tmp_3_0_1_reg_1661;
wire  signed [15:0] tmp_3_0_1_1_fu_1011_p1;
reg  signed [15:0] tmp_3_0_1_1_reg_1667;
wire   [15:0] tmp_7_1_fu_1018_p2;
reg   [15:0] tmp_7_1_reg_1673;
wire  signed [15:0] grp_fu_1146_p3;
reg  signed [15:0] tmp_10_2_1_reg_1688;
wire  signed [15:0] grp_fu_1153_p3;
reg  signed [15:0] tmp_10_2_1_1_reg_1695;
wire  signed [15:0] grp_fu_1161_p3;
reg  signed [15:0] tmp_10_0_0_2_reg_1718;
wire  signed [15:0] grp_fu_1167_p3;
reg  signed [15:0] tmp_10_1_0_1_reg_1736;
wire  signed [15:0] grp_fu_1173_p3;
reg  signed [15:0] tmp_10_1_1_reg_1754;
wire    ap_CS_fsm_state7;
wire  signed [15:0] grp_fu_1179_p3;
reg  signed [15:0] tmp_10_1_1_1_reg_1761;
wire  signed [15:0] grp_fu_1186_p3;
reg  signed [15:0] tmp_10_1_1_2_reg_1768;
wire  signed [15:0] grp_fu_1193_p3;
reg  signed [15:0] tmp_10_2_1_2_reg_1776;
wire  signed [15:0] grp_fu_1202_p3;
reg  signed [15:0] tmp_10_0_1_reg_1781;
wire  signed [15:0] grp_fu_1208_p3;
reg  signed [15:0] tmp_10_0_1_1_reg_1788;
wire  signed [15:0] tmp_3_0_1_2_fu_1070_p1;
reg  signed [15:0] tmp_3_0_1_2_reg_1795;
wire  signed [15:0] grp_fu_1215_p3;
reg  signed [15:0] tmp_10_0_1_2_reg_1801;
wire  signed [15:0] grp_fu_1223_p3;
reg  signed [15:0] tmp_10_1_0_2_reg_1809;
wire  signed [15:0] tmp_3_0_2_2_fu_1081_p1;
reg  signed [15:0] tmp_3_0_2_2_reg_1827;
wire    ap_CS_fsm_state9;
wire  signed [15:0] grp_fu_1229_p3;
reg  signed [15:0] tmp_10_0_2_2_reg_1832;
wire  signed [15:0] grp_fu_1236_p3;
reg  signed [15:0] tmp_10_1_2_1_reg_1839;
wire  signed [15:0] grp_fu_1242_p3;
reg  signed [15:0] tmp_10_1_2_2_reg_1846;
wire  signed [15:0] grp_fu_1250_p3;
reg  signed [15:0] tmp_10_2_2_1_reg_1853;
wire  signed [15:0] grp_fu_1259_p3;
reg  signed [15:0] tmp_10_0_2_reg_1858;
wire    ap_CS_fsm_state12;
wire  signed [15:0] tmp_3_0_2_1_fu_1107_p1;
reg  signed [15:0] tmp_3_0_2_1_reg_1865;
wire  signed [15:0] grp_fu_1266_p3;
reg  signed [15:0] tmp_10_0_2_1_reg_1871;
wire  signed [15:0] grp_fu_1274_p3;
reg  signed [15:0] tmp_10_1_2_reg_1879;
wire  signed [15:0] grp_fu_1281_p3;
reg  signed [15:0] tmp_10_2_2_reg_1887;
wire   [1:0] ap_phi_mux_i_phi_fu_497_p4;
wire    ap_CS_fsm_state15;
reg   [7:0] ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6;
reg   [7:0] ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6;
reg  signed [7:0] a_load_0_1_0_phi_reg_533;
reg  signed [7:0] a_load_0_2_0_phi_reg_545;
reg  signed [7:0] a_load_1_1_0_phi_reg_557;
reg  signed [7:0] a_load_1_2_0_phi_reg_569;
reg  signed [7:0] a_load_2_0_1_phi_reg_581;
reg  signed [7:0] ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6;
reg  signed [7:0] ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6;
reg  signed [7:0] a_load_0_1_1_phi_reg_620;
reg  signed [7:0] a_load_0_2_1_phi_reg_632;
reg   [7:0] ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6;
reg  signed [7:0] a_load_2_1_0_phi_reg_658;
reg  signed [7:0] ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6;
reg  signed [7:0] a_load_2_2_0_phi_reg_683;
reg  signed [7:0] ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6;
reg  signed [7:0] ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6;
reg  signed [7:0] a_load_1_1_1_phi_reg_723;
reg  signed [7:0] a_load_1_2_1_phi_reg_735;
reg  signed [7:0] a_load_2_2_1_phi_reg_747;
reg  signed [7:0] a_load_2_1_2_phi_reg_759;
reg  signed [7:0] a_load_2_2_2_phi_reg_770;
reg  signed [7:0] a_load_0_1_2_phi_reg_782;
reg  signed [7:0] a_load_0_2_2_phi_reg_793;
reg  signed [7:0] ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6;
reg  signed [7:0] a_load_1_1_2_phi_reg_819;
reg  signed [7:0] a_load_1_2_2_phi_reg_831;
wire  signed [15:0] grp_fu_1122_p3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire  signed [15:0] grp_fu_1291_p3;
wire    ap_CS_fsm_state16;
wire  signed [7:0] tmp_7_2_fu_968_p0;
wire  signed [7:0] tmp_7_2_fu_968_p1;
wire  signed [7:0] tmp_7_fu_981_p0;
wire  signed [7:0] tmp_7_fu_981_p1;
wire  signed [7:0] tmp_7_1_fu_1018_p0;
wire  signed [7:0] tmp_7_1_fu_1018_p1;
wire  signed [7:0] grp_fu_1140_p1;
wire  signed [7:0] grp_fu_1161_p1;
wire  signed [7:0] grp_fu_1167_p1;
wire  signed [7:0] grp_fu_1173_p1;
wire  signed [7:0] grp_fu_1179_p1;
wire  signed [7:0] grp_fu_1186_p1;
wire  signed [7:0] grp_fu_1193_p1;
wire  signed [7:0] grp_fu_1202_p1;
wire  signed [7:0] grp_fu_1208_p1;
wire  signed [7:0] grp_fu_1223_p1;
wire  signed [7:0] grp_fu_1229_p1;
wire  signed [7:0] grp_fu_1236_p1;
wire  signed [7:0] grp_fu_1242_p1;
wire  signed [7:0] grp_fu_1250_p1;
wire  signed [7:0] grp_fu_1259_p1;
wire  signed [15:0] tmp_3_0_2_fu_1100_p1;
wire  signed [7:0] grp_fu_1274_p1;
wire  signed [7:0] grp_fu_1281_p1;
wire  signed [7:0] grp_fu_1291_p1;
wire    ap_CS_fsm_state17;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
end

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U1(
    .din0(a_load_2_0_1_phi_reg_581),
    .din1(b_0_load_1_reg_1548),
    .din2(tmp_7_2_reg_1588),
    .dout(grp_fu_1122_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U2(
    .din0(ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6),
    .din1(b_0_q0),
    .din2(grp_fu_1122_p3),
    .dout(grp_fu_1132_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U3(
    .din0(ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6),
    .din1(grp_fu_1140_p1),
    .din2(tmp_7_reg_1598),
    .dout(grp_fu_1140_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U4(
    .din0(a_load_2_1_0_phi_reg_658),
    .din1(b_1_load_reg_1553),
    .din2(tmp_10_2_0_2_reg_1635),
    .dout(grp_fu_1146_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U5(
    .din0(ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6),
    .din1(b_1_load_1_reg_1558),
    .din2(grp_fu_1146_p3),
    .dout(grp_fu_1153_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U6(
    .din0(ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6),
    .din1(grp_fu_1161_p1),
    .din2(tmp_10_0_0_1_reg_1653),
    .dout(grp_fu_1161_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U7(
    .din0(ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6),
    .din1(grp_fu_1167_p1),
    .din2(tmp_7_1_reg_1673),
    .dout(grp_fu_1167_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U8(
    .din0(a_load_1_1_0_phi_reg_557),
    .din1(grp_fu_1173_p1),
    .din2(tmp_10_1_0_2_reg_1809),
    .dout(grp_fu_1173_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U9(
    .din0(a_load_1_1_1_phi_reg_723),
    .din1(grp_fu_1179_p1),
    .din2(grp_fu_1173_p3),
    .dout(grp_fu_1179_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U10(
    .din0(a_load_1_1_2_phi_reg_819),
    .din1(grp_fu_1186_p1),
    .din2(grp_fu_1179_p3),
    .dout(grp_fu_1186_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U11(
    .din0(a_load_2_1_2_phi_reg_759),
    .din1(grp_fu_1193_p1),
    .din2(tmp_10_2_1_1_reg_1695),
    .dout(grp_fu_1193_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U12(
    .din0(a_load_0_1_0_phi_reg_533),
    .din1(grp_fu_1202_p1),
    .din2(tmp_10_0_0_2_reg_1718),
    .dout(grp_fu_1202_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U13(
    .din0(a_load_0_1_1_phi_reg_620),
    .din1(grp_fu_1208_p1),
    .din2(grp_fu_1202_p3),
    .dout(grp_fu_1208_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U14(
    .din0(a_load_0_1_2_phi_reg_782),
    .din1(b_1_load_2_reg_1620),
    .din2(grp_fu_1208_p3),
    .dout(grp_fu_1215_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U15(
    .din0(ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6),
    .din1(grp_fu_1223_p1),
    .din2(tmp_10_1_0_1_reg_1736),
    .dout(grp_fu_1223_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U16(
    .din0(a_load_0_2_2_phi_reg_793),
    .din1(grp_fu_1229_p1),
    .din2(tmp_10_0_2_1_reg_1871),
    .dout(grp_fu_1229_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U17(
    .din0(a_load_1_2_1_phi_reg_735),
    .din1(grp_fu_1236_p1),
    .din2(tmp_10_1_2_reg_1879),
    .dout(grp_fu_1236_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U18(
    .din0(a_load_1_2_2_phi_reg_831),
    .din1(grp_fu_1242_p1),
    .din2(grp_fu_1236_p3),
    .dout(grp_fu_1242_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U19(
    .din0(a_load_2_2_1_phi_reg_747),
    .din1(grp_fu_1250_p1),
    .din2(tmp_10_2_2_reg_1887),
    .dout(grp_fu_1250_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U20(
    .din0(a_load_0_2_0_phi_reg_545),
    .din1(grp_fu_1259_p1),
    .din2(tmp_10_0_1_2_reg_1801),
    .dout(grp_fu_1259_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U21(
    .din0(a_load_0_2_1_phi_reg_632),
    .din1(b_2_load_1_reg_1573),
    .din2(grp_fu_1259_p3),
    .dout(grp_fu_1266_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U22(
    .din0(a_load_1_2_0_phi_reg_569),
    .din1(grp_fu_1274_p1),
    .din2(tmp_10_1_1_2_reg_1768),
    .dout(grp_fu_1274_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U23(
    .din0(a_load_2_2_0_phi_reg_683),
    .din1(grp_fu_1281_p1),
    .din2(tmp_10_2_1_2_reg_1776),
    .dout(grp_fu_1281_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U24(
    .din0(a_load_2_2_2_phi_reg_770),
    .din1(grp_fu_1291_p1),
    .din2(tmp_10_2_2_1_reg_1853),
    .dout(grp_fu_1291_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_0_1_0_phi_reg_533 <= a_3_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_0_1_0_phi_reg_533 <= a_2_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_0_1_0_phi_reg_533 <= a_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_0_1_1_phi_reg_620 <= a_3_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_0_1_1_phi_reg_620 <= a_2_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_0_1_1_phi_reg_620 <= a_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_0_1_2_phi_reg_782 <= a_3_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_0_1_2_phi_reg_782 <= a_2_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_0_1_2_phi_reg_782 <= a_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_0_2_0_phi_reg_545 <= a_4_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_0_2_0_phi_reg_545 <= a_3_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_0_2_0_phi_reg_545 <= a_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_0_2_1_phi_reg_632 <= a_4_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_0_2_1_phi_reg_632 <= a_3_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_0_2_1_phi_reg_632 <= a_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_0_2_2_phi_reg_793 <= a_4_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_0_2_2_phi_reg_793 <= a_3_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_0_2_2_phi_reg_793 <= a_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_1_1_0_phi_reg_557 <= a_3_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_1_1_0_phi_reg_557 <= a_2_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_1_1_0_phi_reg_557 <= a_1_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_1_1_1_phi_reg_723 <= a_3_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_1_1_1_phi_reg_723 <= a_2_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_1_1_1_phi_reg_723 <= a_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_1_1_2_phi_reg_819 <= a_3_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_1_1_2_phi_reg_819 <= a_2_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_1_1_2_phi_reg_819 <= a_1_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_1_2_0_phi_reg_569 <= a_4_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_1_2_0_phi_reg_569 <= a_3_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_1_2_0_phi_reg_569 <= a_2_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_1_2_1_phi_reg_735 <= a_4_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_1_2_1_phi_reg_735 <= a_3_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_1_2_1_phi_reg_735 <= a_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_1_2_2_phi_reg_831 <= a_4_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_1_2_2_phi_reg_831 <= a_3_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_1_2_2_phi_reg_831 <= a_2_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_2_0_1_phi_reg_581 <= a_2_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_2_0_1_phi_reg_581 <= a_1_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_2_0_1_phi_reg_581 <= a_0_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_2_1_0_phi_reg_658 <= a_3_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_2_1_0_phi_reg_658 <= a_2_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_2_1_0_phi_reg_658 <= a_1_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_2_1_2_phi_reg_759 <= a_3_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_2_1_2_phi_reg_759 <= a_2_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_2_1_2_phi_reg_759 <= a_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_2_2_0_phi_reg_683 <= a_4_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_2_2_0_phi_reg_683 <= a_3_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_2_2_0_phi_reg_683 <= a_2_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_2_2_1_phi_reg_747 <= a_4_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_2_2_1_phi_reg_747 <= a_3_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_2_2_1_phi_reg_747 <= a_2_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            a_load_2_2_2_phi_reg_770 <= a_4_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            a_load_2_2_2_phi_reg_770 <= a_3_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            a_load_2_2_2_phi_reg_770 <= a_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond3_reg_1533 == 1'd0))) begin
        i_reg_493 <= i_1_reg_1537;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_493 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        b_0_load_1_reg_1548 <= b_0_q1;
        b_1_load_1_reg_1558 <= b_1_q1;
        b_1_load_reg_1553 <= b_1_q0;
        b_2_load_1_reg_1573 <= b_2_q1;
        b_2_load_reg_1568 <= b_2_q0;
        tmp_3_reg_1542 <= tmp_3_fu_960_p1;
        tmp_7_2_reg_1588 <= tmp_7_2_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        b_1_load_2_reg_1620 <= b_1_q0;
        b_2_load_2_reg_1630 <= b_2_q0;
        tmp_10_2_0_2_reg_1635 <= grp_fu_1132_p3;
        tmp_3_0_0_1_reg_1603 <= tmp_3_0_0_1_fu_989_p1;
        tmp_3_0_0_2_reg_1609 <= tmp_3_0_0_2_fu_992_p1;
        tmp_7_reg_1598 <= tmp_7_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        exitcond3_reg_1533 <= exitcond3_fu_948_p2;
        i_1_reg_1537 <= i_1_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        tmp_10_0_0_1_reg_1653 <= grp_fu_1140_p3;
        tmp_10_2_1_1_reg_1695 <= grp_fu_1153_p3;
        tmp_10_2_1_reg_1688 <= grp_fu_1146_p3;
        tmp_3_0_1_1_reg_1667 <= tmp_3_0_1_1_fu_1011_p1;
        tmp_3_0_1_reg_1661 <= tmp_3_0_1_fu_1008_p1;
        tmp_7_1_reg_1673 <= tmp_7_1_fu_1018_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        tmp_10_0_0_2_reg_1718 <= grp_fu_1161_p3;
        tmp_10_1_0_1_reg_1736 <= grp_fu_1167_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_reg_1533 == 1'd0))) begin
        tmp_10_0_1_1_reg_1788 <= grp_fu_1208_p3;
        tmp_10_0_1_2_reg_1801 <= grp_fu_1215_p3;
        tmp_10_0_1_reg_1781 <= grp_fu_1202_p3;
        tmp_10_1_0_2_reg_1809 <= grp_fu_1223_p3;
        tmp_3_0_1_2_reg_1795 <= tmp_3_0_1_2_fu_1070_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond3_reg_1533 == 1'd0))) begin
        tmp_10_0_2_1_reg_1871 <= grp_fu_1266_p3;
        tmp_10_0_2_reg_1858 <= grp_fu_1259_p3;
        tmp_10_1_2_reg_1879 <= grp_fu_1274_p3;
        tmp_10_2_2_reg_1887 <= grp_fu_1281_p3;
        tmp_3_0_2_1_reg_1865 <= tmp_3_0_2_1_fu_1107_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond3_reg_1533 == 1'd0))) begin
        tmp_10_0_2_2_reg_1832 <= grp_fu_1229_p3;
        tmp_10_1_2_1_reg_1839 <= grp_fu_1236_p3;
        tmp_10_1_2_2_reg_1846 <= grp_fu_1242_p3;
        tmp_10_2_2_1_reg_1853 <= grp_fu_1250_p3;
        tmp_3_0_2_2_reg_1827 <= tmp_3_0_2_2_fu_1081_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond3_reg_1533 == 1'd0))) begin
        tmp_10_1_1_1_reg_1761 <= grp_fu_1179_p3;
        tmp_10_1_1_2_reg_1768 <= grp_fu_1186_p3;
        tmp_10_1_1_reg_1754 <= grp_fu_1173_p3;
        tmp_10_2_1_2_reg_1776 <= grp_fu_1193_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_0_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5))) begin
        a_0_address0 = 64'd2;
    end else begin
        a_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_0_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_0_address1 = 64'd3;
    end else begin
        a_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        a_0_ce0 = 1'b1;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        a_0_ce1 = 1'b1;
    end else begin
        a_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0))) begin
        a_1_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0))) begin
        a_1_address0 = 64'd3;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_address0 = 64'd1;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_address0 = 64'd2;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_address0 = 64'd0;
    end else begin
        a_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0))) begin
        a_1_address1 = 64'd4;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_address1 = 64'd3;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_address1 = 64'd1;
    end else begin
        a_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_ce0 = 1'b1;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_1_ce1 = 1'b1;
    end else begin
        a_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address0 = 64'd4;
    end else if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        a_2_address0 = 64'd3;
    end else if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address0 = 64'd1;
    end else if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address0 = 64'd2;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address0 = 64'd0;
    end else begin
        a_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address1 = 64'd2;
    end else if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        a_2_address1 = 64'd4;
    end else if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address1 = 64'd3;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_address1 = 64'd1;
    end else begin
        a_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_ce0 = 1'b1;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_2_ce1 = 1'b1;
    end else begin
        a_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_address0 = 64'd4;
    end else if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_address0 = 64'd2;
    end else if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_address0 = 64'd1;
    end else if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)))) begin
        a_3_address0 = 64'd0;
    end else begin
        a_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_address1 = 64'd3;
    end else if (((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_address1 = 64'd2;
    end else if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)))) begin
        a_3_address1 = 64'd1;
    end else begin
        a_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_ce0 = 1'b1;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        a_3_ce1 = 1'b1;
    end else begin
        a_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_4_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        a_4_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_4_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_4_address0 = 64'd0;
    end else begin
        a_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        a_4_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_4_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_4_address1 = 64'd1;
    end else begin
        a_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        a_4_ce0 = 1'b1;
    end else begin
        a_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        a_4_ce1 = 1'b1;
    end else begin
        a_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 = a_2_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 = a_1_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 = a_2_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 = a_1_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_0_0_1_phi_phi_fu_609_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 = a_2_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 = a_1_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_0_0_2_phi_phi_fu_698_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 = a_2_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 = a_1_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 = a_0_q1;
        end else begin
            ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 = a_2_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 = a_1_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 = a_0_q1;
        end else begin
            ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_1_0_1_phi_phi_fu_712_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 = a_2_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 = a_1_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_1_0_2_phi_phi_fu_808_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 = a_2_q0;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 = a_1_q0;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 = a_0_q0;
        end else begin
            ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 = a_2_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 = a_1_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 = a_0_q1;
        end else begin
            ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_2_0_2_phi_phi_fu_595_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0))) begin
        if ((~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1))) begin
            ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 = a_3_q1;
        end else if ((i_reg_493 == 2'd1)) begin
            ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 = a_2_q1;
        end else if ((i_reg_493 == 2'd0)) begin
            ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 = a_1_q1;
        end else begin
            ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_a_load_2_1_1_phi_phi_fu_672_p6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        b_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_0_address0 = 64'd0;
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        b_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_1_address0 = 64'd0;
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        b_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_2_address0 = 64'd0;
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_2_ce1 = 1'b1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        res_0_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        res_0_address0 = 64'd0;
    end else begin
        res_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        res_0_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_0_address1 = 64'd2;
    end else begin
        res_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_0_ce0 = 1'b1;
    end else begin
        res_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_0_ce1 = 1'b1;
    end else begin
        res_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_0_d0 = tmp_10_0_2_2_reg_1832;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_0_d0 = tmp_10_1_1_reg_1754;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_0_d0 = tmp_10_0_2_1_reg_1871;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_0_d0 = tmp_10_0_2_reg_1858;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        res_0_d0 = tmp_10_1_0_2_reg_1809;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        res_0_d0 = tmp_10_0_1_2_reg_1801;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        res_0_d0 = tmp_10_0_1_1_reg_1788;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        res_0_d0 = tmp_10_0_1_reg_1781;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        res_0_d0 = tmp_10_1_0_1_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_0_d0 = tmp_10_0_0_2_reg_1718;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        res_0_d0 = tmp_10_0_0_1_reg_1653;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        res_0_d0 = tmp_7_1_fu_1018_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        res_0_d0 = tmp_7_fu_981_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        res_0_d0 = 16'd0;
    end else begin
        res_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_0_d1 = tmp_10_1_2_2_reg_1846;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_0_d1 = grp_fu_1291_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_0_d1 = tmp_10_1_2_1_reg_1839;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_0_d1 = tmp_10_1_2_reg_1879;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        res_0_d1 = grp_fu_1281_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        res_0_d1 = tmp_10_1_1_2_reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        res_0_d1 = tmp_10_1_1_1_reg_1761;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        res_0_d1 = grp_fu_1250_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        res_0_d1 = tmp_10_2_1_1_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_0_d1 = grp_fu_1193_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        res_0_d1 = tmp_10_2_1_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        res_0_d1 = tmp_10_2_0_2_reg_1635;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        res_0_d1 = grp_fu_1122_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        res_0_d1 = tmp_7_2_fu_968_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        res_0_d1 = 16'd0;
    end else begin
        res_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state14) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state13) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state11) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state10) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)))) begin
        res_0_we0 = 1'b1;
    end else begin
        res_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state14) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state13) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state11) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state10) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd0) & (exitcond3_reg_1533 == 1'd0)))) begin
        res_0_we1 = 1'b1;
    end else begin
        res_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        res_1_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        res_1_address0 = 64'd0;
    end else begin
        res_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        res_1_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_1_address1 = 64'd2;
    end else begin
        res_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_1_ce0 = 1'b1;
    end else begin
        res_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_1_ce1 = 1'b1;
    end else begin
        res_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_1_d0 = tmp_10_0_2_2_reg_1832;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_1_d0 = tmp_10_1_1_reg_1754;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_1_d0 = tmp_10_0_2_1_reg_1871;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_1_d0 = tmp_10_0_2_reg_1858;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        res_1_d0 = tmp_10_1_0_2_reg_1809;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        res_1_d0 = tmp_10_0_1_2_reg_1801;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        res_1_d0 = tmp_10_0_1_1_reg_1788;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        res_1_d0 = tmp_10_0_1_reg_1781;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        res_1_d0 = tmp_10_1_0_1_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_1_d0 = tmp_10_0_0_2_reg_1718;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        res_1_d0 = tmp_10_0_0_1_reg_1653;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        res_1_d0 = tmp_7_1_fu_1018_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        res_1_d0 = tmp_7_fu_981_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        res_1_d0 = 16'd0;
    end else begin
        res_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_1_d1 = tmp_10_1_2_2_reg_1846;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_1_d1 = grp_fu_1291_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_1_d1 = tmp_10_1_2_1_reg_1839;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_1_d1 = tmp_10_1_2_reg_1879;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        res_1_d1 = grp_fu_1281_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        res_1_d1 = tmp_10_1_1_2_reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        res_1_d1 = tmp_10_1_1_1_reg_1761;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        res_1_d1 = grp_fu_1250_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        res_1_d1 = tmp_10_2_1_1_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_1_d1 = grp_fu_1193_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        res_1_d1 = tmp_10_2_1_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        res_1_d1 = tmp_10_2_0_2_reg_1635;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        res_1_d1 = grp_fu_1122_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        res_1_d1 = tmp_7_2_fu_968_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        res_1_d1 = 16'd0;
    end else begin
        res_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state14) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state13) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state11) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state10) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        res_1_we0 = 1'b1;
    end else begin
        res_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (exitcond3_fu_948_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state14) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state13) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state11) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state10) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (i_reg_493 == 2'd1) & (exitcond3_reg_1533 == 1'd0)))) begin
        res_1_we1 = 1'b1;
    end else begin
        res_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        res_2_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        res_2_address0 = 64'd0;
    end else begin
        res_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        res_2_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_2_address1 = 64'd2;
    end else begin
        res_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_2_ce0 = 1'b1;
    end else begin
        res_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        res_2_ce1 = 1'b1;
    end else begin
        res_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_2_d0 = tmp_10_0_2_2_reg_1832;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_2_d0 = tmp_10_1_1_reg_1754;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_2_d0 = tmp_10_0_2_1_reg_1871;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_2_d0 = tmp_10_0_2_reg_1858;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        res_2_d0 = tmp_10_1_0_2_reg_1809;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        res_2_d0 = tmp_10_0_1_2_reg_1801;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        res_2_d0 = tmp_10_0_1_1_reg_1788;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        res_2_d0 = tmp_10_0_1_reg_1781;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        res_2_d0 = tmp_10_1_0_1_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_2_d0 = tmp_10_0_0_2_reg_1718;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        res_2_d0 = tmp_10_0_0_1_reg_1653;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        res_2_d0 = tmp_7_1_fu_1018_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        res_2_d0 = tmp_7_fu_981_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        res_2_d0 = 16'd0;
    end else begin
        res_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        res_2_d1 = tmp_10_1_2_2_reg_1846;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        res_2_d1 = grp_fu_1291_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        res_2_d1 = tmp_10_1_2_1_reg_1839;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        res_2_d1 = tmp_10_1_2_reg_1879;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        res_2_d1 = grp_fu_1281_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        res_2_d1 = tmp_10_1_1_2_reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        res_2_d1 = tmp_10_1_1_1_reg_1761;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        res_2_d1 = grp_fu_1250_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        res_2_d1 = tmp_10_2_1_1_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_2_d1 = grp_fu_1193_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        res_2_d1 = tmp_10_2_1_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        res_2_d1 = tmp_10_2_0_2_reg_1635;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        res_2_d1 = grp_fu_1122_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        res_2_d1 = tmp_7_2_fu_968_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        res_2_d1 = 16'd0;
    end else begin
        res_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state16) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state14) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state13) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state11) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state10) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state15) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state12) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state9) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state7) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state8) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)))) begin
        res_2_we0 = 1'b1;
    end else begin
        res_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(ap_phi_mux_i_phi_fu_497_p4 == 2'd0) & ~(ap_phi_mux_i_phi_fu_497_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state16) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state14) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state13) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state11) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state10) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state15) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state12) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state9) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state7) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state8) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (exitcond3_reg_1533 == 1'd0)) | (~(i_reg_493 == 2'd0) & ~(i_reg_493 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (exitcond3_reg_1533 == 1'd0)))) begin
        res_2_we1 = 1'b1;
    end else begin
        res_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_948_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i_phi_fu_497_p4 = i_reg_493;

assign b_0_address1 = 64'd1;

assign b_1_address1 = 64'd1;

assign b_2_address1 = 64'd1;

assign exitcond3_fu_948_p2 = ((i_reg_493 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_1140_p1 = tmp_3_0_0_1_reg_1603;

assign grp_fu_1161_p1 = tmp_3_0_0_2_reg_1609;

assign grp_fu_1167_p1 = tmp_3_0_0_1_reg_1603;

assign grp_fu_1173_p1 = tmp_3_0_1_reg_1661;

assign grp_fu_1179_p1 = tmp_3_0_1_1_reg_1667;

assign grp_fu_1186_p1 = tmp_3_0_1_2_reg_1795;

assign grp_fu_1193_p1 = tmp_3_0_1_2_reg_1795;

assign grp_fu_1202_p1 = tmp_3_0_1_reg_1661;

assign grp_fu_1208_p1 = tmp_3_0_1_1_reg_1667;

assign grp_fu_1223_p1 = tmp_3_0_0_2_reg_1609;

assign grp_fu_1229_p1 = tmp_3_0_2_2_fu_1081_p1;

assign grp_fu_1236_p1 = tmp_3_0_2_1_reg_1865;

assign grp_fu_1242_p1 = tmp_3_0_2_2_fu_1081_p1;

assign grp_fu_1250_p1 = tmp_3_0_2_1_reg_1865;

assign grp_fu_1259_p1 = tmp_3_0_2_fu_1100_p1;

assign grp_fu_1274_p1 = tmp_3_0_2_fu_1100_p1;

assign grp_fu_1281_p1 = tmp_3_0_2_fu_1100_p1;

assign grp_fu_1291_p1 = tmp_3_0_2_2_reg_1827;

assign i_1_fu_954_p2 = (i_reg_493 + 2'd1);

assign tmp_3_0_0_1_fu_989_p1 = b_0_load_1_reg_1548;

assign tmp_3_0_0_2_fu_992_p1 = $signed(b_0_q0);

assign tmp_3_0_1_1_fu_1011_p1 = b_1_load_1_reg_1558;

assign tmp_3_0_1_2_fu_1070_p1 = b_1_load_2_reg_1620;

assign tmp_3_0_1_fu_1008_p1 = b_1_load_reg_1553;

assign tmp_3_0_2_1_fu_1107_p1 = b_2_load_1_reg_1573;

assign tmp_3_0_2_2_fu_1081_p1 = $signed(b_2_load_2_reg_1630);

assign tmp_3_0_2_fu_1100_p1 = $signed(b_2_load_reg_1568);

assign tmp_3_fu_960_p1 = $signed(b_0_q0);

assign tmp_7_1_fu_1018_p0 = ap_phi_mux_a_load_1_0_0_phi_phi_fu_647_p6;

assign tmp_7_1_fu_1018_p1 = tmp_3_reg_1542;

assign tmp_7_1_fu_1018_p2 = ($signed(tmp_7_1_fu_1018_p0) * $signed(tmp_7_1_fu_1018_p1));

assign tmp_7_2_fu_968_p0 = ap_phi_mux_a_load_2_0_0_phi_phi_fu_508_p6;

assign tmp_7_2_fu_968_p1 = b_0_q0;

assign tmp_7_2_fu_968_p2 = ($signed(tmp_7_2_fu_968_p0) * $signed(tmp_7_2_fu_968_p1));

assign tmp_7_fu_981_p0 = ap_phi_mux_a_load_0_0_0_phi_phi_fu_522_p6;

assign tmp_7_fu_981_p1 = tmp_3_reg_1542;

assign tmp_7_fu_981_p2 = ($signed(tmp_7_fu_981_p0) * $signed(tmp_7_fu_981_p1));

endmodule //conv2d
