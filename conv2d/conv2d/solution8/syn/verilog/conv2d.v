// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.491000,HLS_SYN_LAT=30,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=15,HLS_SYN_FF=679,HLS_SYN_LUT=1225}" *)

module conv2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_2_address1,
        b_2_ce1,
        b_2_q1,
        res_address0,
        res_ce0,
        res_we0,
        res_d0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state15 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] a_address0;
output   a_ce0;
input  [7:0] a_q0;
output  [4:0] a_address1;
output   a_ce1;
input  [7:0] a_q1;
output  [1:0] b_0_address0;
output   b_0_ce0;
input  [7:0] b_0_q0;
output  [1:0] b_0_address1;
output   b_0_ce1;
input  [7:0] b_0_q1;
output  [1:0] b_1_address0;
output   b_1_ce0;
input  [7:0] b_1_q0;
output  [1:0] b_1_address1;
output   b_1_ce1;
input  [7:0] b_1_q1;
output  [1:0] b_2_address0;
output   b_2_ce0;
input  [7:0] b_2_q0;
output  [1:0] b_2_address1;
output   b_2_ce1;
input  [7:0] b_2_q1;
output  [3:0] res_address0;
output   res_ce0;
output   res_we0;
output  [15:0] res_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] a_address0;
reg a_ce0;
reg[4:0] a_address1;
reg a_ce1;
reg[1:0] b_0_address0;
reg b_0_ce0;
reg b_0_ce1;
reg[1:0] b_1_address0;
reg b_1_ce0;
reg b_1_ce1;
reg[1:0] b_2_address0;
reg b_2_ce0;
reg b_2_ce1;
reg[3:0] res_address0;
reg res_ce0;
reg res_we0;
reg[15:0] res_d0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] i_reg_318;
reg  signed [7:0] reg_329;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond3_reg_928;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg  signed [7:0] reg_333;
wire   [0:0] exitcond3_fu_338_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond3_reg_928_pp0_iter1_reg;
wire   [1:0] i_1_fu_344_p2;
reg   [1:0] i_1_reg_932;
wire   [4:0] tmp_3_fu_366_p2;
reg   [4:0] tmp_3_reg_939;
wire  signed [4:0] tmp_9_fu_388_p2;
reg  signed [4:0] tmp_9_reg_956;
reg  signed [4:0] tmp_9_reg_956_pp0_iter1_reg;
wire   [2:0] tmp_7_0_2_fu_398_p2;
reg   [2:0] tmp_7_0_2_reg_963;
wire  signed [15:0] tmp_10_fu_418_p1;
reg  signed [15:0] tmp_10_reg_974;
wire  signed [15:0] tmp_12_0_0_1_fu_432_p1;
reg  signed [15:0] tmp_12_0_0_1_reg_979;
wire   [4:0] tmp_14_fu_450_p2;
reg   [4:0] tmp_14_reg_985;
reg  signed [7:0] b_1_load_1_reg_998;
reg   [7:0] b_2_load_1_reg_1003;
wire  signed [15:0] grp_fu_786_p3;
reg  signed [15:0] tmp2_reg_1008;
wire   [15:0] tmp_13_1_fu_461_p2;
reg   [15:0] tmp_13_1_reg_1013;
wire  signed [15:0] tmp_12_0_0_2_fu_471_p1;
reg  signed [15:0] tmp_12_0_0_2_reg_1018;
wire  signed [15:0] tmp_12_0_1_fu_499_p1;
reg  signed [15:0] tmp_12_0_1_reg_1034;
reg  signed [7:0] b_1_load_2_reg_1040;
wire  signed [15:0] grp_fu_794_p3;
reg  signed [15:0] tmp3_reg_1045;
wire  signed [15:0] grp_fu_802_p3;
reg  signed [15:0] tmp9_reg_1050;
wire   [15:0] tmp_13_2_fu_509_p2;
reg   [15:0] tmp_13_2_reg_1055;
wire  signed [15:0] tmp_12_0_1_1_fu_518_p1;
reg  signed [15:0] tmp_12_0_1_1_reg_1060;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire  signed [15:0] tmp_10_0_1_2_fu_521_p1;
reg  signed [15:0] tmp_10_0_1_2_reg_1066;
wire  signed [15:0] tmp_12_0_1_2_fu_525_p1;
reg  signed [15:0] tmp_12_0_1_2_reg_1072;
wire   [5:0] tmp_20_fu_548_p2;
reg   [5:0] tmp_20_reg_1078;
(* use_dsp48 = "no" *) wire   [15:0] tmp1_fu_570_p2;
reg   [15:0] tmp1_reg_1095;
wire  signed [15:0] grp_fu_808_p3;
reg  signed [15:0] tmp5_reg_1100;
wire   [15:0] tmp_13_1_1_fu_574_p2;
reg   [15:0] tmp_13_1_1_reg_1105;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg  signed [7:0] a_load_6_reg_1120;
reg  signed [7:0] a_load_7_reg_1125;
wire   [15:0] tmp_13_2_1_fu_599_p2;
reg   [15:0] tmp_13_2_1_reg_1130;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire  signed [15:0] tmp_10_0_2_1_fu_623_p1;
reg  signed [15:0] tmp_10_0_2_1_reg_1145;
wire  signed [15:0] tmp_12_0_2_1_fu_626_p1;
reg  signed [15:0] tmp_12_0_2_1_reg_1150;
wire  signed [15:0] tmp_10_0_2_2_fu_629_p1;
reg  signed [15:0] tmp_10_0_2_2_reg_1156;
wire  signed [15:0] tmp_12_0_2_2_fu_633_p1;
reg  signed [15:0] tmp_12_0_2_2_reg_1162;
wire  signed [15:0] grp_fu_816_p3;
reg  signed [15:0] tmp7_reg_1168;
wire  signed [15:0] tmp_10_1_0_2_fu_643_p1;
reg  signed [15:0] tmp_10_1_0_2_reg_1173;
wire  signed [15:0] grp_fu_824_p3;
reg  signed [15:0] tmp_reg_1178;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire  signed [15:0] tmp_10_1_1_2_fu_667_p1;
reg  signed [15:0] tmp_10_1_1_2_reg_1193;
wire   [15:0] tmp_13_1_1_2_fu_671_p2;
reg   [15:0] tmp_13_1_1_2_reg_1198;
wire  signed [15:0] tmp_10_1_2_2_fu_676_p1;
reg  signed [15:0] tmp_10_1_2_2_reg_1203;
(* use_dsp48 = "no" *) wire   [15:0] tmp8_fu_685_p2;
reg   [15:0] tmp8_reg_1208;
wire  signed [15:0] grp_fu_830_p3;
reg  signed [15:0] tmp12_reg_1213;
wire  signed [15:0] grp_fu_836_p3;
reg  signed [15:0] tmp14_reg_1218;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire  signed [15:0] grp_fu_841_p3;
reg  signed [15:0] tmp10_reg_1228;
wire   [15:0] tmp_13_2_1_2_fu_707_p2;
reg   [15:0] tmp_13_2_1_2_reg_1233;
wire  signed [15:0] grp_fu_846_p3;
reg  signed [15:0] tmp16_reg_1238;
(* use_dsp48 = "no" *) wire   [15:0] tmp15_fu_721_p2;
reg   [15:0] tmp15_reg_1243;
wire  signed [15:0] grp_fu_852_p3;
reg  signed [15:0] tmp17_reg_1248;
reg    ap_enable_reg_pp0_iter1;
wire  signed [15:0] grp_fu_857_p3;
reg  signed [15:0] tmp19_reg_1253;
wire  signed [15:0] tmp_12_0_2_fu_732_p1;
reg  signed [15:0] tmp_12_0_2_reg_1258;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage4_subdone;
reg   [1:0] ap_phi_mux_i_phi_fu_322_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_3_cast_fu_372_p1;
wire   [63:0] tmp_4_cast_fu_383_p1;
wire   [63:0] tmp_5_cast_fu_409_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_16_cast_fu_456_p1;
wire   [63:0] tmp_17_cast_fu_480_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_18_cast_fu_490_p1;
wire   [63:0] tmp_22_cast_fu_554_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_23_cast_fu_565_p1;
wire   [63:0] tmp_6_cast_fu_584_p1;
wire    ap_block_pp0_stage4;
wire  signed [63:0] tmp_24_cast_fu_594_p1;
wire   [63:0] tmp_19_cast_fu_608_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] tmp_25_cast_fu_618_p1;
wire   [63:0] tmp_7_cast_fu_652_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_20_cast_fu_662_p1;
wire  signed [63:0] tmp_26_cast_fu_694_p1;
wire    ap_block_pp0_stage7;
wire  signed [63:0] tmp_9_cast_fu_725_p1;
wire  signed [63:0] tmp_11_cast_fu_751_p1;
wire  signed [63:0] tmp_14_cast_fu_771_p1;
wire   [15:0] tmp_14_0_2_2_fu_740_p2;
wire   [15:0] tmp_14_1_2_2_fu_760_p2;
wire   [15:0] tmp_14_2_2_2_fu_780_p2;
wire   [3:0] tmp_1_fu_354_p3;
wire   [4:0] tmp_cast_fu_350_p1;
wire   [4:0] p_shl3_cast_fu_362_p1;
wire   [4:0] tmp_4_fu_377_p2;
wire   [2:0] tmp_1_cast_fu_394_p1;
wire   [4:0] tmp_5_fu_404_p2;
wire  signed [7:0] tmp_12_fu_422_p0;
wire  signed [7:0] tmp_12_fu_422_p1;
wire   [3:0] tmp_13_fu_439_p3;
wire   [4:0] tmp_8_0_1_cast_fu_436_p1;
wire   [4:0] p_shl1_cast_fu_446_p1;
wire  signed [7:0] tmp_13_1_fu_461_p0;
wire  signed [7:0] tmp_13_1_fu_461_p1;
wire  signed [15:0] tmp_10_0_0_1_fu_428_p1;
wire   [4:0] tmp_15_fu_475_p2;
wire   [4:0] tmp_16_fu_485_p2;
wire  signed [7:0] tmp_13_0_1_fu_503_p0;
wire  signed [7:0] tmp_13_0_1_fu_503_p1;
wire  signed [7:0] tmp_13_2_fu_509_p0;
wire  signed [7:0] tmp_13_2_fu_509_p1;
wire  signed [15:0] tmp_10_0_0_2_fu_467_p1;
wire  signed [7:0] tmp_13_0_1_2_fu_528_p0;
wire  signed [7:0] tmp_13_0_1_2_fu_528_p1;
wire   [4:0] tmp_19_fu_537_p3;
wire   [5:0] tmp_8_0_2_cast_fu_534_p1;
wire   [5:0] p_shl_cast_fu_544_p1;
wire   [5:0] tmp_21_fu_559_p2;
wire  signed [7:0] tmp_13_1_1_fu_574_p0;
wire  signed [7:0] tmp_13_1_1_fu_574_p1;
wire  signed [15:0] tmp_10_0_1_1_fu_514_p1;
wire   [4:0] tmp_6_fu_579_p2;
wire   [5:0] tmp_22_fu_589_p2;
wire  signed [7:0] tmp_13_2_1_fu_599_p0;
wire  signed [7:0] tmp_13_2_1_fu_599_p1;
wire   [4:0] tmp_17_fu_603_p2;
wire   [5:0] tmp_23_fu_613_p2;
wire  signed [7:0] tmp_13_0_2_2_fu_637_p0;
wire  signed [7:0] tmp_13_0_2_2_fu_637_p1;
wire   [4:0] tmp_7_fu_647_p2;
wire   [4:0] tmp_18_fu_657_p2;
wire  signed [7:0] tmp_13_1_1_2_fu_671_p0;
wire  signed [7:0] tmp_13_1_1_2_fu_671_p1;
wire  signed [7:0] tmp_13_1_2_2_fu_680_p0;
wire  signed [7:0] tmp_13_1_2_2_fu_680_p1;
wire   [5:0] tmp_24_fu_689_p2;
wire  signed [7:0] tmp_13_2_1_2_fu_707_p0;
wire  signed [7:0] tmp_13_2_1_2_fu_707_p1;
wire  signed [7:0] tmp_13_2_2_2_fu_716_p0;
wire  signed [7:0] tmp_13_2_2_2_fu_716_p1;
wire  signed [15:0] grp_fu_863_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp4_fu_736_p2;
wire   [4:0] tmp_8_fu_746_p2;
wire  signed [15:0] grp_fu_871_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp11_fu_756_p2;
wire   [4:0] tmp_11_fu_766_p2;
wire  signed [15:0] grp_fu_877_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp18_fu_776_p2;
wire  signed [7:0] grp_fu_786_p1;
wire   [15:0] grp_fu_786_p2;
wire  signed [7:0] grp_fu_794_p1;
wire   [15:0] grp_fu_794_p2;
wire  signed [7:0] grp_fu_802_p0;
wire  signed [7:0] grp_fu_802_p1;
wire  signed [7:0] grp_fu_808_p1;
wire   [15:0] grp_fu_808_p2;
wire   [15:0] grp_fu_816_p2;
wire  signed [7:0] grp_fu_824_p0;
wire  signed [7:0] grp_fu_830_p0;
wire  signed [7:0] grp_fu_830_p1;
wire   [15:0] grp_fu_830_p2;
wire  signed [7:0] grp_fu_836_p0;
wire  signed [7:0] grp_fu_836_p1;
wire  signed [7:0] grp_fu_841_p0;
wire  signed [7:0] grp_fu_841_p1;
wire  signed [7:0] grp_fu_846_p0;
wire  signed [7:0] grp_fu_852_p0;
wire  signed [7:0] grp_fu_852_p1;
wire  signed [7:0] grp_fu_857_p0;
wire  signed [7:0] grp_fu_857_p1;
wire   [15:0] grp_fu_857_p2;
wire  signed [7:0] grp_fu_871_p0;
wire  signed [7:0] grp_fu_871_p1;
wire  signed [7:0] grp_fu_877_p0;
wire  signed [7:0] grp_fu_877_p1;
wire    ap_CS_fsm_state15;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U1(
    .din0(b_1_q0),
    .din1(grp_fu_786_p1),
    .din2(grp_fu_786_p2),
    .dout(grp_fu_786_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U2(
    .din0(reg_329),
    .din1(grp_fu_794_p1),
    .din2(grp_fu_794_p2),
    .dout(grp_fu_794_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U3(
    .din0(grp_fu_802_p0),
    .din1(grp_fu_802_p1),
    .din2(tmp_13_1_reg_1013),
    .dout(grp_fu_802_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U4(
    .din0(b_1_load_1_reg_998),
    .din1(grp_fu_808_p1),
    .din2(grp_fu_808_p2),
    .dout(grp_fu_808_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U5(
    .din0(b_1_load_2_reg_1040),
    .din1(a_load_7_reg_1125),
    .din2(grp_fu_816_p2),
    .dout(grp_fu_816_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U6(
    .din0(grp_fu_824_p0),
    .din1(a_q1),
    .din2(tmp_13_1_1_reg_1105),
    .dout(grp_fu_824_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U7(
    .din0(grp_fu_830_p0),
    .din1(grp_fu_830_p1),
    .din2(grp_fu_830_p2),
    .dout(grp_fu_830_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U8(
    .din0(grp_fu_836_p0),
    .din1(grp_fu_836_p1),
    .din2(tmp_13_2_reg_1055),
    .dout(grp_fu_836_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U9(
    .din0(grp_fu_841_p0),
    .din1(grp_fu_841_p1),
    .din2(tmp_13_1_1_2_reg_1198),
    .dout(grp_fu_841_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U10(
    .din0(grp_fu_846_p0),
    .din1(a_q0),
    .din2(tmp_13_2_1_reg_1130),
    .dout(grp_fu_846_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U11(
    .din0(grp_fu_852_p0),
    .din1(grp_fu_852_p1),
    .din2(tmp_13_2_1_2_reg_1233),
    .dout(grp_fu_852_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U12(
    .din0(grp_fu_857_p0),
    .din1(grp_fu_857_p1),
    .din2(grp_fu_857_p2),
    .dout(grp_fu_857_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U13(
    .din0(reg_333),
    .din1(a_load_6_reg_1120),
    .din2(tmp7_reg_1168),
    .dout(grp_fu_863_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U14(
    .din0(grp_fu_871_p0),
    .din1(grp_fu_871_p1),
    .din2(tmp12_reg_1213),
    .dout(grp_fu_871_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U15(
    .din0(grp_fu_877_p0),
    .din1(grp_fu_877_p1),
    .din2(tmp19_reg_1253),
    .dout(grp_fu_877_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_318 <= i_1_reg_932;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_318 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            reg_333 <= b_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_333 <= b_0_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_load_6_reg_1120 <= a_q0;
        a_load_7_reg_1125 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_1_load_1_reg_998 <= b_1_q1;
        b_2_load_1_reg_1003 <= b_2_q1;
        tmp2_reg_1008 <= grp_fu_786_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        b_1_load_2_reg_1040 <= b_1_q0;
        tmp3_reg_1045 <= grp_fu_794_p3;
        tmp9_reg_1050 <= grp_fu_802_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond3_reg_928 <= exitcond3_fu_338_p2;
        exitcond3_reg_928_pp0_iter1_reg <= exitcond3_reg_928;
        tmp_9_reg_956_pp0_iter1_reg <= tmp_9_reg_956;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_reg_932 <= i_1_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond3_reg_928 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_329 <= b_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp10_reg_1228 <= grp_fu_841_p3;
        tmp16_reg_1238 <= grp_fu_846_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp12_reg_1213 <= grp_fu_830_p3;
        tmp14_reg_1218 <= grp_fu_836_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp15_reg_1243 <= tmp15_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp17_reg_1248 <= grp_fu_852_p3;
        tmp19_reg_1253 <= grp_fu_857_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp1_reg_1095 <= tmp1_fu_570_p2;
        tmp_10_0_1_2_reg_1066 <= tmp_10_0_1_2_fu_521_p1;
        tmp_12_0_1_1_reg_1060 <= tmp_12_0_1_1_fu_518_p1;
        tmp_12_0_1_2_reg_1072 <= tmp_12_0_1_2_fu_525_p1;
        tmp_13_1_1_reg_1105 <= tmp_13_1_1_fu_574_p2;
        tmp_20_reg_1078 <= tmp_20_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp5_reg_1100 <= grp_fu_808_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp7_reg_1168 <= grp_fu_816_p3;
        tmp_reg_1178 <= grp_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp8_reg_1208 <= tmp8_fu_685_p2;
        tmp_10_1_1_2_reg_1193 <= tmp_10_1_1_2_fu_667_p1;
        tmp_10_1_2_2_reg_1203 <= tmp_10_1_2_2_fu_676_p1;
        tmp_13_1_1_2_reg_1198 <= tmp_13_1_1_2_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_10_0_2_1_reg_1145 <= tmp_10_0_2_1_fu_623_p1;
        tmp_10_0_2_2_reg_1156 <= tmp_10_0_2_2_fu_629_p1;
        tmp_10_1_0_2_reg_1173 <= tmp_10_1_0_2_fu_643_p1;
        tmp_12_0_2_1_reg_1150 <= tmp_12_0_2_1_fu_626_p1;
        tmp_12_0_2_2_reg_1162 <= tmp_12_0_2_2_fu_633_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_10_reg_974 <= tmp_10_fu_418_p1;
        tmp_12_0_0_1_reg_979 <= tmp_12_0_0_1_fu_432_p1;
        tmp_13_1_reg_1013 <= tmp_13_1_fu_461_p2;
        tmp_14_reg_985 <= tmp_14_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_12_0_0_2_reg_1018 <= tmp_12_0_0_2_fu_471_p1;
        tmp_12_0_1_reg_1034 <= tmp_12_0_1_fu_499_p1;
        tmp_13_2_reg_1055 <= tmp_13_2_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_12_0_2_reg_1258 <= tmp_12_0_2_fu_732_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_13_2_1_2_reg_1233 <= tmp_13_2_1_2_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_13_2_1_reg_1130 <= tmp_13_2_1_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_939 <= tmp_3_fu_366_p2;
        tmp_7_0_2_reg_963 <= tmp_7_0_2_fu_398_p2;
        tmp_9_reg_956 <= tmp_9_fu_388_p2;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            a_address0 = tmp_26_cast_fu_694_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            a_address0 = tmp_7_cast_fu_652_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            a_address0 = tmp_19_cast_fu_608_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            a_address0 = tmp_24_cast_fu_594_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            a_address0 = tmp_22_cast_fu_554_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            a_address0 = tmp_17_cast_fu_480_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_address0 = tmp_5_cast_fu_409_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_address0 = tmp_3_cast_fu_372_p1;
        end else begin
            a_address0 = 'bx;
        end
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            a_address1 = tmp_20_cast_fu_662_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            a_address1 = tmp_25_cast_fu_618_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            a_address1 = tmp_6_cast_fu_584_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            a_address1 = tmp_23_cast_fu_565_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            a_address1 = tmp_18_cast_fu_490_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_address1 = tmp_16_cast_fu_456_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_address1 = tmp_4_cast_fu_383_p1;
        end else begin
            a_address1 = 'bx;
        end
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_338_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_322_p4 = i_1_reg_932;
    end else begin
        ap_phi_mux_i_phi_fu_322_p4 = i_reg_318;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_0_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_0_address0 = 64'd0;
        end else begin
            b_0_address0 = 'bx;
        end
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_1_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_1_address0 = 64'd0;
        end else begin
            b_1_address0 = 'bx;
        end
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_2_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_2_address0 = 64'd0;
        end else begin
            b_2_address0 = 'bx;
        end
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_2_ce1 = 1'b1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            res_address0 = tmp_14_cast_fu_771_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            res_address0 = tmp_11_cast_fu_751_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            res_address0 = tmp_9_cast_fu_725_p1;
        end else begin
            res_address0 = 'bx;
        end
    end else begin
        res_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            res_d0 = tmp_14_2_2_2_fu_780_p2;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            res_d0 = tmp_14_1_2_2_fu_760_p2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            res_d0 = tmp_14_0_2_2_fu_740_p2;
        end else begin
            res_d0 = 'bx;
        end
    end else begin
        res_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_928_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond3_reg_928_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((exitcond3_reg_928_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond3_fu_338_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond3_fu_338_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_0_address1 = 64'd1;

assign b_1_address1 = 64'd1;

assign b_2_address1 = 64'd1;

assign exitcond3_fu_338_p2 = ((ap_phi_mux_i_phi_fu_322_p4 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_786_p1 = tmp_10_0_0_1_fu_428_p1;

assign grp_fu_786_p2 = ($signed(tmp_12_fu_422_p0) * $signed(tmp_12_fu_422_p1));

assign grp_fu_794_p1 = tmp_10_0_0_2_fu_467_p1;

assign grp_fu_794_p2 = ($signed(tmp_13_0_1_fu_503_p0) * $signed(tmp_13_0_1_fu_503_p1));

assign grp_fu_802_p0 = tmp_12_0_0_1_reg_979;

assign grp_fu_802_p1 = tmp_10_0_0_2_fu_467_p1;

assign grp_fu_808_p1 = tmp_10_0_1_1_fu_514_p1;

assign grp_fu_808_p2 = ($signed(tmp_13_0_1_2_fu_528_p0) * $signed(tmp_13_0_1_2_fu_528_p1));

assign grp_fu_816_p2 = ($signed(tmp_13_0_2_2_fu_637_p0) * $signed(tmp_13_0_2_2_fu_637_p1));

assign grp_fu_824_p0 = tmp_12_0_0_2_reg_1018;

assign grp_fu_830_p0 = tmp_12_0_2_1_reg_1150;

assign grp_fu_830_p1 = tmp_10_0_2_2_reg_1156;

assign grp_fu_830_p2 = ($signed(tmp_13_1_2_2_fu_680_p0) * $signed(tmp_13_1_2_2_fu_680_p1));

assign grp_fu_836_p0 = tmp_12_0_0_1_reg_979;

assign grp_fu_836_p1 = tmp_10_1_0_2_reg_1173;

assign grp_fu_841_p0 = tmp_12_0_1_1_reg_1060;

assign grp_fu_841_p1 = tmp_10_0_1_2_reg_1066;

assign grp_fu_846_p0 = tmp_12_0_0_2_reg_1018;

assign grp_fu_852_p0 = tmp_12_0_1_1_reg_1060;

assign grp_fu_852_p1 = tmp_10_1_1_2_reg_1193;

assign grp_fu_857_p0 = tmp_12_0_2_1_reg_1150;

assign grp_fu_857_p1 = tmp_10_1_2_2_reg_1203;

assign grp_fu_857_p2 = ($signed(tmp_13_2_2_2_fu_716_p0) * $signed(tmp_13_2_2_2_fu_716_p1));

assign grp_fu_871_p0 = tmp_12_0_2_reg_1258;

assign grp_fu_871_p1 = tmp_10_0_2_1_reg_1145;

assign grp_fu_877_p0 = tmp_12_0_2_reg_1258;

assign grp_fu_877_p1 = tmp_10_0_2_2_reg_1156;

assign i_1_fu_344_p2 = (ap_phi_mux_i_phi_fu_322_p4 + 2'd1);

assign p_shl1_cast_fu_446_p1 = tmp_13_fu_439_p3;

assign p_shl3_cast_fu_362_p1 = tmp_1_fu_354_p3;

assign p_shl_cast_fu_544_p1 = tmp_19_fu_537_p3;

assign tmp11_fu_756_p2 = ($signed(tmp10_reg_1228) + $signed(grp_fu_871_p3));

assign tmp15_fu_721_p2 = ($signed(tmp14_reg_1218) + $signed(tmp16_reg_1238));

assign tmp18_fu_776_p2 = ($signed(tmp17_reg_1248) + $signed(grp_fu_877_p3));

assign tmp1_fu_570_p2 = ($signed(tmp2_reg_1008) + $signed(tmp3_reg_1045));

assign tmp4_fu_736_p2 = ($signed(tmp5_reg_1100) + $signed(grp_fu_863_p3));

assign tmp8_fu_685_p2 = ($signed(tmp9_reg_1050) + $signed(tmp_reg_1178));

assign tmp_10_0_0_1_fu_428_p1 = $signed(a_q1);

assign tmp_10_0_0_2_fu_467_p1 = $signed(a_q0);

assign tmp_10_0_1_1_fu_514_p1 = $signed(a_q0);

assign tmp_10_0_1_2_fu_521_p1 = $signed(a_q1);

assign tmp_10_0_2_1_fu_623_p1 = a_load_7_reg_1125;

assign tmp_10_0_2_2_fu_629_p1 = $signed(a_q0);

assign tmp_10_1_0_2_fu_643_p1 = $signed(a_q1);

assign tmp_10_1_1_2_fu_667_p1 = $signed(a_q0);

assign tmp_10_1_2_2_fu_676_p1 = $signed(a_q1);

assign tmp_10_fu_418_p1 = $signed(b_0_q0);

assign tmp_11_cast_fu_751_p1 = $signed(tmp_8_fu_746_p2);

assign tmp_11_fu_766_p2 = ($signed(tmp_9_reg_956_pp0_iter1_reg) + $signed(5'd2));

assign tmp_12_0_0_1_fu_432_p1 = $signed(b_1_q0);

assign tmp_12_0_0_2_fu_471_p1 = reg_329;

assign tmp_12_0_1_1_fu_518_p1 = b_1_load_1_reg_998;

assign tmp_12_0_1_2_fu_525_p1 = $signed(b_2_load_1_reg_1003);

assign tmp_12_0_1_fu_499_p1 = reg_333;

assign tmp_12_0_2_1_fu_626_p1 = b_1_load_2_reg_1040;

assign tmp_12_0_2_2_fu_633_p1 = reg_329;

assign tmp_12_0_2_fu_732_p1 = reg_333;

assign tmp_12_fu_422_p0 = tmp_10_fu_418_p1;

assign tmp_12_fu_422_p1 = a_q0;

assign tmp_13_0_1_2_fu_528_p0 = b_2_load_1_reg_1003;

assign tmp_13_0_1_2_fu_528_p1 = a_q1;

assign tmp_13_0_1_fu_503_p0 = reg_333;

assign tmp_13_0_1_fu_503_p1 = a_q1;

assign tmp_13_0_2_2_fu_637_p0 = reg_329;

assign tmp_13_0_2_2_fu_637_p1 = a_q0;

assign tmp_13_1_1_2_fu_671_p0 = tmp_12_0_1_2_reg_1072;

assign tmp_13_1_1_2_fu_671_p1 = a_q0;

assign tmp_13_1_1_2_fu_671_p2 = ($signed(tmp_13_1_1_2_fu_671_p0) * $signed(tmp_13_1_1_2_fu_671_p1));

assign tmp_13_1_1_fu_574_p0 = tmp_12_0_1_reg_1034;

assign tmp_13_1_1_fu_574_p1 = tmp_10_0_1_1_fu_514_p1;

assign tmp_13_1_1_fu_574_p2 = ($signed(tmp_13_1_1_fu_574_p0) * $signed(tmp_13_1_1_fu_574_p1));

assign tmp_13_1_2_2_fu_680_p0 = tmp_12_0_2_2_reg_1162;

assign tmp_13_1_2_2_fu_680_p1 = a_q1;

assign tmp_13_1_fu_461_p0 = tmp_10_fu_418_p1;

assign tmp_13_1_fu_461_p1 = tmp_10_0_0_1_fu_428_p1;

assign tmp_13_1_fu_461_p2 = ($signed(tmp_13_1_fu_461_p0) * $signed(tmp_13_1_fu_461_p1));

assign tmp_13_2_1_2_fu_707_p0 = tmp_12_0_1_2_reg_1072;

assign tmp_13_2_1_2_fu_707_p1 = a_q1;

assign tmp_13_2_1_2_fu_707_p2 = ($signed(tmp_13_2_1_2_fu_707_p0) * $signed(tmp_13_2_1_2_fu_707_p1));

assign tmp_13_2_1_fu_599_p0 = tmp_12_0_1_reg_1034;

assign tmp_13_2_1_fu_599_p1 = tmp_10_0_1_2_reg_1066;

assign tmp_13_2_1_fu_599_p2 = ($signed(tmp_13_2_1_fu_599_p0) * $signed(tmp_13_2_1_fu_599_p1));

assign tmp_13_2_2_2_fu_716_p0 = tmp_12_0_2_2_reg_1162;

assign tmp_13_2_2_2_fu_716_p1 = a_q0;

assign tmp_13_2_fu_509_p0 = tmp_10_reg_974;

assign tmp_13_2_fu_509_p1 = tmp_10_0_0_2_fu_467_p1;

assign tmp_13_2_fu_509_p2 = ($signed(tmp_13_2_fu_509_p0) * $signed(tmp_13_2_fu_509_p1));

assign tmp_13_fu_439_p3 = {{i_1_reg_932}, {2'd0}};

assign tmp_14_0_2_2_fu_740_p2 = (tmp1_reg_1095 + tmp4_fu_736_p2);

assign tmp_14_1_2_2_fu_760_p2 = (tmp8_reg_1208 + tmp11_fu_756_p2);

assign tmp_14_2_2_2_fu_780_p2 = (tmp15_reg_1243 + tmp18_fu_776_p2);

assign tmp_14_cast_fu_771_p1 = $signed(tmp_11_fu_766_p2);

assign tmp_14_fu_450_p2 = (tmp_8_0_1_cast_fu_436_p1 + p_shl1_cast_fu_446_p1);

assign tmp_15_fu_475_p2 = (tmp_14_reg_985 + 5'd1);

assign tmp_16_cast_fu_456_p1 = tmp_14_fu_450_p2;

assign tmp_16_fu_485_p2 = (tmp_14_reg_985 + 5'd2);

assign tmp_17_cast_fu_480_p1 = tmp_15_fu_475_p2;

assign tmp_17_fu_603_p2 = (tmp_14_reg_985 + 5'd3);

assign tmp_18_cast_fu_490_p1 = tmp_16_fu_485_p2;

assign tmp_18_fu_657_p2 = (tmp_14_reg_985 + 5'd4);

assign tmp_19_cast_fu_608_p1 = tmp_17_fu_603_p2;

assign tmp_19_fu_537_p3 = {{tmp_7_0_2_reg_963}, {2'd0}};

assign tmp_1_cast_fu_394_p1 = ap_phi_mux_i_phi_fu_322_p4;

assign tmp_1_fu_354_p3 = {{ap_phi_mux_i_phi_fu_322_p4}, {2'd0}};

assign tmp_20_cast_fu_662_p1 = tmp_18_fu_657_p2;

assign tmp_20_fu_548_p2 = (tmp_8_0_2_cast_fu_534_p1 + p_shl_cast_fu_544_p1);

assign tmp_21_fu_559_p2 = (tmp_20_fu_548_p2 + 6'd1);

assign tmp_22_cast_fu_554_p1 = tmp_20_fu_548_p2;

assign tmp_22_fu_589_p2 = (tmp_20_reg_1078 + 6'd2);

assign tmp_23_cast_fu_565_p1 = tmp_21_fu_559_p2;

assign tmp_23_fu_613_p2 = (tmp_20_reg_1078 + 6'd3);

assign tmp_24_cast_fu_594_p1 = $signed(tmp_22_fu_589_p2);

assign tmp_24_fu_689_p2 = (tmp_20_reg_1078 + 6'd4);

assign tmp_25_cast_fu_618_p1 = $signed(tmp_23_fu_613_p2);

assign tmp_26_cast_fu_694_p1 = $signed(tmp_24_fu_689_p2);

assign tmp_3_cast_fu_372_p1 = tmp_3_fu_366_p2;

assign tmp_3_fu_366_p2 = (tmp_cast_fu_350_p1 + p_shl3_cast_fu_362_p1);

assign tmp_4_cast_fu_383_p1 = tmp_4_fu_377_p2;

assign tmp_4_fu_377_p2 = (tmp_3_fu_366_p2 + 5'd1);

assign tmp_5_cast_fu_409_p1 = tmp_5_fu_404_p2;

assign tmp_5_fu_404_p2 = (tmp_3_reg_939 + 5'd2);

assign tmp_6_cast_fu_584_p1 = tmp_6_fu_579_p2;

assign tmp_6_fu_579_p2 = (tmp_3_reg_939 + 5'd3);

assign tmp_7_0_2_fu_398_p2 = (tmp_1_cast_fu_394_p1 + 3'd2);

assign tmp_7_cast_fu_652_p1 = tmp_7_fu_647_p2;

assign tmp_7_fu_647_p2 = (tmp_3_reg_939 + 5'd4);

assign tmp_8_0_1_cast_fu_436_p1 = i_1_reg_932;

assign tmp_8_0_2_cast_fu_534_p1 = tmp_7_0_2_reg_963;

assign tmp_8_fu_746_p2 = ($signed(tmp_9_reg_956_pp0_iter1_reg) + $signed(5'd1));

assign tmp_9_cast_fu_725_p1 = tmp_9_reg_956_pp0_iter1_reg;

assign tmp_9_fu_388_p2 = (p_shl3_cast_fu_362_p1 - tmp_cast_fu_350_p1);

assign tmp_cast_fu_350_p1 = ap_phi_mux_i_phi_fu_322_p4;

endmodule //conv2d
