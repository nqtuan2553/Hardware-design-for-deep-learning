-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_0_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_0_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_0_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_0_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_1_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_2_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_3_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_4_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_0_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_1_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_2_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    res_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_ce0 : OUT STD_LOGIC;
    res_we0 : OUT STD_LOGIC;
    res_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of conv2d is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.127000,HLS_SYN_LAT=12,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=248,HLS_SYN_LUT=1069}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_332 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_343 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_354 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_flatten_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_970_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_578_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_596_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_mid2_reg_979 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_mid2_reg_979_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_v_fu_604_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_v_reg_984 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_v_reg_984_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal b_0_0_read_reg_996 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_0_1_read_reg_1001 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_0_2_read_reg_1011 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_0_read_reg_1016 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_1_read_reg_1021 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_2_read_reg_1026 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_0_read_reg_1036 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_1_read_reg_1041 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_2_read_reg_1051 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_fu_612_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_1_1_fu_677_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_1_reg_1061 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_2_fu_690_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_2_reg_1066 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_729_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_1071 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_1076 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_741_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp6_fu_741_p2 : signal is "no";
    signal tmp6_reg_1081 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_i_phi_fu_347_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_365 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_388 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_411 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_434 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_1_1_phi_reg_457 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_1_2_phi_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_2_0_phi_reg_503 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_549 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_cast_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_584_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_625_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_625_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_1_fu_638_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_1_fu_638_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_2_fu_651_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_0_2_fu_651_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_fu_664_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_fu_664_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_1_fu_677_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_1_fu_677_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_2_fu_690_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_1_2_fu_690_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_fu_703_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_fu_703_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_1_fu_716_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_2_1_fu_716_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_0_1_fu_638_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_0_2_fu_651_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_1_fu_664_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_800_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_2_fu_703_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_749_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_756_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_cast_fu_746_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_760_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_cast_fu_766_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_769_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp5_fu_784_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_788_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_780_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_800_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_186 : BOOLEAN;
    signal ap_condition_262 : BOOLEAN;
    signal ap_condition_212 : BOOLEAN;
    signal ap_condition_173 : BOOLEAN;
    signal ap_condition_266 : BOOLEAN;
    signal ap_condition_268 : BOOLEAN;
    signal ap_condition_271 : BOOLEAN;
    signal ap_condition_274 : BOOLEAN;
    signal ap_condition_203 : BOOLEAN;
    signal ap_condition_154 : BOOLEAN;

    component conv2d_mac_muladdbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv2d_mac_muladdbkb_U1 : component conv2d_mac_muladdbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549,
        din1 => b_2_2_read_reg_1051,
        din2 => grp_fu_800_p2,
        dout => grp_fu_800_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_2_0;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_1_0;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_0_1;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_2_1;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_1_1;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_0_0;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_1_2;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= a_0_2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365 <= ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_365;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_2_1;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_1_1;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_0_1;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_1_2;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_0_2;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_2_3;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_1_3;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= a_0_3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388 <= ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_388;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_1_2;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_0_2;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_2_3;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_1_3;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_0_3;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_2_4;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_1_4;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= a_0_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411 <= ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_411;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_3_0;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_2_0;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_1_0;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_3_1;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_2_1;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_1_1;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_3_2;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= a_1_2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434 <= ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_434;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_3_1;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_2_1;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_1_1;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_3_2;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_1_2;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_3_3;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_2_3;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= a_1_3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457 <= ap_phi_reg_pp0_iter0_a_load_1_1_phi_reg_457;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_3_2;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_1_2;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_3_3;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_2_3;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_1_3;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_3_4;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_2_4;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= a_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480 <= ap_phi_reg_pp0_iter0_a_load_1_2_phi_reg_480;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_4_1;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_3_0;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_2_0;
                elsif ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_4_0;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_3_1;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_2_1;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_4_2;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_3_2;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503 <= ap_phi_reg_pp0_iter0_a_load_2_0_phi_reg_503;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_4_1;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_3_1;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_2_1;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_4_2;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_3_2;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_4_3;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_3_3;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= a_2_3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526 <= ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_526;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_4_2;
                elsif ((ap_const_boolean_1 = ap_condition_274)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_3_2;
                elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_2_2;
                elsif ((ap_const_boolean_1 = ap_condition_268)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_4_3;
                elsif ((ap_const_boolean_1 = ap_condition_266)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_3_3;
                elsif ((ap_const_boolean_1 = ap_condition_271)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_2_3;
                elsif ((ap_const_boolean_1 = ap_condition_212)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_4_4;
                elsif ((ap_const_boolean_1 = ap_condition_262)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_3_4;
                elsif ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= a_2_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_a_load_2_2_phi_reg_549 <= ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_549;
                end if;
            end if; 
        end if;
    end process;

    i_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_970 = ap_const_lv1_0))) then 
                i_reg_343 <= tmp_mid2_v_reg_984;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_343 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_332 <= indvar_flatten_next_fu_578_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_332 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0))) then 
                j_reg_354 <= j_1_fu_612_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_354 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0))) then
                b_0_0_read_reg_996 <= b_0_0;
                b_0_1_read_reg_1001 <= b_0_1;
                b_0_2_read_reg_1011 <= b_0_2;
                b_1_0_read_reg_1016 <= b_1_0;
                b_1_1_read_reg_1021 <= b_1_1;
                b_1_2_read_reg_1026 <= b_1_2;
                b_2_0_read_reg_1036 <= b_2_0;
                b_2_1_read_reg_1041 <= b_2_1;
                b_2_2_read_reg_1051 <= b_2_2;
                j_mid2_reg_979 <= j_mid2_fu_596_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_970 <= exitcond_flatten_fu_572_p2;
                exitcond_flatten_reg_970_pp0_iter1_reg <= exitcond_flatten_reg_970;
                j_mid2_reg_979_pp0_iter1_reg <= j_mid2_reg_979;
                tmp_13_1_1_reg_1061 <= tmp_13_1_1_fu_677_p2;
                tmp_13_1_2_reg_1066 <= tmp_13_1_2_fu_690_p2;
                tmp_mid2_v_reg_984_pp0_iter1_reg <= tmp_mid2_v_reg_984;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_970 = ap_const_lv1_0))) then
                tmp2_reg_1071 <= tmp2_fu_729_p2;
                tmp3_reg_1076 <= tmp3_fu_735_p2;
                tmp6_reg_1081 <= tmp6_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0))) then
                tmp_mid2_v_reg_984 <= tmp_mid2_v_fu_604_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_fu_572_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_154_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_154 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_173_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_173 <= ((tmp_mid2_v_fu_604_p3 = ap_const_lv2_0) and (j_mid2_fu_596_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_186_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_186 <= (not((j_mid2_fu_596_p3 = ap_const_lv2_1)) and not((j_mid2_fu_596_p3 = ap_const_lv2_0)) and (tmp_mid2_v_fu_604_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_203_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_203 <= (not((tmp_mid2_v_fu_604_p3 = ap_const_lv2_1)) and not((tmp_mid2_v_fu_604_p3 = ap_const_lv2_0)) and (j_mid2_fu_596_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_212_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_212 <= (not((tmp_mid2_v_fu_604_p3 = ap_const_lv2_1)) and not((j_mid2_fu_596_p3 = ap_const_lv2_1)) and not((j_mid2_fu_596_p3 = ap_const_lv2_0)) and not((tmp_mid2_v_fu_604_p3 = ap_const_lv2_0)) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_262_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_262 <= (not((j_mid2_fu_596_p3 = ap_const_lv2_1)) and not((j_mid2_fu_596_p3 = ap_const_lv2_0)) and (tmp_mid2_v_fu_604_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_266_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_266 <= ((tmp_mid2_v_fu_604_p3 = ap_const_lv2_1) and (j_mid2_fu_596_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_268_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_268 <= (not((tmp_mid2_v_fu_604_p3 = ap_const_lv2_1)) and not((tmp_mid2_v_fu_604_p3 = ap_const_lv2_0)) and (j_mid2_fu_596_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_271_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_271 <= ((tmp_mid2_v_fu_604_p3 = ap_const_lv2_0) and (j_mid2_fu_596_p3 = ap_const_lv2_1) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_274_assign_proc : process(exitcond_flatten_fu_572_p2, j_mid2_fu_596_p3, tmp_mid2_v_fu_604_p3)
    begin
                ap_condition_274 <= ((tmp_mid2_v_fu_604_p3 = ap_const_lv2_1) and (j_mid2_fu_596_p3 = ap_const_lv2_0) and (exitcond_flatten_fu_572_p2 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_572_p2)
    begin
        if ((exitcond_flatten_fu_572_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_347_p4_assign_proc : process(i_reg_343, exitcond_flatten_reg_970, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_984, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_970 = ap_const_lv1_0))) then 
            ap_phi_mux_i_phi_fu_347_p4 <= tmp_mid2_v_reg_984;
        else 
            ap_phi_mux_i_phi_fu_347_p4 <= i_reg_343;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_a_load_0_0_phi_reg_365 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_0_1_phi_reg_388 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_0_2_phi_reg_411 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_1_0_phi_reg_434 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_1_1_phi_reg_457 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_1_2_phi_reg_480 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_2_0_phi_reg_503 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_2_1_phi_reg_526 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_a_load_2_2_phi_reg_549 <= "XXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_572_p2 <= "1" when (indvar_flatten_reg_332 = ap_const_lv4_9) else "0";
    exitcond_fu_590_p2 <= "1" when (j_reg_354 = ap_const_lv2_3) else "0";
    grp_fu_800_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_2_1_fu_716_p0) * signed(tmp_13_2_1_fu_716_p1))), 16));
    i_1_fu_584_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_347_p4) + unsigned(ap_const_lv2_1));
    indvar_flatten_next_fu_578_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_332) + unsigned(ap_const_lv4_1));
    j_1_fu_612_p2 <= std_logic_vector(unsigned(j_mid2_fu_596_p3) + unsigned(ap_const_lv2_1));
    j_mid2_fu_596_p3 <= 
        ap_const_lv2_0 when (exitcond_fu_590_p2(0) = '1') else 
        j_reg_354;
    p_shl_cast_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_749_p3),5));
    res_address0 <= tmp_6_cast_fu_775_p1(4 - 1 downto 0);

    res_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_ce0 <= ap_const_logic_1;
        else 
            res_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    res_d0 <= std_logic_vector(unsigned(tmp4_fu_788_p2) + unsigned(tmp1_fu_780_p2));

    res_we0_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_970_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_970_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_we0 <= ap_const_logic_1;
        else 
            res_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_780_p2 <= std_logic_vector(unsigned(tmp3_reg_1076) + unsigned(tmp2_reg_1071));
    tmp2_fu_729_p2 <= std_logic_vector(unsigned(tmp_4_fu_625_p2) + unsigned(tmp_13_0_1_fu_638_p2));
    tmp3_fu_735_p2 <= std_logic_vector(unsigned(tmp_13_0_2_fu_651_p2) + unsigned(tmp_13_1_fu_664_p2));
    tmp4_fu_788_p2 <= std_logic_vector(unsigned(tmp6_reg_1081) + unsigned(tmp5_fu_784_p2));
    tmp5_fu_784_p2 <= std_logic_vector(unsigned(tmp_13_1_1_reg_1061) + unsigned(tmp_13_1_2_reg_1066));
    tmp6_fu_741_p2 <= std_logic_vector(signed(grp_fu_800_p3) + signed(tmp_13_2_fu_703_p2));
    tmp_13_0_1_fu_638_p0 <= b_0_1_read_reg_1001;
    tmp_13_0_1_fu_638_p1 <= ap_phi_reg_pp0_iter1_a_load_0_1_phi_reg_388;
    tmp_13_0_1_fu_638_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_0_1_fu_638_p0) * signed(tmp_13_0_1_fu_638_p1))), 16));
    tmp_13_0_2_fu_651_p0 <= b_0_2_read_reg_1011;
    tmp_13_0_2_fu_651_p1 <= ap_phi_reg_pp0_iter1_a_load_0_2_phi_reg_411;
    tmp_13_0_2_fu_651_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_0_2_fu_651_p0) * signed(tmp_13_0_2_fu_651_p1))), 16));
    tmp_13_1_1_fu_677_p0 <= ap_phi_reg_pp0_iter1_a_load_1_1_phi_reg_457;
    tmp_13_1_1_fu_677_p1 <= b_1_1_read_reg_1021;
    tmp_13_1_1_fu_677_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_1_1_fu_677_p0) * signed(tmp_13_1_1_fu_677_p1))), 16));
    tmp_13_1_2_fu_690_p0 <= b_1_2_read_reg_1026;
    tmp_13_1_2_fu_690_p1 <= ap_phi_reg_pp0_iter1_a_load_1_2_phi_reg_480;
    tmp_13_1_2_fu_690_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_1_2_fu_690_p0) * signed(tmp_13_1_2_fu_690_p1))), 16));
    tmp_13_1_fu_664_p0 <= ap_phi_reg_pp0_iter1_a_load_1_0_phi_reg_434;
    tmp_13_1_fu_664_p1 <= b_1_0_read_reg_1016;
    tmp_13_1_fu_664_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_1_fu_664_p0) * signed(tmp_13_1_fu_664_p1))), 16));
    tmp_13_2_1_fu_716_p0 <= ap_phi_reg_pp0_iter1_a_load_2_1_phi_reg_526;
    tmp_13_2_1_fu_716_p1 <= b_2_1_read_reg_1041;
    tmp_13_2_fu_703_p0 <= ap_phi_reg_pp0_iter1_a_load_2_0_phi_reg_503;
    tmp_13_2_fu_703_p1 <= b_2_0_read_reg_1036;
    tmp_13_2_fu_703_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_13_2_fu_703_p0) * signed(tmp_13_2_fu_703_p1))), 16));
    tmp_2_fu_760_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_756_p1) - unsigned(tmp_mid2_cast_fu_746_p1));
    tmp_3_cast_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_979_pp0_iter1_reg),5));
    tmp_4_fu_625_p0 <= b_0_0_read_reg_996;
    tmp_4_fu_625_p1 <= ap_phi_reg_pp0_iter1_a_load_0_0_phi_reg_365;
    tmp_4_fu_625_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_4_fu_625_p0) * signed(tmp_4_fu_625_p1))), 16));
        tmp_6_cast_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_769_p2),64));

    tmp_6_fu_769_p2 <= std_logic_vector(unsigned(tmp_2_fu_760_p2) + unsigned(tmp_3_cast_fu_766_p1));
    tmp_fu_749_p3 <= (tmp_mid2_v_reg_984_pp0_iter1_reg & ap_const_lv2_0);
    tmp_mid2_cast_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_reg_984_pp0_iter1_reg),5));
    tmp_mid2_v_fu_604_p3 <= 
        i_1_fu_584_p2 when (exitcond_fu_590_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_347_p4;
end behav;
