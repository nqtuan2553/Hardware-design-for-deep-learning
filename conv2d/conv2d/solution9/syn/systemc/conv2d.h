// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_HH_
#define _conv2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv2d_mac_muladdbkb.h"
#include "conv2d_mac_muladdcud.h"

namespace ap_rtl {

struct conv2d : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<8> > a_q0;
    sc_out< sc_lv<5> > a_address1;
    sc_out< sc_logic > a_ce1;
    sc_in< sc_lv<8> > a_q1;
    sc_out< sc_lv<2> > b_0_address0;
    sc_out< sc_logic > b_0_ce0;
    sc_in< sc_lv<8> > b_0_q0;
    sc_out< sc_lv<2> > b_0_address1;
    sc_out< sc_logic > b_0_ce1;
    sc_in< sc_lv<8> > b_0_q1;
    sc_out< sc_lv<2> > b_1_address0;
    sc_out< sc_logic > b_1_ce0;
    sc_in< sc_lv<8> > b_1_q0;
    sc_out< sc_lv<2> > b_1_address1;
    sc_out< sc_logic > b_1_ce1;
    sc_in< sc_lv<8> > b_1_q1;
    sc_out< sc_lv<2> > b_2_address0;
    sc_out< sc_logic > b_2_ce0;
    sc_in< sc_lv<8> > b_2_q0;
    sc_out< sc_lv<2> > b_2_address1;
    sc_out< sc_logic > b_2_ce1;
    sc_in< sc_lv<8> > b_2_q1;
    sc_out< sc_lv<4> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<16> > res_d0;


    // Module declarations
    conv2d(sc_module_name name);
    SC_HAS_PROCESS(conv2d);

    ~conv2d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U1;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U2;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U3;
    conv2d_mac_muladdbkb<1,1,8,8,16,16>* conv2d_mac_muladdbkb_U4;
    conv2d_mac_muladdcud<1,1,8,8,16,16>* conv2d_mac_muladdcud_U5;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > indvar_flatten_reg_248;
    sc_signal< sc_lv<2> > i_reg_259;
    sc_signal< sc_lv<2> > j_reg_270;
    sc_signal< sc_lv<8> > reg_281;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_749;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<8> > reg_285;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_295_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_749_pp0_iter1_reg;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_301_p2;
    sc_signal< sc_lv<4> > indvar_flatten_next_reg_753;
    sc_signal< sc_lv<2> > j_mid2_fu_313_p3;
    sc_signal< sc_lv<2> > j_mid2_reg_758;
    sc_signal< sc_lv<2> > tmp_mid2_fu_321_p3;
    sc_signal< sc_lv<2> > tmp_mid2_reg_764;
    sc_signal< sc_lv<2> > tmp_8_1_mid2_fu_335_p3;
    sc_signal< sc_lv<2> > tmp_8_1_mid2_reg_772;
    sc_signal< sc_lv<6> > tmp_9_fu_369_p2;
    sc_signal< sc_lv<6> > tmp_9_reg_778;
    sc_signal< sc_lv<2> > j_1_fu_379_p2;
    sc_signal< sc_lv<2> > j_1_reg_783;
    sc_signal< sc_lv<6> > tmp_5_0_1_cast_fu_385_p1;
    sc_signal< sc_lv<6> > tmp_5_0_1_cast_reg_788;
    sc_signal< sc_lv<6> > tmp_5_0_2_cast_fu_406_p1;
    sc_signal< sc_lv<6> > tmp_5_0_2_cast_reg_799;
    sc_signal< sc_lv<6> > tmp_11_fu_491_p2;
    sc_signal< sc_lv<6> > tmp_11_reg_815;
    sc_signal< sc_lv<6> > tmp_12_fu_497_p2;
    sc_signal< sc_lv<6> > tmp_12_reg_820;
    sc_signal< sc_lv<5> > tmp_13_fu_502_p2;
    sc_signal< sc_lv<5> > tmp_13_reg_825;
    sc_signal< sc_lv<6> > tmp_15_fu_518_p2;
    sc_signal< sc_lv<6> > tmp_15_reg_835;
    sc_signal< sc_lv<6> > tmp_17_fu_523_p2;
    sc_signal< sc_lv<6> > tmp_17_reg_840;
    sc_signal< sc_lv<6> > tmp_18_fu_528_p2;
    sc_signal< sc_lv<6> > tmp_18_reg_845;
    sc_signal< sc_lv<8> > b_2_load_reg_850;
    sc_signal< sc_lv<8> > b_0_load_1_reg_855;
    sc_signal< sc_lv<16> > grp_fu_665_p3;
    sc_signal< sc_lv<16> > tmp7_reg_860;
    sc_signal< sc_lv<8> > b_2_load_1_reg_875;
    sc_signal< sc_lv<16> > grp_fu_673_p3;
    sc_signal< sc_lv<16> > tmp2_reg_880;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<16> > grp_fu_681_p3;
    sc_signal< sc_lv<16> > tmp3_reg_895;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<16> > grp_fu_689_p3;
    sc_signal< sc_lv<16> > tmp5_reg_905;
    sc_signal< sc_lv<16> > grp_fu_697_p3;
    sc_signal< sc_lv<16> > tmp6_reg_910;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_252_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_i_phi_fu_263_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_j_phi_fu_274_p4;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_395_p1;
    sc_signal< sc_lv<64> > tmp_22_cast_fu_416_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_486_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_17_cast_fu_513_p1;
    sc_signal< sc_lv<64> > tmp_14_cast_fu_555_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > tmp_20_cast_fu_581_p1;
    sc_signal< sc_lv<64> > tmp_18_cast_fu_585_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > tmp_21_cast_fu_589_p1;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_613_p1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<64> > tmp_16_cast_fu_646_p1;
    sc_signal< sc_lv<1> > exitcond_fu_307_p2;
    sc_signal< sc_lv<2> > i_1_fu_289_p2;
    sc_signal< sc_lv<2> > tmp_7_1_mid1_fu_329_p2;
    sc_signal< sc_lv<3> > tmp_8_2_mid2_v_v_fu_343_p1;
    sc_signal< sc_lv<3> > tmp_8_2_mid2_v_fu_347_p2;
    sc_signal< sc_lv<5> > tmp_7_fu_357_p3;
    sc_signal< sc_lv<6> > p_shl_cast_fu_365_p1;
    sc_signal< sc_lv<6> > tmp_8_2_mid2_cast_fu_353_p1;
    sc_signal< sc_lv<6> > tmp_16_fu_389_p2;
    sc_signal< sc_lv<3> > tmp_4_cast8_fu_375_p1;
    sc_signal< sc_lv<3> > tmp_2_0_2_fu_400_p2;
    sc_signal< sc_lv<6> > tmp_19_fu_410_p2;
    sc_signal< sc_lv<4> > tmp_fu_427_p3;
    sc_signal< sc_lv<6> > p_shl3_cast1_fu_434_p1;
    sc_signal< sc_lv<6> > tmp_mid2_cast1_fu_421_p1;
    sc_signal< sc_lv<5> > p_shl3_cast_fu_438_p1;
    sc_signal< sc_lv<5> > tmp_mid2_cast_fu_424_p1;
    sc_signal< sc_lv<4> > tmp_2_fu_457_p3;
    sc_signal< sc_lv<6> > p_shl1_cast_fu_464_p1;
    sc_signal< sc_lv<6> > tmp_8_1_mid2_cast9_fu_454_p1;
    sc_signal< sc_lv<6> > tmp_3_cast_fu_477_p1;
    sc_signal< sc_lv<6> > tmp_6_fu_442_p2;
    sc_signal< sc_lv<6> > tmp_10_fu_480_p2;
    sc_signal< sc_lv<6> > tmp_3_fu_468_p2;
    sc_signal< sc_lv<5> > tmp_3_cast8_fu_474_p1;
    sc_signal< sc_lv<5> > tmp_8_fu_448_p2;
    sc_signal< sc_lv<6> > tmp_14_fu_508_p2;
    sc_signal< sc_lv<8> > tmp_13_2_1_fu_541_p0;
    sc_signal< sc_lv<8> > tmp_13_2_1_fu_541_p1;
    sc_signal< sc_lv<8> > tmp_13_0_1_fu_575_p0;
    sc_signal< sc_lv<8> > tmp_13_0_1_fu_575_p1;
    sc_signal< sc_lv<8> > tmp_13_0_2_fu_600_p0;
    sc_signal< sc_lv<8> > tmp_13_0_2_fu_600_p1;
    sc_signal< sc_lv<8> > tmp_13_1_1_fu_625_p0;
    sc_signal< sc_lv<8> > tmp_13_1_1_fu_625_p1;
    sc_signal< sc_lv<16> > tmp4_fu_654_p2;
    sc_signal< sc_lv<16> > tmp1_fu_650_p2;
    sc_signal< sc_lv<16> > grp_fu_665_p2;
    sc_signal< sc_lv<16> > grp_fu_673_p2;
    sc_signal< sc_lv<16> > grp_fu_681_p2;
    sc_signal< sc_lv<16> > grp_fu_689_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_pp0_stage4;
    static const sc_lv<7> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_address1();
    void thread_a_ce0();
    void thread_a_ce1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_263_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_252_p4();
    void thread_ap_phi_mux_j_phi_fu_274_p4();
    void thread_ap_ready();
    void thread_b_0_address0();
    void thread_b_0_address1();
    void thread_b_0_ce0();
    void thread_b_0_ce1();
    void thread_b_1_address0();
    void thread_b_1_address1();
    void thread_b_1_ce0();
    void thread_b_1_ce1();
    void thread_b_2_address0();
    void thread_b_2_address1();
    void thread_b_2_ce0();
    void thread_b_2_ce1();
    void thread_exitcond_flatten_fu_295_p2();
    void thread_exitcond_fu_307_p2();
    void thread_grp_fu_665_p2();
    void thread_grp_fu_673_p2();
    void thread_grp_fu_681_p2();
    void thread_grp_fu_689_p2();
    void thread_i_1_fu_289_p2();
    void thread_indvar_flatten_next_fu_301_p2();
    void thread_j_1_fu_379_p2();
    void thread_j_mid2_fu_313_p3();
    void thread_p_shl1_cast_fu_464_p1();
    void thread_p_shl3_cast1_fu_434_p1();
    void thread_p_shl3_cast_fu_438_p1();
    void thread_p_shl_cast_fu_365_p1();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_tmp1_fu_650_p2();
    void thread_tmp4_fu_654_p2();
    void thread_tmp_10_fu_480_p2();
    void thread_tmp_11_fu_491_p2();
    void thread_tmp_12_fu_497_p2();
    void thread_tmp_13_0_1_fu_575_p0();
    void thread_tmp_13_0_1_fu_575_p1();
    void thread_tmp_13_0_2_fu_600_p0();
    void thread_tmp_13_0_2_fu_600_p1();
    void thread_tmp_13_1_1_fu_625_p0();
    void thread_tmp_13_1_1_fu_625_p1();
    void thread_tmp_13_2_1_fu_541_p0();
    void thread_tmp_13_2_1_fu_541_p1();
    void thread_tmp_13_cast_fu_486_p1();
    void thread_tmp_13_fu_502_p2();
    void thread_tmp_14_cast_fu_555_p1();
    void thread_tmp_14_fu_508_p2();
    void thread_tmp_15_cast_fu_613_p1();
    void thread_tmp_15_fu_518_p2();
    void thread_tmp_16_cast_fu_646_p1();
    void thread_tmp_16_fu_389_p2();
    void thread_tmp_17_cast_fu_513_p1();
    void thread_tmp_17_fu_523_p2();
    void thread_tmp_18_cast_fu_585_p1();
    void thread_tmp_18_fu_528_p2();
    void thread_tmp_19_cast_fu_395_p1();
    void thread_tmp_19_fu_410_p2();
    void thread_tmp_20_cast_fu_581_p1();
    void thread_tmp_21_cast_fu_589_p1();
    void thread_tmp_22_cast_fu_416_p1();
    void thread_tmp_2_0_2_fu_400_p2();
    void thread_tmp_2_fu_457_p3();
    void thread_tmp_3_cast8_fu_474_p1();
    void thread_tmp_3_cast_fu_477_p1();
    void thread_tmp_3_fu_468_p2();
    void thread_tmp_4_cast8_fu_375_p1();
    void thread_tmp_5_0_1_cast_fu_385_p1();
    void thread_tmp_5_0_2_cast_fu_406_p1();
    void thread_tmp_6_fu_442_p2();
    void thread_tmp_7_1_mid1_fu_329_p2();
    void thread_tmp_7_fu_357_p3();
    void thread_tmp_8_1_mid2_cast9_fu_454_p1();
    void thread_tmp_8_1_mid2_fu_335_p3();
    void thread_tmp_8_2_mid2_cast_fu_353_p1();
    void thread_tmp_8_2_mid2_v_fu_347_p2();
    void thread_tmp_8_2_mid2_v_v_fu_343_p1();
    void thread_tmp_8_fu_448_p2();
    void thread_tmp_9_fu_369_p2();
    void thread_tmp_fu_427_p3();
    void thread_tmp_mid2_cast1_fu_421_p1();
    void thread_tmp_mid2_cast_fu_424_p1();
    void thread_tmp_mid2_fu_321_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
