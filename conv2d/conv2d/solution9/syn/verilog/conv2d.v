// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.461000,HLS_SYN_LAT=453,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=20,HLS_SYN_FF=964,HLS_SYN_LUT=2412}" *)

module conv2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_2_address1,
        b_2_ce1,
        b_2_q1,
        b_3_address0,
        b_3_ce0,
        b_3_q0,
        b_3_address1,
        b_3_ce1,
        b_3_q1,
        b_4_address0,
        b_4_ce0,
        b_4_q0,
        b_4_address1,
        b_4_ce1,
        b_4_q1,
        b_5_address0,
        b_5_ce0,
        b_5_q0,
        b_5_address1,
        b_5_ce1,
        b_5_q1,
        res_address0,
        res_ce0,
        res_we0,
        res_d0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_pp0_stage1 = 20'd4;
parameter    ap_ST_fsm_pp0_stage2 = 20'd8;
parameter    ap_ST_fsm_pp0_stage3 = 20'd16;
parameter    ap_ST_fsm_pp0_stage4 = 20'd32;
parameter    ap_ST_fsm_pp0_stage5 = 20'd64;
parameter    ap_ST_fsm_pp0_stage6 = 20'd128;
parameter    ap_ST_fsm_pp0_stage7 = 20'd256;
parameter    ap_ST_fsm_pp0_stage8 = 20'd512;
parameter    ap_ST_fsm_pp0_stage9 = 20'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 20'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 20'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 20'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 20'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 20'd262144;
parameter    ap_ST_fsm_state22 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] a_address0;
output   a_ce0;
input  [7:0] a_q0;
output  [6:0] a_address1;
output   a_ce1;
input  [7:0] a_q1;
output  [2:0] b_0_address0;
output   b_0_ce0;
input  [7:0] b_0_q0;
output  [2:0] b_0_address1;
output   b_0_ce1;
input  [7:0] b_0_q1;
output  [2:0] b_1_address0;
output   b_1_ce0;
input  [7:0] b_1_q0;
output  [2:0] b_1_address1;
output   b_1_ce1;
input  [7:0] b_1_q1;
output  [2:0] b_2_address0;
output   b_2_ce0;
input  [7:0] b_2_q0;
output  [2:0] b_2_address1;
output   b_2_ce1;
input  [7:0] b_2_q1;
output  [2:0] b_3_address0;
output   b_3_ce0;
input  [7:0] b_3_q0;
output  [2:0] b_3_address1;
output   b_3_ce1;
input  [7:0] b_3_q1;
output  [2:0] b_4_address0;
output   b_4_ce0;
input  [7:0] b_4_q0;
output  [2:0] b_4_address1;
output   b_4_ce1;
input  [7:0] b_4_q1;
output  [2:0] b_5_address0;
output   b_5_ce0;
input  [7:0] b_5_q0;
output  [2:0] b_5_address1;
output   b_5_ce1;
input  [7:0] b_5_q1;
output  [4:0] res_address0;
output   res_ce0;
output   res_we0;
output  [15:0] res_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] a_address0;
reg a_ce0;
reg[6:0] a_address1;
reg a_ce1;
reg[2:0] b_0_address0;
reg b_0_ce0;
reg[2:0] b_0_address1;
reg b_0_ce1;
reg[2:0] b_1_address0;
reg b_1_ce0;
reg[2:0] b_1_address1;
reg b_1_ce1;
reg[2:0] b_2_address0;
reg b_2_ce0;
reg[2:0] b_2_address1;
reg b_2_ce1;
reg[2:0] b_3_address0;
reg b_3_ce0;
reg[2:0] b_3_address1;
reg b_3_ce1;
reg[2:0] b_4_address0;
reg b_4_ce0;
reg[2:0] b_4_address1;
reg b_4_ce1;
reg[2:0] b_5_address0;
reg b_5_ce0;
reg[2:0] b_5_address1;
reg b_5_ce1;
reg res_ce0;
reg res_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_729;
reg   [2:0] i_reg_740;
reg   [2:0] j_reg_752;
reg  signed [7:0] reg_763;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state21_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond_flatten_reg_2264;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg  signed [7:0] reg_767;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] reg_771;
reg  signed [7:0] reg_776;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire   [2:0] i_1_fu_781_p2;
reg   [2:0] i_1_reg_2259;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state20_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond_flatten_fu_787_p2;
reg   [0:0] exitcond_flatten_reg_2264_pp0_iter1_reg;
wire   [4:0] indvar_flatten_next_fu_793_p2;
reg   [4:0] indvar_flatten_next_reg_2268;
wire   [0:0] exitcond_fu_799_p2;
reg   [0:0] exitcond_reg_2273;
wire   [2:0] j_mid2_fu_805_p3;
reg   [2:0] j_mid2_reg_2280;
reg   [2:0] j_mid2_reg_2280_pp0_iter1_reg;
wire   [2:0] tmp_mid2_fu_813_p3;
reg   [2:0] tmp_mid2_reg_2290;
reg   [2:0] tmp_mid2_reg_2290_pp0_iter1_reg;
wire   [7:0] tmp_6_fu_845_p2;
reg   [7:0] tmp_6_reg_2298;
wire   [3:0] tmp_8_0_4_fu_855_p2;
reg   [3:0] tmp_8_0_4_reg_2306;
wire   [7:0] tmp_9_0_4_cast_fu_861_p1;
reg   [7:0] tmp_9_0_4_cast_reg_2311;
wire   [3:0] tmp_8_0_5_fu_876_p2;
reg   [3:0] tmp_8_0_5_reg_2323;
wire   [7:0] tmp_9_0_5_cast_fu_882_p1;
reg   [7:0] tmp_9_0_5_cast_reg_2328;
wire   [7:0] tmp_10_fu_933_p2;
reg   [7:0] tmp_10_reg_2340;
wire   [2:0] tmp_5_2_mid2_v_fu_946_p2;
reg   [2:0] tmp_5_2_mid2_v_reg_2348;
wire   [2:0] tmp_5_3_mid2_v_fu_964_p3;
reg   [2:0] tmp_5_3_mid2_v_reg_2354;
wire   [7:0] tmp_2_cast_fu_971_p1;
reg   [7:0] tmp_2_cast_reg_2360;
wire   [2:0] j_1_fu_985_p2;
reg   [2:0] j_1_reg_2372;
wire   [7:0] tmp_9_0_1_cast_fu_990_p1;
reg   [7:0] tmp_9_0_1_cast_reg_2378;
reg  signed [7:0] b_0_load_1_reg_2390;
reg  signed [7:0] b_2_load_2_reg_2395;
reg  signed [7:0] b_3_load_2_reg_2400;
reg   [7:0] b_4_load_2_reg_2405;
reg  signed [7:0] b_5_load_2_reg_2410;
reg   [7:0] b_0_load_3_reg_2415;
reg  signed [7:0] b_3_load_3_reg_2420;
wire  signed [15:0] grp_fu_1925_p3;
reg  signed [15:0] tmp7_reg_2425;
wire   [6:0] tmp_13_fu_1049_p2;
reg   [6:0] tmp_13_reg_2430;
wire   [6:0] tmp_9_0_1_cast1_fu_1055_p1;
reg   [6:0] tmp_9_0_1_cast1_reg_2439;
wire   [2:0] tmp_8_0_2_fu_1069_p2;
reg   [2:0] tmp_8_0_2_reg_2449;
wire   [7:0] tmp_9_0_2_cast_fu_1074_p1;
reg   [7:0] tmp_9_0_2_cast_reg_2454;
wire   [15:0] tmp_7_1_1_fu_1096_p2;
reg   [15:0] tmp_7_1_1_reg_2466;
reg   [7:0] b_2_load_3_reg_2471;
reg   [7:0] b_4_load_3_reg_2476;
reg  signed [7:0] b_5_load_3_reg_2481;
reg  signed [7:0] b_0_load_4_reg_2486;
reg   [7:0] b_1_load_4_reg_2491;
reg  signed [7:0] b_2_load_4_reg_2496;
reg   [7:0] b_3_load_4_reg_2501;
reg  signed [7:0] b_4_load_4_reg_2506;
reg   [7:0] b_5_load_4_reg_2511;
reg  signed [7:0] b_0_load_5_reg_2516;
reg  signed [7:0] b_3_load_5_reg_2521;
reg  signed [7:0] b_0_load_reg_2526;
wire   [6:0] tmp_9_0_2_cast1_fu_1102_p1;
reg   [6:0] tmp_9_0_2_cast1_reg_2531;
wire   [2:0] tmp_8_0_3_fu_1115_p2;
reg   [2:0] tmp_8_0_3_reg_2541;
wire   [6:0] tmp_9_0_3_cast1_fu_1120_p1;
reg   [6:0] tmp_9_0_3_cast1_reg_2546;
reg  signed [7:0] b_3_load_reg_2556;
reg   [7:0] b_3_load_1_reg_2561;
reg  signed [7:0] b_4_load_1_reg_2566;
reg   [7:0] b_5_load_1_reg_2571;
reg  signed [7:0] b_0_load_2_reg_2576;
wire   [15:0] tmp_7_2_1_fu_1150_p2;
reg   [15:0] tmp_7_2_1_reg_2581;
reg   [7:0] b_1_load_5_reg_2586;
reg  signed [7:0] b_2_load_5_reg_2591;
reg   [7:0] b_4_load_5_reg_2596;
reg  signed [7:0] b_5_load_5_reg_2601;
wire  signed [15:0] grp_fu_1933_p3;
reg  signed [15:0] tmp9_reg_2606;
wire   [6:0] tmp_9_0_4_cast1_fu_1156_p1;
reg   [6:0] tmp_9_0_4_cast1_reg_2611;
wire   [6:0] tmp_9_0_5_cast1_fu_1169_p1;
reg   [6:0] tmp_9_0_5_cast1_reg_2621;
(* use_dsp48 = "no" *) wire   [15:0] tmp6_fu_1196_p2;
reg   [15:0] tmp6_reg_2631;
wire  signed [15:0] grp_fu_1948_p3;
reg  signed [15:0] tmp15_reg_2636;
wire   [6:0] tmp_25_fu_1231_p2;
reg   [6:0] tmp_25_reg_2641;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [6:0] tmp_39_fu_1257_p2;
reg   [6:0] tmp_39_reg_2656;
wire   [6:0] tmp_45_fu_1262_p2;
reg   [6:0] tmp_45_reg_2661;
wire   [6:0] tmp_51_fu_1267_p2;
reg   [6:0] tmp_51_reg_2666;
wire   [6:0] tmp_57_fu_1272_p2;
reg   [6:0] tmp_57_reg_2671;
wire  signed [15:0] grp_fu_1955_p3;
reg  signed [15:0] tmp17_reg_2676;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
(* use_dsp48 = "no" *) wire   [15:0] tmp14_fu_1333_p2;
reg   [15:0] tmp14_reg_2691;
wire  signed [15:0] grp_fu_1971_p3;
reg  signed [15:0] tmp21_reg_2696;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire  signed [15:0] grp_fu_1979_p3;
reg  signed [15:0] tmp22_reg_2711;
wire   [3:0] tmp_5_4_mid2_v_v_fu_1365_p1;
reg   [3:0] tmp_5_4_mid2_v_v_reg_2716;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [7:0] tmp_19_fu_1398_p2;
reg   [7:0] tmp_19_reg_2721;
(* use_dsp48 = "no" *) wire   [15:0] tmp20_fu_1444_p2;
reg   [15:0] tmp20_reg_2739;
wire  signed [15:0] grp_fu_1987_p3;
reg  signed [15:0] tmp24_reg_2744;
wire   [7:0] tmp_9_0_3_cast_fu_1457_p1;
reg   [7:0] tmp_9_0_3_cast_reg_2754;
wire   [15:0] tmp_7_4_1_fu_1477_p2;
reg   [15:0] tmp_7_4_1_reg_2766;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [15:0] tmp_7_4_3_fu_1515_p2;
reg   [15:0] tmp_7_4_3_reg_2781;
wire  signed [15:0] grp_fu_1995_p3;
reg  signed [15:0] tmp26_reg_2786;
wire   [7:0] tmp_22_fu_1550_p2;
reg   [7:0] tmp_22_reg_2791;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [15:0] tmp_7_4_5_fu_1597_p2;
reg   [15:0] tmp_7_4_5_reg_2809;
(* use_dsp48 = "no" *) wire   [15:0] tmp23_fu_1603_p2;
reg   [15:0] tmp23_reg_2814;
wire  signed [15:0] grp_fu_2010_p3;
reg  signed [15:0] tmp29_reg_2819;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [15:0] tmp_7_5_1_fu_1639_p2;
reg   [15:0] tmp_7_5_1_reg_2834;
wire  signed [15:0] grp_fu_2017_p3;
reg  signed [15:0] tmp30_reg_2839;
wire   [7:0] tmp_23_fu_1645_p2;
reg   [7:0] tmp_23_reg_2844;
wire   [7:0] tmp_30_fu_1649_p2;
reg   [7:0] tmp_30_reg_2849;
wire   [7:0] tmp_36_fu_1653_p2;
reg   [7:0] tmp_36_reg_2854;
wire   [7:0] tmp_42_fu_1657_p2;
reg   [7:0] tmp_42_reg_2859;
wire   [7:0] tmp_43_fu_1661_p2;
reg   [7:0] tmp_43_reg_2864;
wire   [7:0] tmp_49_fu_1665_p2;
reg   [7:0] tmp_49_reg_2869;
wire   [7:0] tmp_55_fu_1678_p2;
reg   [7:0] tmp_55_reg_2879;
wire  signed [15:0] grp_fu_2024_p3;
reg  signed [15:0] tmp32_reg_2889;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire  signed [15:0] grp_fu_2031_p3;
reg  signed [15:0] tmp34_reg_2904;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire  signed [15:0] grp_fu_2039_p3;
reg  signed [15:0] tmp4_reg_2919;
wire   [15:0] tmp27_fu_1770_p2;
reg   [15:0] tmp27_reg_2924;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire  signed [15:0] grp_fu_2055_p3;
reg  signed [15:0] tmp5_reg_2939;
wire   [15:0] tmp18_fu_1809_p2;
reg   [15:0] tmp18_reg_2944;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire   [15:0] tmp2_fu_1846_p2;
reg   [15:0] tmp2_reg_2959;
wire  signed [15:0] grp_fu_2063_p3;
reg  signed [15:0] tmp12_reg_2964;
wire  signed [15:0] grp_fu_2071_p3;
reg  signed [15:0] tmp13_reg_2969;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage1_subdone;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_733_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_i_phi_fu_744_p4;
reg   [2:0] ap_phi_mux_j_phi_fu_756_p4;
wire   [63:0] tmp_50_cast_fu_871_p1;
wire   [63:0] tmp_56_cast_fu_892_p1;
wire   [63:0] tmp_26_cast_fu_980_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_33_cast_fu_1000_p1;
wire   [63:0] tmp_34_cast_fu_1064_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_39_cast_fu_1083_p1;
wire   [63:0] tmp_40_cast_fu_1110_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_46_cast_fu_1129_p1;
wire   [63:0] tmp_52_cast_fu_1164_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_58_cast_fu_1177_p1;
wire   [63:0] tmp_28_cast_fu_1242_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_35_cast_fu_1252_p1;
wire   [63:0] tmp_41_cast_fu_1297_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_47_cast_fu_1301_p1;
wire   [63:0] tmp_53_cast_fu_1337_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_59_cast_fu_1341_p1;
wire   [63:0] tmp_29_cast_fu_1409_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_36_cast_fu_1419_p1;
wire   [63:0] tmp_42_cast_fu_1452_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] tmp_48_cast_fu_1465_p1;
wire   [63:0] tmp_54_cast_fu_1487_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] tmp_60_cast_fu_1496_p1;
wire   [63:0] tmp_30_cast_fu_1561_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] tmp_37_cast_fu_1571_p1;
wire   [63:0] tmp_43_cast_fu_1611_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] tmp_49_cast_fu_1620_p1;
wire   [63:0] tmp_55_cast_fu_1673_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] tmp_61_cast_fu_1686_p1;
wire   [63:0] tmp_25_cast_fu_1698_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] tmp_32_cast_fu_1702_p1;
wire   [63:0] tmp_38_cast_fu_1747_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] tmp_44_cast_fu_1751_p1;
wire   [63:0] tmp_45_cast_fu_1790_p1;
wire    ap_block_pp0_stage16;
wire   [63:0] tmp_51_cast_fu_1801_p1;
wire   [63:0] tmp_27_cast_fu_1814_p1;
wire    ap_block_pp0_stage17;
wire   [63:0] tmp_57_cast_fu_1818_p1;
wire   [63:0] tmp_31_cast_fu_1900_p1;
wire   [5:0] tmp_fu_821_p3;
wire   [3:0] tmp_1_fu_833_p3;
wire   [7:0] p_shl11_cast_fu_829_p1;
wire   [7:0] p_shl12_cast_fu_841_p1;
wire   [3:0] j_cast_fu_851_p1;
wire   [7:0] tmp_48_fu_865_p2;
wire   [7:0] tmp_54_fu_886_p2;
wire   [2:0] i_1_mid1_fu_897_p2;
wire   [2:0] tmp_5_1_mid2_fu_903_p3;
wire   [5:0] tmp_5_fu_909_p3;
wire   [3:0] tmp_8_fu_921_p3;
wire   [7:0] p_shl8_cast_fu_917_p1;
wire   [7:0] p_shl9_cast_fu_929_p1;
wire   [2:0] tmp_5_2_mid2_v_v_cas_fu_939_p3;
wire   [2:0] tmp_4_3_mid1_fu_952_p2;
wire   [2:0] tmp_4_s_fu_958_p2;
wire   [7:0] tmp_24_fu_974_p2;
wire   [7:0] tmp_31_fu_994_p2;
wire  signed [7:0] tmp_7_0_4_fu_1013_p0;
wire  signed [7:0] tmp_7_0_4_fu_1013_p1;
wire   [5:0] tmp_11_fu_1027_p3;
wire   [3:0] tmp_12_fu_1038_p3;
wire   [6:0] p_shl6_cast_fu_1034_p1;
wire   [6:0] p_shl7_cast_fu_1045_p1;
wire   [6:0] tmp_32_fu_1058_p2;
wire   [7:0] tmp_37_fu_1078_p2;
wire  signed [7:0] tmp_7_1_1_fu_1096_p0;
wire  signed [7:0] tmp_7_1_1_fu_1096_p1;
wire   [6:0] tmp_38_fu_1105_p2;
wire   [6:0] tmp_44_fu_1124_p2;
wire  signed [7:0] tmp_7_2_1_fu_1150_p0;
wire  signed [7:0] tmp_7_2_1_fu_1150_p1;
wire   [6:0] tmp_50_fu_1159_p2;
wire   [6:0] tmp_56_fu_1172_p2;
wire  signed [15:0] grp_fu_1940_p3;
wire   [5:0] tmp_14_fu_1200_p3;
wire   [3:0] tmp_15_fu_1211_p3;
wire   [6:0] p_shl4_cast_fu_1207_p1;
wire   [6:0] p_shl5_cast_fu_1218_p1;
wire   [6:0] tmp_2_cast2_fu_1228_p1;
wire   [6:0] tmp_16_fu_1222_p2;
wire   [6:0] tmp_26_fu_1236_p2;
wire   [6:0] tmp_33_fu_1247_p2;
wire  signed [7:0] tmp_7_2_4_fu_1284_p0;
wire  signed [7:0] tmp_7_2_4_fu_1284_p1;
wire  signed [7:0] tmp_7_3_fu_1319_p0;
wire  signed [7:0] tmp_7_3_fu_1319_p1;
wire  signed [15:0] grp_fu_1963_p3;
wire  signed [7:0] tmp_7_3_2_fu_1352_p0;
wire  signed [7:0] tmp_7_3_2_fu_1352_p1;
wire   [3:0] tmp_5_4_mid2_v_fu_1368_p2;
wire   [6:0] tmp_17_fu_1374_p3;
wire   [4:0] tmp_18_fu_1386_p3;
wire   [7:0] p_shl2_cast_fu_1382_p1;
wire   [7:0] p_shl3_cast_fu_1394_p1;
wire   [7:0] tmp_27_fu_1404_p2;
wire   [7:0] tmp_34_fu_1414_p2;
wire  signed [7:0] tmp_7_3_4_fu_1431_p0;
wire  signed [7:0] tmp_7_3_4_fu_1431_p1;
wire   [7:0] tmp_40_fu_1448_p2;
wire   [7:0] tmp_46_fu_1460_p2;
wire  signed [7:0] tmp_7_4_1_fu_1477_p0;
wire  signed [7:0] tmp_7_4_1_fu_1477_p1;
wire   [7:0] tmp_52_fu_1483_p2;
wire   [7:0] tmp_58_fu_1492_p2;
wire  signed [7:0] tmp_7_4_3_fu_1515_p0;
wire  signed [7:0] tmp_7_4_3_fu_1515_p1;
wire   [3:0] tmp_5_5_mid2_v_fu_1521_p2;
wire   [6:0] tmp_20_fu_1526_p3;
wire   [4:0] tmp_21_fu_1538_p3;
wire   [7:0] p_shl_cast_fu_1534_p1;
wire   [7:0] p_shl1_cast_fu_1546_p1;
wire   [7:0] tmp_28_fu_1556_p2;
wire   [7:0] tmp_35_fu_1566_p2;
wire  signed [7:0] tmp_7_4_5_fu_1597_p0;
wire  signed [7:0] tmp_7_4_5_fu_1597_p1;
wire  signed [15:0] grp_fu_2002_p3;
wire   [7:0] tmp_41_fu_1607_p2;
wire   [7:0] tmp_47_fu_1616_p2;
wire  signed [7:0] tmp_7_5_1_fu_1639_p0;
wire  signed [7:0] tmp_7_5_1_fu_1639_p1;
wire   [7:0] tmp_53_fu_1669_p2;
wire   [7:0] tmp_59_fu_1682_p2;
wire  signed [7:0] tmp_7_5_4_fu_1713_p0;
wire  signed [7:0] tmp_7_5_4_fu_1713_p1;
wire  signed [7:0] tmp_7_0_1_fu_1741_p0;
wire  signed [7:0] tmp_7_0_1_fu_1741_p1;
wire  signed [15:0] grp_fu_2047_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp31_fu_1766_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp28_fu_1762_p2;
wire  signed [7:0] tmp_7_0_2_fu_1784_p0;
wire  signed [7:0] tmp_7_0_2_fu_1784_p1;
wire   [15:0] tmp19_fu_1805_p2;
wire  signed [7:0] tmp_7_1_3_fu_1829_p0;
wire  signed [7:0] tmp_7_1_3_fu_1829_p1;
(* use_dsp48 = "no" *) wire   [15:0] tmp3_fu_1842_p2;
wire  signed [7:0] tmp_7_1_5_fu_1858_p0;
wire  signed [7:0] tmp_7_1_5_fu_1858_p1;
wire   [4:0] tmp_2_fu_1874_p3;
wire   [5:0] p_shl10_cast_fu_1881_p1;
wire   [5:0] tmp_mid2_cast_fu_1871_p1;
wire   [5:0] tmp_2_cast1_fu_1891_p1;
wire   [5:0] tmp_9_fu_1885_p2;
wire   [5:0] tmp_29_fu_1894_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp11_fu_1905_p2;
wire   [15:0] tmp10_fu_1909_p2;
wire   [15:0] tmp1_fu_1914_p2;
wire   [15:0] grp_fu_1925_p2;
wire   [15:0] grp_fu_1955_p2;
wire   [15:0] grp_fu_1971_p2;
wire   [15:0] grp_fu_1979_p2;
wire   [15:0] grp_fu_1987_p2;
wire   [15:0] grp_fu_2031_p2;
wire   [15:0] grp_fu_2039_p2;
wire   [15:0] grp_fu_2055_p2;
wire   [15:0] grp_fu_2063_p2;
wire   [15:0] grp_fu_2071_p2;
wire    ap_CS_fsm_state22;
reg   [19:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U1(
    .din0(a_q1),
    .din1(b_5_q0),
    .din2(grp_fu_1925_p2),
    .dout(grp_fu_1925_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U2(
    .din0(a_q0),
    .din1(reg_767),
    .din2(tmp_7_1_1_reg_2466),
    .dout(grp_fu_1933_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U3(
    .din0(reg_776),
    .din1(b_0_load_1_reg_2390),
    .din2(tmp9_reg_2606),
    .dout(grp_fu_1940_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U4(
    .din0(a_q0),
    .din1(b_2_load_2_reg_2395),
    .din2(tmp_7_2_1_reg_2581),
    .dout(grp_fu_1948_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U5(
    .din0(a_q1),
    .din1(b_5_load_2_reg_2410),
    .din2(grp_fu_1955_p2),
    .dout(grp_fu_1955_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U6(
    .din0(reg_776),
    .din1(b_3_load_2_reg_2400),
    .din2(tmp17_reg_2676),
    .dout(grp_fu_1963_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U7(
    .din0(a_q1),
    .din1(reg_763),
    .din2(grp_fu_1971_p2),
    .dout(grp_fu_1971_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U8(
    .din0(a_q1),
    .din1(b_3_load_3_reg_2420),
    .din2(grp_fu_1979_p2),
    .dout(grp_fu_1979_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U9(
    .din0(a_q1),
    .din1(b_5_load_3_reg_2481),
    .din2(grp_fu_1987_p2),
    .dout(grp_fu_1987_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U10(
    .din0(a_q0),
    .din1(b_2_load_4_reg_2496),
    .din2(tmp_7_4_1_reg_2766),
    .dout(grp_fu_1995_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U11(
    .din0(reg_776),
    .din1(b_0_load_4_reg_2486),
    .din2(tmp26_reg_2786),
    .dout(grp_fu_2002_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U12(
    .din0(a_q0),
    .din1(b_4_load_4_reg_2506),
    .din2(tmp_7_4_3_reg_2781),
    .dout(grp_fu_2010_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U13(
    .din0(a_q0),
    .din1(b_0_load_5_reg_2516),
    .din2(tmp_7_4_5_reg_2809),
    .dout(grp_fu_2017_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U14(
    .din0(a_q0),
    .din1(b_2_load_5_reg_2591),
    .din2(tmp_7_5_1_reg_2834),
    .dout(grp_fu_2024_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U15(
    .din0(a_q1),
    .din1(b_5_load_5_reg_2601),
    .din2(grp_fu_2031_p2),
    .dout(grp_fu_2031_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U16(
    .din0(a_q0),
    .din1(b_0_load_reg_2526),
    .din2(grp_fu_2039_p2),
    .dout(grp_fu_2039_p3)
);

conv2d_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdcud_U17(
    .din0(reg_776),
    .din1(b_3_load_5_reg_2521),
    .din2(tmp34_reg_2904),
    .dout(grp_fu_2047_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U18(
    .din0(a_q1),
    .din1(b_3_load_reg_2556),
    .din2(grp_fu_2055_p2),
    .dout(grp_fu_2055_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U19(
    .din0(a_q1),
    .din1(b_4_load_1_reg_2566),
    .din2(grp_fu_2063_p2),
    .dout(grp_fu_2063_p3)
);

conv2d_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
conv2d_mac_muladdbkb_U20(
    .din0(a_q1),
    .din1(b_0_load_2_reg_2576),
    .din2(grp_fu_2071_p2),
    .dout(grp_fu_2071_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        i_reg_740 <= tmp_mid2_reg_2290;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_740 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        indvar_flatten_reg_729 <= indvar_flatten_next_reg_2268;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_729 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        j_reg_752 <= j_1_reg_2372;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_752 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_771 <= b_1_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            reg_771 <= b_1_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond_flatten_reg_2264 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten_reg_2264 == 1'd0)))) begin
        reg_776 <= a_q1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (exitcond_flatten_reg_2264 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_2264 == 1'd0)))) begin
        reg_776 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_2264 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        b_0_load_1_reg_2390 <= b_0_q0;
        b_0_load_3_reg_2415 <= b_0_q1;
        b_2_load_2_reg_2395 <= b_2_q1;
        b_3_load_2_reg_2400 <= b_3_q0;
        b_3_load_3_reg_2420 <= b_3_q1;
        b_4_load_2_reg_2405 <= b_4_q1;
        b_5_load_2_reg_2410 <= b_5_q1;
        j_1_reg_2372 <= j_1_fu_985_p2;
        tmp7_reg_2425 <= grp_fu_1925_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        b_0_load_2_reg_2576 <= b_0_q1;
        b_0_load_reg_2526 <= b_0_q0;
        b_1_load_5_reg_2586 <= b_1_q1;
        b_2_load_5_reg_2591 <= b_2_q1;
        b_3_load_1_reg_2561 <= b_3_q1;
        b_3_load_reg_2556 <= b_3_q0;
        b_4_load_1_reg_2566 <= b_4_q0;
        b_4_load_5_reg_2596 <= b_4_q1;
        b_5_load_1_reg_2571 <= b_5_q0;
        b_5_load_5_reg_2601 <= b_5_q1;
        tmp9_reg_2606 <= grp_fu_1933_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        b_0_load_4_reg_2486 <= b_0_q0;
        b_0_load_5_reg_2516 <= b_0_q1;
        b_1_load_4_reg_2491 <= b_1_q1;
        b_2_load_3_reg_2471 <= b_2_q0;
        b_2_load_4_reg_2496 <= b_2_q1;
        b_3_load_4_reg_2501 <= b_3_q0;
        b_3_load_5_reg_2521 <= b_3_q1;
        b_4_load_3_reg_2476 <= b_4_q0;
        b_4_load_4_reg_2506 <= b_4_q1;
        b_5_load_3_reg_2481 <= b_5_q0;
        b_5_load_4_reg_2511 <= b_5_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_2264 <= exitcond_flatten_fu_787_p2;
        exitcond_flatten_reg_2264_pp0_iter1_reg <= exitcond_flatten_reg_2264;
        i_1_reg_2259 <= i_1_fu_781_p2;
        j_mid2_reg_2280_pp0_iter1_reg <= j_mid2_reg_2280;
        tmp_mid2_reg_2290_pp0_iter1_reg <= tmp_mid2_reg_2290;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_787_p2 == 1'd0))) begin
        exitcond_reg_2273 <= exitcond_fu_799_p2;
        j_mid2_reg_2280 <= j_mid2_fu_805_p3;
        tmp_6_reg_2298[7 : 1] <= tmp_6_fu_845_p2[7 : 1];
        tmp_8_0_4_reg_2306 <= tmp_8_0_4_fu_855_p2;
        tmp_8_0_5_reg_2323 <= tmp_8_0_5_fu_876_p2;
        tmp_9_0_4_cast_reg_2311[3 : 0] <= tmp_9_0_4_cast_fu_861_p1[3 : 0];
        tmp_9_0_5_cast_reg_2328[3 : 0] <= tmp_9_0_5_cast_fu_882_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_2268 <= indvar_flatten_next_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_2264 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_2264 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_763 <= b_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_2264 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_2264 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_767 <= b_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp12_reg_2964 <= grp_fu_2063_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp13_reg_2969 <= grp_fu_2071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp14_reg_2691 <= tmp14_fu_1333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp15_reg_2636 <= grp_fu_1948_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp17_reg_2676 <= grp_fu_1955_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp18_reg_2944 <= tmp18_fu_1809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp20_reg_2739 <= tmp20_fu_1444_p2;
        tmp_19_reg_2721[7 : 1] <= tmp_19_fu_1398_p2[7 : 1];
        tmp_5_4_mid2_v_v_reg_2716[2 : 0] <= tmp_5_4_mid2_v_v_fu_1365_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp21_reg_2696 <= grp_fu_1971_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp22_reg_2711 <= grp_fu_1979_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp23_reg_2814 <= tmp23_fu_1603_p2;
        tmp_22_reg_2791[7 : 1] <= tmp_22_fu_1550_p2[7 : 1];
        tmp_7_4_5_reg_2809 <= tmp_7_4_5_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp24_reg_2744 <= grp_fu_1987_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp26_reg_2786 <= grp_fu_1995_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp27_reg_2924 <= tmp27_fu_1770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp29_reg_2819 <= grp_fu_2010_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp2_reg_2959 <= tmp2_fu_1846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp30_reg_2839 <= grp_fu_2017_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp32_reg_2889 <= grp_fu_2024_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp34_reg_2904 <= grp_fu_2031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp4_reg_2919 <= grp_fu_2039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp5_reg_2939 <= grp_fu_2055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp6_reg_2631 <= tmp6_fu_1196_p2;
        tmp_9_0_4_cast1_reg_2611[3 : 0] <= tmp_9_0_4_cast1_fu_1156_p1[3 : 0];
        tmp_9_0_5_cast1_reg_2621[3 : 0] <= tmp_9_0_5_cast1_fu_1169_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_2264 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_10_reg_2340[7 : 1] <= tmp_10_fu_933_p2[7 : 1];
        tmp_2_cast_reg_2360[2 : 0] <= tmp_2_cast_fu_971_p1[2 : 0];
        tmp_5_2_mid2_v_reg_2348 <= tmp_5_2_mid2_v_fu_946_p2;
        tmp_5_3_mid2_v_reg_2354 <= tmp_5_3_mid2_v_fu_964_p3;
        tmp_9_0_1_cast_reg_2378[2 : 0] <= tmp_9_0_1_cast_fu_990_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_13_reg_2430[6 : 1] <= tmp_13_fu_1049_p2[6 : 1];
        tmp_7_1_1_reg_2466 <= tmp_7_1_1_fu_1096_p2;
        tmp_8_0_2_reg_2449 <= tmp_8_0_2_fu_1069_p2;
        tmp_9_0_1_cast1_reg_2439[2 : 0] <= tmp_9_0_1_cast1_fu_1055_p1[2 : 0];
        tmp_9_0_2_cast_reg_2454[2 : 0] <= tmp_9_0_2_cast_fu_1074_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_23_reg_2844 <= tmp_23_fu_1645_p2;
        tmp_30_reg_2849 <= tmp_30_fu_1649_p2;
        tmp_36_reg_2854 <= tmp_36_fu_1653_p2;
        tmp_42_reg_2859 <= tmp_42_fu_1657_p2;
        tmp_43_reg_2864 <= tmp_43_fu_1661_p2;
        tmp_49_reg_2869 <= tmp_49_fu_1665_p2;
        tmp_55_reg_2879 <= tmp_55_fu_1678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_25_reg_2641 <= tmp_25_fu_1231_p2;
        tmp_39_reg_2656 <= tmp_39_fu_1257_p2;
        tmp_45_reg_2661 <= tmp_45_fu_1262_p2;
        tmp_51_reg_2666 <= tmp_51_fu_1267_p2;
        tmp_57_reg_2671 <= tmp_57_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_7_2_1_reg_2581 <= tmp_7_2_1_fu_1150_p2;
        tmp_8_0_3_reg_2541 <= tmp_8_0_3_fu_1115_p2;
        tmp_9_0_2_cast1_reg_2531[2 : 0] <= tmp_9_0_2_cast1_fu_1102_p1[2 : 0];
        tmp_9_0_3_cast1_reg_2546[2 : 0] <= tmp_9_0_3_cast1_fu_1120_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_7_4_1_reg_2766 <= tmp_7_4_1_fu_1477_p2;
        tmp_9_0_3_cast_reg_2754[2 : 0] <= tmp_9_0_3_cast_fu_1457_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_7_4_3_reg_2781 <= tmp_7_4_3_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        tmp_7_5_1_reg_2834 <= tmp_7_5_1_fu_1639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_787_p2 == 1'd0))) begin
        tmp_mid2_reg_2290 <= tmp_mid2_fu_813_p3;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            a_address0 = tmp_57_cast_fu_1818_p1;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            a_address0 = tmp_45_cast_fu_1790_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            a_address0 = tmp_38_cast_fu_1747_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            a_address0 = tmp_25_cast_fu_1698_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            a_address0 = tmp_55_cast_fu_1673_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            a_address0 = tmp_43_cast_fu_1611_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            a_address0 = tmp_30_cast_fu_1561_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            a_address0 = tmp_54_cast_fu_1487_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            a_address0 = tmp_42_cast_fu_1452_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            a_address0 = tmp_29_cast_fu_1409_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            a_address0 = tmp_53_cast_fu_1337_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            a_address0 = tmp_41_cast_fu_1297_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            a_address0 = tmp_28_cast_fu_1242_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            a_address0 = tmp_52_cast_fu_1164_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            a_address0 = tmp_40_cast_fu_1110_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            a_address0 = tmp_39_cast_fu_1083_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_address0 = tmp_26_cast_fu_980_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_address0 = tmp_50_cast_fu_871_p1;
        end else begin
            a_address0 = 'bx;
        end
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            a_address1 = tmp_27_cast_fu_1814_p1;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            a_address1 = tmp_51_cast_fu_1801_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            a_address1 = tmp_44_cast_fu_1751_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            a_address1 = tmp_32_cast_fu_1702_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            a_address1 = tmp_61_cast_fu_1686_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            a_address1 = tmp_49_cast_fu_1620_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            a_address1 = tmp_37_cast_fu_1571_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            a_address1 = tmp_60_cast_fu_1496_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            a_address1 = tmp_48_cast_fu_1465_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            a_address1 = tmp_36_cast_fu_1419_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            a_address1 = tmp_59_cast_fu_1341_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            a_address1 = tmp_47_cast_fu_1301_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            a_address1 = tmp_35_cast_fu_1252_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            a_address1 = tmp_58_cast_fu_1177_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            a_address1 = tmp_46_cast_fu_1129_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            a_address1 = tmp_34_cast_fu_1064_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_address1 = tmp_33_cast_fu_1000_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_address1 = tmp_56_cast_fu_892_p1;
        end else begin
            a_address1 = 'bx;
        end
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_787_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_744_p4 = tmp_mid2_reg_2290;
    end else begin
        ap_phi_mux_i_phi_fu_744_p4 = i_reg_740;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_733_p4 = indvar_flatten_next_reg_2268;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_733_p4 = indvar_flatten_reg_729;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2264 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_756_p4 = j_1_reg_2372;
    end else begin
        ap_phi_mux_j_phi_fu_756_p4 = j_reg_752;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_0_address0 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_0_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_0_address0 = 64'd1;
        end else begin
            b_0_address0 = 'bx;
        end
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_0_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_0_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_0_address1 = 64'd3;
        end else begin
            b_0_address1 = 'bx;
        end
    end else begin
        b_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_1_address0 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_1_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_1_address0 = 64'd1;
        end else begin
            b_1_address0 = 'bx;
        end
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_1_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_1_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_1_address1 = 64'd2;
        end else begin
            b_1_address1 = 'bx;
        end
    end else begin
        b_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_2_address0 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_2_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_2_address0 = 64'd1;
        end else begin
            b_2_address0 = 'bx;
        end
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_2_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_2_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_2_address1 = 64'd2;
        end else begin
            b_2_address1 = 'bx;
        end
    end else begin
        b_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_2_ce1 = 1'b1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_3_address0 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_3_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_3_address0 = 64'd2;
        end else begin
            b_3_address0 = 'bx;
        end
    end else begin
        b_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_3_address1 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_3_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_3_address1 = 64'd3;
        end else begin
            b_3_address1 = 'bx;
        end
    end else begin
        b_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_3_ce0 = 1'b1;
    end else begin
        b_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_3_ce1 = 1'b1;
    end else begin
        b_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_4_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_4_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_4_address0 = 64'd0;
        end else begin
            b_4_address0 = 'bx;
        end
    end else begin
        b_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_4_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_4_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_4_address1 = 64'd2;
        end else begin
            b_4_address1 = 'bx;
        end
    end else begin
        b_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_4_ce0 = 1'b1;
    end else begin
        b_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_4_ce1 = 1'b1;
    end else begin
        b_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_5_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_5_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_5_address0 = 64'd0;
        end else begin
            b_5_address0 = 'bx;
        end
    end else begin
        b_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            b_5_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_5_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_5_address1 = 64'd2;
        end else begin
            b_5_address1 = 'bx;
        end
    end else begin
        b_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_5_ce0 = 1'b1;
    end else begin
        b_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        b_5_ce1 = 1'b1;
    end else begin
        b_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_2264_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_787_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_787_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_flatten_fu_787_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_733_p4 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond_fu_799_p2 = ((ap_phi_mux_j_phi_fu_756_p4 == 3'd5) ? 1'b1 : 1'b0);

assign grp_fu_1925_p2 = ($signed(tmp_7_0_4_fu_1013_p0) * $signed(tmp_7_0_4_fu_1013_p1));

assign grp_fu_1955_p2 = ($signed(tmp_7_2_4_fu_1284_p0) * $signed(tmp_7_2_4_fu_1284_p1));

assign grp_fu_1971_p2 = ($signed(tmp_7_3_fu_1319_p0) * $signed(tmp_7_3_fu_1319_p1));

assign grp_fu_1979_p2 = ($signed(tmp_7_3_2_fu_1352_p0) * $signed(tmp_7_3_2_fu_1352_p1));

assign grp_fu_1987_p2 = ($signed(tmp_7_3_4_fu_1431_p0) * $signed(tmp_7_3_4_fu_1431_p1));

assign grp_fu_2031_p2 = ($signed(tmp_7_5_4_fu_1713_p0) * $signed(tmp_7_5_4_fu_1713_p1));

assign grp_fu_2039_p2 = ($signed(tmp_7_0_1_fu_1741_p0) * $signed(tmp_7_0_1_fu_1741_p1));

assign grp_fu_2055_p2 = ($signed(tmp_7_0_2_fu_1784_p0) * $signed(tmp_7_0_2_fu_1784_p1));

assign grp_fu_2063_p2 = ($signed(tmp_7_1_3_fu_1829_p0) * $signed(tmp_7_1_3_fu_1829_p1));

assign grp_fu_2071_p2 = ($signed(tmp_7_1_5_fu_1858_p0) * $signed(tmp_7_1_5_fu_1858_p1));

assign i_1_fu_781_p2 = (ap_phi_mux_i_phi_fu_744_p4 + 3'd1);

assign i_1_mid1_fu_897_p2 = (i_reg_740 + 3'd2);

assign indvar_flatten_next_fu_793_p2 = (ap_phi_mux_indvar_flatten_phi_fu_733_p4 + 5'd1);

assign j_1_fu_985_p2 = (j_mid2_reg_2280 + 3'd1);

assign j_cast_fu_851_p1 = j_mid2_fu_805_p3;

assign j_mid2_fu_805_p3 = ((exitcond_fu_799_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_j_phi_fu_756_p4);

assign p_shl10_cast_fu_1881_p1 = tmp_2_fu_1874_p3;

assign p_shl11_cast_fu_829_p1 = tmp_fu_821_p3;

assign p_shl12_cast_fu_841_p1 = tmp_1_fu_833_p3;

assign p_shl1_cast_fu_1546_p1 = tmp_21_fu_1538_p3;

assign p_shl2_cast_fu_1382_p1 = tmp_17_fu_1374_p3;

assign p_shl3_cast_fu_1394_p1 = tmp_18_fu_1386_p3;

assign p_shl4_cast_fu_1207_p1 = tmp_14_fu_1200_p3;

assign p_shl5_cast_fu_1218_p1 = tmp_15_fu_1211_p3;

assign p_shl6_cast_fu_1034_p1 = tmp_11_fu_1027_p3;

assign p_shl7_cast_fu_1045_p1 = tmp_12_fu_1038_p3;

assign p_shl8_cast_fu_917_p1 = tmp_5_fu_909_p3;

assign p_shl9_cast_fu_929_p1 = tmp_8_fu_921_p3;

assign p_shl_cast_fu_1534_p1 = tmp_20_fu_1526_p3;

assign res_address0 = tmp_31_cast_fu_1900_p1;

assign res_d0 = (tmp18_reg_2944 + tmp1_fu_1914_p2);

assign tmp10_fu_1909_p2 = (tmp14_reg_2691 + tmp11_fu_1905_p2);

assign tmp11_fu_1905_p2 = ($signed(tmp13_reg_2969) + $signed(tmp12_reg_2964));

assign tmp14_fu_1333_p2 = ($signed(grp_fu_1963_p3) + $signed(tmp15_reg_2636));

assign tmp18_fu_1809_p2 = (tmp27_reg_2924 + tmp19_fu_1805_p2);

assign tmp19_fu_1805_p2 = (tmp23_reg_2814 + tmp20_reg_2739);

assign tmp1_fu_1914_p2 = (tmp10_fu_1909_p2 + tmp2_reg_2959);

assign tmp20_fu_1444_p2 = ($signed(tmp22_reg_2711) + $signed(tmp21_reg_2696));

assign tmp23_fu_1603_p2 = ($signed(grp_fu_2002_p3) + $signed(tmp24_reg_2744));

assign tmp27_fu_1770_p2 = (tmp31_fu_1766_p2 + tmp28_fu_1762_p2);

assign tmp28_fu_1762_p2 = ($signed(tmp30_reg_2839) + $signed(tmp29_reg_2819));

assign tmp2_fu_1846_p2 = (tmp6_reg_2631 + tmp3_fu_1842_p2);

assign tmp31_fu_1766_p2 = ($signed(grp_fu_2047_p3) + $signed(tmp32_reg_2889));

assign tmp3_fu_1842_p2 = ($signed(tmp5_reg_2939) + $signed(tmp4_reg_2919));

assign tmp6_fu_1196_p2 = ($signed(grp_fu_1940_p3) + $signed(tmp7_reg_2425));

assign tmp_10_fu_933_p2 = (p_shl8_cast_fu_917_p1 + p_shl9_cast_fu_929_p1);

assign tmp_11_fu_1027_p3 = {{tmp_5_2_mid2_v_reg_2348}, {3'd0}};

assign tmp_12_fu_1038_p3 = {{tmp_5_2_mid2_v_reg_2348}, {1'd0}};

assign tmp_13_fu_1049_p2 = (p_shl6_cast_fu_1034_p1 + p_shl7_cast_fu_1045_p1);

assign tmp_14_fu_1200_p3 = {{tmp_5_3_mid2_v_reg_2354}, {3'd0}};

assign tmp_15_fu_1211_p3 = {{tmp_5_3_mid2_v_reg_2354}, {1'd0}};

assign tmp_16_fu_1222_p2 = (p_shl4_cast_fu_1207_p1 + p_shl5_cast_fu_1218_p1);

assign tmp_17_fu_1374_p3 = {{tmp_5_4_mid2_v_fu_1368_p2}, {3'd0}};

assign tmp_18_fu_1386_p3 = {{tmp_5_4_mid2_v_fu_1368_p2}, {1'd0}};

assign tmp_19_fu_1398_p2 = (p_shl2_cast_fu_1382_p1 + p_shl3_cast_fu_1394_p1);

assign tmp_1_fu_833_p3 = {{tmp_mid2_fu_813_p3}, {1'd0}};

assign tmp_20_fu_1526_p3 = {{tmp_5_5_mid2_v_fu_1521_p2}, {3'd0}};

assign tmp_21_fu_1538_p3 = {{tmp_5_5_mid2_v_fu_1521_p2}, {1'd0}};

assign tmp_22_fu_1550_p2 = (p_shl_cast_fu_1534_p1 + p_shl1_cast_fu_1546_p1);

assign tmp_23_fu_1645_p2 = (tmp_2_cast_reg_2360 + tmp_6_reg_2298);

assign tmp_24_fu_974_p2 = (tmp_2_cast_fu_971_p1 + tmp_10_fu_933_p2);

assign tmp_25_cast_fu_1698_p1 = tmp_23_reg_2844;

assign tmp_25_fu_1231_p2 = (tmp_2_cast2_fu_1228_p1 + tmp_13_reg_2430);

assign tmp_26_cast_fu_980_p1 = tmp_24_fu_974_p2;

assign tmp_26_fu_1236_p2 = (tmp_2_cast2_fu_1228_p1 + tmp_16_fu_1222_p2);

assign tmp_27_cast_fu_1814_p1 = tmp_25_reg_2641;

assign tmp_27_fu_1404_p2 = (tmp_2_cast_reg_2360 + tmp_19_fu_1398_p2);

assign tmp_28_cast_fu_1242_p1 = tmp_26_fu_1236_p2;

assign tmp_28_fu_1556_p2 = (tmp_2_cast_reg_2360 + tmp_22_fu_1550_p2);

assign tmp_29_cast_fu_1409_p1 = tmp_27_fu_1404_p2;

assign tmp_29_fu_1894_p2 = (tmp_2_cast1_fu_1891_p1 + tmp_9_fu_1885_p2);

assign tmp_2_cast1_fu_1891_p1 = j_mid2_reg_2280_pp0_iter1_reg;

assign tmp_2_cast2_fu_1228_p1 = j_mid2_reg_2280;

assign tmp_2_cast_fu_971_p1 = j_mid2_reg_2280;

assign tmp_2_fu_1874_p3 = {{tmp_mid2_reg_2290_pp0_iter1_reg}, {2'd0}};

assign tmp_30_cast_fu_1561_p1 = tmp_28_fu_1556_p2;

assign tmp_30_fu_1649_p2 = (tmp_9_0_1_cast_reg_2378 + tmp_6_reg_2298);

assign tmp_31_cast_fu_1900_p1 = tmp_29_fu_1894_p2;

assign tmp_31_fu_994_p2 = (tmp_9_0_1_cast_fu_990_p1 + tmp_10_fu_933_p2);

assign tmp_32_cast_fu_1702_p1 = tmp_30_reg_2849;

assign tmp_32_fu_1058_p2 = (tmp_9_0_1_cast1_fu_1055_p1 + tmp_13_fu_1049_p2);

assign tmp_33_cast_fu_1000_p1 = tmp_31_fu_994_p2;

assign tmp_33_fu_1247_p2 = (tmp_9_0_1_cast1_reg_2439 + tmp_16_fu_1222_p2);

assign tmp_34_cast_fu_1064_p1 = tmp_32_fu_1058_p2;

assign tmp_34_fu_1414_p2 = (tmp_9_0_1_cast_reg_2378 + tmp_19_fu_1398_p2);

assign tmp_35_cast_fu_1252_p1 = tmp_33_fu_1247_p2;

assign tmp_35_fu_1566_p2 = (tmp_9_0_1_cast_reg_2378 + tmp_22_fu_1550_p2);

assign tmp_36_cast_fu_1419_p1 = tmp_34_fu_1414_p2;

assign tmp_36_fu_1653_p2 = (tmp_9_0_2_cast_reg_2454 + tmp_6_reg_2298);

assign tmp_37_cast_fu_1571_p1 = tmp_35_fu_1566_p2;

assign tmp_37_fu_1078_p2 = (tmp_9_0_2_cast_fu_1074_p1 + tmp_10_reg_2340);

assign tmp_38_cast_fu_1747_p1 = tmp_36_reg_2854;

assign tmp_38_fu_1105_p2 = (tmp_9_0_2_cast1_fu_1102_p1 + tmp_13_reg_2430);

assign tmp_39_cast_fu_1083_p1 = tmp_37_fu_1078_p2;

assign tmp_39_fu_1257_p2 = (tmp_9_0_2_cast1_reg_2531 + tmp_16_fu_1222_p2);

assign tmp_40_cast_fu_1110_p1 = tmp_38_fu_1105_p2;

assign tmp_40_fu_1448_p2 = (tmp_9_0_2_cast_reg_2454 + tmp_19_reg_2721);

assign tmp_41_cast_fu_1297_p1 = tmp_39_reg_2656;

assign tmp_41_fu_1607_p2 = (tmp_9_0_2_cast_reg_2454 + tmp_22_reg_2791);

assign tmp_42_cast_fu_1452_p1 = tmp_40_fu_1448_p2;

assign tmp_42_fu_1657_p2 = (tmp_9_0_3_cast_reg_2754 + tmp_6_reg_2298);

assign tmp_43_cast_fu_1611_p1 = tmp_41_fu_1607_p2;

assign tmp_43_fu_1661_p2 = (tmp_9_0_3_cast_reg_2754 + tmp_10_reg_2340);

assign tmp_44_cast_fu_1751_p1 = tmp_42_reg_2859;

assign tmp_44_fu_1124_p2 = (tmp_9_0_3_cast1_fu_1120_p1 + tmp_13_reg_2430);

assign tmp_45_cast_fu_1790_p1 = tmp_43_reg_2864;

assign tmp_45_fu_1262_p2 = (tmp_9_0_3_cast1_reg_2546 + tmp_16_fu_1222_p2);

assign tmp_46_cast_fu_1129_p1 = tmp_44_fu_1124_p2;

assign tmp_46_fu_1460_p2 = (tmp_9_0_3_cast_fu_1457_p1 + tmp_19_reg_2721);

assign tmp_47_cast_fu_1301_p1 = tmp_45_reg_2661;

assign tmp_47_fu_1616_p2 = (tmp_9_0_3_cast_reg_2754 + tmp_22_reg_2791);

assign tmp_48_cast_fu_1465_p1 = tmp_46_fu_1460_p2;

assign tmp_48_fu_865_p2 = (tmp_9_0_4_cast_fu_861_p1 + tmp_6_fu_845_p2);

assign tmp_49_cast_fu_1620_p1 = tmp_47_fu_1616_p2;

assign tmp_49_fu_1665_p2 = (tmp_9_0_4_cast_reg_2311 + tmp_10_reg_2340);

assign tmp_4_3_mid1_fu_952_p2 = (i_reg_740 ^ 3'd4);

assign tmp_4_s_fu_958_p2 = (i_reg_740 + 3'd3);

assign tmp_50_cast_fu_871_p1 = tmp_48_fu_865_p2;

assign tmp_50_fu_1159_p2 = (tmp_9_0_4_cast1_fu_1156_p1 + tmp_13_reg_2430);

assign tmp_51_cast_fu_1801_p1 = tmp_49_reg_2869;

assign tmp_51_fu_1267_p2 = (tmp_9_0_4_cast1_reg_2611 + tmp_16_fu_1222_p2);

assign tmp_52_cast_fu_1164_p1 = tmp_50_fu_1159_p2;

assign tmp_52_fu_1483_p2 = (tmp_9_0_4_cast_reg_2311 + tmp_19_reg_2721);

assign tmp_53_cast_fu_1337_p1 = tmp_51_reg_2666;

assign tmp_53_fu_1669_p2 = (tmp_9_0_4_cast_reg_2311 + tmp_22_reg_2791);

assign tmp_54_cast_fu_1487_p1 = tmp_52_fu_1483_p2;

assign tmp_54_fu_886_p2 = (tmp_9_0_5_cast_fu_882_p1 + tmp_6_fu_845_p2);

assign tmp_55_cast_fu_1673_p1 = tmp_53_fu_1669_p2;

assign tmp_55_fu_1678_p2 = (tmp_9_0_5_cast_reg_2328 + tmp_10_reg_2340);

assign tmp_56_cast_fu_892_p1 = tmp_54_fu_886_p2;

assign tmp_56_fu_1172_p2 = (tmp_9_0_5_cast1_fu_1169_p1 + tmp_13_reg_2430);

assign tmp_57_cast_fu_1818_p1 = tmp_55_reg_2879;

assign tmp_57_fu_1272_p2 = (tmp_9_0_5_cast1_reg_2621 + tmp_16_fu_1222_p2);

assign tmp_58_cast_fu_1177_p1 = tmp_56_fu_1172_p2;

assign tmp_58_fu_1492_p2 = (tmp_9_0_5_cast_reg_2328 + tmp_19_reg_2721);

assign tmp_59_cast_fu_1341_p1 = tmp_57_reg_2671;

assign tmp_59_fu_1682_p2 = (tmp_9_0_5_cast_reg_2328 + tmp_22_reg_2791);

assign tmp_5_1_mid2_fu_903_p3 = ((exitcond_reg_2273[0:0] === 1'b1) ? i_1_mid1_fu_897_p2 : i_1_reg_2259);

assign tmp_5_2_mid2_v_fu_946_p2 = (tmp_5_2_mid2_v_v_cas_fu_939_p3 + i_reg_740);

assign tmp_5_2_mid2_v_v_cas_fu_939_p3 = ((exitcond_reg_2273[0:0] === 1'b1) ? 3'd3 : 3'd2);

assign tmp_5_3_mid2_v_fu_964_p3 = ((exitcond_reg_2273[0:0] === 1'b1) ? tmp_4_3_mid1_fu_952_p2 : tmp_4_s_fu_958_p2);

assign tmp_5_4_mid2_v_fu_1368_p2 = (tmp_5_4_mid2_v_v_fu_1365_p1 + 4'd4);

assign tmp_5_4_mid2_v_v_fu_1365_p1 = tmp_mid2_reg_2290;

assign tmp_5_5_mid2_v_fu_1521_p2 = (tmp_5_4_mid2_v_v_reg_2716 + 4'd5);

assign tmp_5_fu_909_p3 = {{tmp_5_1_mid2_fu_903_p3}, {3'd0}};

assign tmp_60_cast_fu_1496_p1 = tmp_58_fu_1492_p2;

assign tmp_61_cast_fu_1686_p1 = tmp_59_fu_1682_p2;

assign tmp_6_fu_845_p2 = (p_shl11_cast_fu_829_p1 + p_shl12_cast_fu_841_p1);

assign tmp_7_0_1_fu_1741_p0 = a_q1;

assign tmp_7_0_1_fu_1741_p1 = reg_771;

assign tmp_7_0_2_fu_1784_p0 = a_q0;

assign tmp_7_0_2_fu_1784_p1 = reg_767;

assign tmp_7_0_4_fu_1013_p0 = a_q0;

assign tmp_7_0_4_fu_1013_p1 = b_4_q0;

assign tmp_7_1_1_fu_1096_p0 = a_q1;

assign tmp_7_1_1_fu_1096_p1 = reg_763;

assign tmp_7_1_1_fu_1096_p2 = ($signed(tmp_7_1_1_fu_1096_p0) * $signed(tmp_7_1_1_fu_1096_p1));

assign tmp_7_1_3_fu_1829_p0 = a_q0;

assign tmp_7_1_3_fu_1829_p1 = b_3_load_1_reg_2561;

assign tmp_7_1_5_fu_1858_p0 = a_q0;

assign tmp_7_1_5_fu_1858_p1 = b_5_load_1_reg_2571;

assign tmp_7_2_1_fu_1150_p0 = a_q1;

assign tmp_7_2_1_fu_1150_p1 = reg_771;

assign tmp_7_2_1_fu_1150_p2 = ($signed(tmp_7_2_1_fu_1150_p0) * $signed(tmp_7_2_1_fu_1150_p1));

assign tmp_7_2_4_fu_1284_p0 = a_q0;

assign tmp_7_2_4_fu_1284_p1 = b_4_load_2_reg_2405;

assign tmp_7_3_2_fu_1352_p0 = a_q0;

assign tmp_7_3_2_fu_1352_p1 = b_2_load_3_reg_2471;

assign tmp_7_3_4_fu_1431_p0 = a_q0;

assign tmp_7_3_4_fu_1431_p1 = b_4_load_3_reg_2476;

assign tmp_7_3_fu_1319_p0 = a_q0;

assign tmp_7_3_fu_1319_p1 = b_0_load_3_reg_2415;

assign tmp_7_4_1_fu_1477_p0 = a_q1;

assign tmp_7_4_1_fu_1477_p1 = b_1_load_4_reg_2491;

assign tmp_7_4_1_fu_1477_p2 = ($signed(tmp_7_4_1_fu_1477_p0) * $signed(tmp_7_4_1_fu_1477_p1));

assign tmp_7_4_3_fu_1515_p0 = a_q1;

assign tmp_7_4_3_fu_1515_p1 = b_3_load_4_reg_2501;

assign tmp_7_4_3_fu_1515_p2 = ($signed(tmp_7_4_3_fu_1515_p0) * $signed(tmp_7_4_3_fu_1515_p1));

assign tmp_7_4_5_fu_1597_p0 = a_q1;

assign tmp_7_4_5_fu_1597_p1 = b_5_load_4_reg_2511;

assign tmp_7_4_5_fu_1597_p2 = ($signed(tmp_7_4_5_fu_1597_p0) * $signed(tmp_7_4_5_fu_1597_p1));

assign tmp_7_5_1_fu_1639_p0 = a_q1;

assign tmp_7_5_1_fu_1639_p1 = b_1_load_5_reg_2586;

assign tmp_7_5_1_fu_1639_p2 = ($signed(tmp_7_5_1_fu_1639_p0) * $signed(tmp_7_5_1_fu_1639_p1));

assign tmp_7_5_4_fu_1713_p0 = a_q0;

assign tmp_7_5_4_fu_1713_p1 = b_4_load_5_reg_2596;

assign tmp_8_0_2_fu_1069_p2 = (j_mid2_reg_2280 + 3'd2);

assign tmp_8_0_3_fu_1115_p2 = (j_mid2_reg_2280 + 3'd3);

assign tmp_8_0_4_fu_855_p2 = (j_cast_fu_851_p1 + 4'd4);

assign tmp_8_0_5_fu_876_p2 = (j_cast_fu_851_p1 + 4'd5);

assign tmp_8_fu_921_p3 = {{tmp_5_1_mid2_fu_903_p3}, {1'd0}};

assign tmp_9_0_1_cast1_fu_1055_p1 = j_1_reg_2372;

assign tmp_9_0_1_cast_fu_990_p1 = j_1_fu_985_p2;

assign tmp_9_0_2_cast1_fu_1102_p1 = tmp_8_0_2_reg_2449;

assign tmp_9_0_2_cast_fu_1074_p1 = tmp_8_0_2_fu_1069_p2;

assign tmp_9_0_3_cast1_fu_1120_p1 = tmp_8_0_3_fu_1115_p2;

assign tmp_9_0_3_cast_fu_1457_p1 = tmp_8_0_3_reg_2541;

assign tmp_9_0_4_cast1_fu_1156_p1 = tmp_8_0_4_reg_2306;

assign tmp_9_0_4_cast_fu_861_p1 = tmp_8_0_4_fu_855_p2;

assign tmp_9_0_5_cast1_fu_1169_p1 = tmp_8_0_5_reg_2323;

assign tmp_9_0_5_cast_fu_882_p1 = tmp_8_0_5_fu_876_p2;

assign tmp_9_fu_1885_p2 = (p_shl10_cast_fu_1881_p1 + tmp_mid2_cast_fu_1871_p1);

assign tmp_fu_821_p3 = {{tmp_mid2_fu_813_p3}, {3'd0}};

assign tmp_mid2_cast_fu_1871_p1 = tmp_mid2_reg_2290_pp0_iter1_reg;

assign tmp_mid2_fu_813_p3 = ((exitcond_fu_799_p2[0:0] === 1'b1) ? i_1_fu_781_p2 : ap_phi_mux_i_phi_fu_744_p4);

always @ (posedge ap_clk) begin
    tmp_6_reg_2298[0] <= 1'b0;
    tmp_9_0_4_cast_reg_2311[7:4] <= 4'b0000;
    tmp_9_0_5_cast_reg_2328[7:4] <= 4'b0000;
    tmp_10_reg_2340[0] <= 1'b0;
    tmp_2_cast_reg_2360[7:3] <= 5'b00000;
    tmp_9_0_1_cast_reg_2378[7:3] <= 5'b00000;
    tmp_13_reg_2430[0] <= 1'b0;
    tmp_9_0_1_cast1_reg_2439[6:3] <= 4'b0000;
    tmp_9_0_2_cast_reg_2454[7:3] <= 5'b00000;
    tmp_9_0_2_cast1_reg_2531[6:3] <= 4'b0000;
    tmp_9_0_3_cast1_reg_2546[6:3] <= 4'b0000;
    tmp_9_0_4_cast1_reg_2611[6:4] <= 3'b000;
    tmp_9_0_5_cast1_reg_2621[6:4] <= 3'b000;
    tmp_5_4_mid2_v_v_reg_2716[3] <= 1'b0;
    tmp_19_reg_2721[0] <= 1'b0;
    tmp_9_0_3_cast_reg_2754[7:3] <= 5'b00000;
    tmp_22_reg_2791[0] <= 1'b0;
end

endmodule //conv2d
